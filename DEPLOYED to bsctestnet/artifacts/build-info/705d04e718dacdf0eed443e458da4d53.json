{
	"id": "705d04e718dacdf0eed443e458da4d53",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"DividendPayingToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./ERC20.sol\";\nimport \"./SafeMath.sol\";\nimport \"./SafeMathUint.sol\";\nimport \"./SafeMathInt.sol\";\nimport \"./DividendPayingTokenInterface.sol\";\nimport \"./DividendPayingTokenOptionalInterface.sol\";\nimport \"./Ownable.sol\";\n\n\n/// @title Dividend-Paying Token\n/// @author Roger Wu (https://github.com/roger-wu)\n/// @dev A mintable ERC20 token that allows anyone to pay and distribute ether\n///  to token holders as dividends and allows token holders to withdraw their dividends.\n///  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code\ncontract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {\n  using SafeMath for uint256;\n  using SafeMathUint for uint256;\n  using SafeMathInt for int256;\n    \n    address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82); //CAKE Bsc\n    // address public immutable CAKE = address(0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB); // WETH.e AVAX Mainnet\n    // address public immutable CAKE = address(0xD399758C510c11aa708CC8Ed1122c3ed52Daf235); // WETH.e fujic\n\n\n  // With `magnitude`, we can properly distribute dividends even if the amount of received ether is small.\n  // For more discussion about choosing the value of `magnitude`,\n  //  see https://github.com/ethereum/EIPs/issues/1726#issuecomment-472352728\n  uint256 constant internal magnitude = 2**128;\n\n  uint256 internal magnifiedDividendPerShare;\n\n  // About dividendCorrection:\n  // If the token balance of a `_user` is never changed, the dividend of `_user` can be computed with:\n  //   `dividendOf(_user) = dividendPerShare * balanceOf(_user)`.\n  // When `balanceOf(_user)` is changed (via minting/burning/transferring tokens),\n  //   `dividendOf(_user)` should not be changed,\n  //   but the computed value of `dividendPerShare * balanceOf(_user)` is changed.\n  // To keep the `dividendOf(_user)` unchanged, we add a correction term:\n  //   `dividendOf(_user) = dividendPerShare * balanceOf(_user) + dividendCorrectionOf(_user)`,\n  //   where `dividendCorrectionOf(_user)` is updated whenever `balanceOf(_user)` is changed:\n  //   `dividendCorrectionOf(_user) = dividendPerShare * (old balanceOf(_user)) - (new balanceOf(_user))`.\n  // So now `dividendOf(_user)` returns the same value before and after `balanceOf(_user)` is changed.\n  mapping(address => int256) internal magnifiedDividendCorrections;\n  mapping(address => uint256) internal withdrawnDividends;\n\n  uint256 public totalDividendsDistributed;\n\n  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {\n\n  }\n\n\n  function distributeCAKEDividends(uint256 amount) public onlyOwner{\n    require(totalSupply() > 0);\n\n    if (amount > 0) {\n      magnifiedDividendPerShare = magnifiedDividendPerShare.add(\n        (amount).mul(magnitude) / totalSupply()\n      );\n      emit DividendsDistributed(msg.sender, amount);\n\n      totalDividendsDistributed = totalDividendsDistributed.add(amount);\n    }\n  }\n\n  /// @notice Withdraws the ether distributed to the sender.\n  /// @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\n  function withdrawDividend() public virtual override {\n    _withdrawDividendOfUser(msg.sender);\n  }\n\n  /// @notice Withdraws the ether distributed to the sender.\n  /// @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\n function _withdrawDividendOfUser(address payable user) internal returns (uint256) {\n    uint256 _withdrawableDividend = withdrawableDividendOf(user);\n    if (_withdrawableDividend > 0) {\n      withdrawnDividends[user] = withdrawnDividends[user].add(_withdrawableDividend);\n      emit DividendWithdrawn(user, _withdrawableDividend);\n      bool success = IERC20(CAKE).transfer(user, _withdrawableDividend);\n\n      if(!success) {\n        withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend);\n        return 0;\n      }\n\n      return _withdrawableDividend;\n    }\n\n    return 0;\n  }\n\n\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function dividendOf(address _owner) public view override returns(uint256) {\n    return withdrawableDividendOf(_owner);\n  }\n\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function withdrawableDividendOf(address _owner) public view override returns(uint256) {\n    return accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]);\n  }\n\n  /// @notice View the amount of dividend in wei that an address has withdrawn.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has withdrawn.\n  function withdrawnDividendOf(address _owner) public view override returns(uint256) {\n    return withdrawnDividends[_owner];\n  }\n\n\n  /// @notice View the amount of dividend in wei that an address has earned in total.\n  /// @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n  /// = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has earned in total.\n  function accumulativeDividendOf(address _owner) public view override returns(uint256) {\n    return magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\n      .add(magnifiedDividendCorrections[_owner]).toUint256Safe() / magnitude;\n  }\n\n  /// @dev Internal function that transfer tokens from one address to another.\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\n  /// @param from The address to transfer from.\n  /// @param to The address to transfer to.\n  /// @param value The amount to be transferred.\n  function _transfer(address from, address to, uint256 value) internal virtual override {\n    require(false);\n\n    int256 _magCorrection = magnifiedDividendPerShare.mul(value).toInt256Safe();\n    magnifiedDividendCorrections[from] = magnifiedDividendCorrections[from].add(_magCorrection);\n    magnifiedDividendCorrections[to] = magnifiedDividendCorrections[to].sub(_magCorrection);\n  }\n\n  /// @dev Internal function that mints tokens to an account.\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\n  /// @param account The account that will receive the created tokens.\n  /// @param value The amount that will be created.\n  function _mint(address account, uint256 value) internal override {\n    super._mint(account, value);\n\n    magnifiedDividendCorrections[account] = magnifiedDividendCorrections[account]\n      .sub( (magnifiedDividendPerShare.mul(value)).toInt256Safe() );\n  }\n\n  /// @dev Internal function that burns an amount of the token of a given account.\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\n  /// @param account The account whose tokens will be burnt.\n  /// @param value The amount that will be burnt.\n  function _burn(address account, uint256 value) internal override {\n    super._burn(account, value);\n\n    magnifiedDividendCorrections[account] = magnifiedDividendCorrections[account]\n      .add( (magnifiedDividendPerShare.mul(value)).toInt256Safe() );\n  }\n\n  function _setBalance(address account, uint256 newBalance) internal {\n    uint256 currentBalance = balanceOf(account);\n\n    if(newBalance > currentBalance) {\n      uint256 mintAmount = newBalance.sub(currentBalance);\n      _mint(account, mintAmount);\n    } else if(newBalance < currentBalance) {\n      uint256 burnAmount = currentBalance.sub(newBalance);\n      _burn(account, burnAmount);\n    }\n  }\n}\n"
			},
			"Ownable.sol": {
				"content": "pragma solidity ^0.6.2;\n\n// SPDX-License-Identifier: MIT License\n\nimport \"./Context.sol\";\n\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () public {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n\n/// @title Dividend-Paying Token Optional Interface\n/// @author Roger Wu (https://github.com/roger-wu)\n/// @dev OPTIONAL functions for a dividend-paying token contract.\ninterface DividendPayingTokenOptionalInterface {\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function withdrawableDividendOf(address _owner) external view returns(uint256);\n\n  /// @notice View the amount of dividend in wei that an address has withdrawn.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has withdrawn.\n  function withdrawnDividendOf(address _owner) external view returns(uint256);\n\n  /// @notice View the amount of dividend in wei that an address has earned in total.\n  /// @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has earned in total.\n  function accumulativeDividendOf(address _owner) external view returns(uint256);\n}\n"
			},
			"DividendPayingTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n\n/// @title Dividend-Paying Token Interface\n/// @author Roger Wu (https://github.com/roger-wu)\n/// @dev An interface for a dividend-paying token contract.\ninterface DividendPayingTokenInterface {\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function dividendOf(address _owner) external view returns(uint256);\n\n\n  /// @notice Withdraws the ether distributed to the sender.\n  /// @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  ///  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\n  function withdrawDividend() external;\n\n  /// @dev This event MUST emit when ether is distributed to token holders.\n  /// @param from The address which sends ether to this contract.\n  /// @param weiAmount The amount of distributed ether in wei.\n  event DividendsDistributed(\n    address indexed from,\n    uint256 weiAmount\n  );\n\n  /// @dev This event MUST emit when an address withdraws their dividend.\n  /// @param to The address which withdraws ether from this contract.\n  /// @param weiAmount The amount of withdrawn ether in wei.\n  event DividendWithdrawn(\n    address indexed to,\n    uint256 weiAmount\n  );\n}\n"
			},
			"SafeMathInt.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\nMIT License\n\nCopyright (c) 2018 requestnetwork\nCopyright (c) 2018 Fragments, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\npragma solidity ^0.6.2;\n\n/**\n * @title SafeMathInt\n * @dev Math operations for int256 with overflow safety checks.\n */\nlibrary SafeMathInt {\n    int256 private constant MIN_INT256 = int256(1) << 255;\n    int256 private constant MAX_INT256 = ~(int256(1) << 255);\n\n    /**\n     * @dev Multiplies two int256 variables and fails on overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a * b;\n\n        // Detect overflow when multiplying MIN_INT256 with -1\n        require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\n        require((b == 0) || (c / b == a));\n        return c;\n    }\n\n    /**\n     * @dev Division of two int256 variables and fails on overflow.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        // Prevent overflow when dividing MIN_INT256 by -1\n        require(b != -1 || a != MIN_INT256);\n\n        // Solidity already throws when dividing by 0.\n        return a / b;\n    }\n\n    /**\n     * @dev Subtracts two int256 variables and fails on overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a - b;\n        require((b >= 0 && c <= a) || (b < 0 && c > a));\n        return c;\n    }\n\n    /**\n     * @dev Adds two int256 variables and fails on overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a + b;\n        require((b >= 0 && c >= a) || (b < 0 && c < a));\n        return c;\n    }\n\n    /**\n     * @dev Converts to absolute value, and fails on overflow.\n     */\n    function abs(int256 a) internal pure returns (int256) {\n        require(a != MIN_INT256);\n        return a < 0 ? -a : a;\n    }\n\n\n    function toUint256Safe(int256 a) internal pure returns (uint256) {\n        require(a >= 0);\n        return uint256(a);\n    }\n}\n"
			},
			"SafeMathUint.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @title SafeMathUint\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMathUint {\n  function toInt256Safe(uint256 a) internal pure returns (int256) {\n    int256 b = int256(a);\n    require(b >= 0);\n    return b;\n  }\n}\n"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DividendPayingToken.sol": {
				"DividendPayingToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendsDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CAKE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeCAKEDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "dividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDividendsDistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDividend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawableDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "A mintable ERC20 token that allows anyone to pay and distribute ether  to token holders as dividends and allows token holders to withdraw their dividends.  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code",
						"kind": "dev",
						"methods": {
							"accumulativeDividendOf(address)": {
								"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude",
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has earned in total."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"dividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawDividend()": {
								"details": "It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
							},
							"withdrawableDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawnDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has withdrawn."
								}
							}
						},
						"title": "Dividend-Paying Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\n  mstore(0x40, 0xa0)\n    /* \"DividendPayingToken.sol\":880:963  address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82) */\n  mstore(0x80, 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82000000000000000000000000)\n    /* \"DividendPayingToken.sol\":2613:2704  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  dup3\n  mload\n    /* \"DividendPayingToken.sol\":2682:2687  _name */\n  dup4\n  swap2\n  pop\n    /* \"DividendPayingToken.sol\":2689:2696  _symbol */\n  dup3\n  swap1\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  tag_21\n  swap1\n    /* \"ERC20.sol\":2006:2011  _name */\n  0x03\n  swap1\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  dup1\n  mload\n  tag_23\n  swap1\n    /* \"ERC20.sol\":2029:2036  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_22\n  jump\t// in\ntag_23:\n  pop\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"Ownable.sol\":372:389  address msgSender */\n  0x00\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  tag_25\n    /* \"Ownable.sol\":392:402  _msgSender */\n  shl(0x20, tag_26)\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"Ownable.sol\":414:420  _owner */\n  0x05\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n    /* \"Ownable.sol\":340:497  constructor () public {... */\n  pop\n    /* \"DividendPayingToken.sol\":2613:2704  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {... */\n  pop\n  pop\n    /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\n  jump(tag_28)\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\ntag_26:\n    /* \"Context.sol\":665:675  msg.sender */\n  caller\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\ntag_22:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_36)\ntag_28:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85a6b3ae\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa8b9d240\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa8b9d240\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xaafd847a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xba72a955\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x85a6b3ae\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91b89fba\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4ca6ef28\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6a474002\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x27ce0147\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_30:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_30)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_36\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_41\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_44\n      jump\t// in\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n        /* \"DividendPayingToken.sol\":880:963  address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82) */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"DividendPayingToken.sol\":3254:3352  function withdrawDividend() public virtual override {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_56\n      jump\t// in\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_52\n      tag_58\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2568:2608  uint256 public totalDividendsDistributed */\n    tag_14:\n      tag_37\n      tag_60\n      jump\t// in\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_15:\n      tag_50\n      tag_62\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4325:4447  function dividendOf(address _owner) public view override returns(uint256) {... */\n    tag_16:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_65\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_28\n      tag_67\n      jump\t// in\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_18:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_74\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4653:4819  function withdrawableDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_19:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_80\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_21:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n    tag_22:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      calldataload\n      tag_86\n      jump\t// in\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_23:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_89\n      jump\t// in\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_92\n      jump\t// in\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"ERC20.sol\":2204:2209  _name */\n      0x03\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2172:2185  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2197:2209  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2204:2209  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2204:2209  _name */\n      dup3\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup3\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_36:\n        /* \"ERC20.sol\":4298:4302  bool */\n      0x00\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      tag_98\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      tag_99\n        /* \"ERC20.sol\":4323:4333  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"ERC20.sol\":4337:4344  spender */\n      dup5\n        /* \"ERC20.sol\":4346:4352  amount */\n      dup5\n        /* \"ERC20.sol\":4314:4322  _approve */\n      tag_101\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"ERC20.sol\":4370:4374  true */\n      0x01\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_97:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_38:\n        /* \"ERC20.sol\":3293:3305  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_41:\n        /* \"ERC20.sol\":4984:4988  bool */\n      0x00\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      tag_104\n        /* \"ERC20.sol\":5010:5016  sender */\n      dup5\n        /* \"ERC20.sol\":5018:5027  recipient */\n      dup5\n        /* \"ERC20.sol\":5029:5035  amount */\n      dup5\n        /* \"ERC20.sol\":5000:5009  _transfer */\n      tag_2\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_106\n        /* \"ERC20.sol\":5055:5061  sender */\n      dup5\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      tag_107\n        /* \"ERC20.sol\":5063:5073  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_108\n        /* \"ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5077:5088  _allowances */\n      0x01\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      tag_109\n        /* \"ERC20.sol\":5097:5107  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5110  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5077:5114  _allowances[sender][_msgSender()].sub */\n      tag_110\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_108:\n        /* \"ERC20.sol\":5046:5054  _approve */\n      tag_101\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"ERC20.sol\":5184:5188  true */\n      0x01\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":5664:5671  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5761:5789  magnifiedDividendCorrections */\n      0x07\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":1492:1498  2**128 */\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5814  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_112\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5798  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_113\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5749  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      tag_114\n        /* \"DividendPayingToken.sol\":5686:5734  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      tag_115\n        /* \"DividendPayingToken.sol\":5716:5733  balanceOf(_owner) */\n      tag_116\n        /* \"DividendPayingToken.sol\":5790:5796  _owner */\n      dup9\n        /* \"DividendPayingToken.sol\":5716:5725  balanceOf */\n      tag_56\n        /* \"DividendPayingToken.sol\":5716:5733  balanceOf(_owner) */\n      jump\t// in\n    tag_116:\n        /* \"DividendPayingToken.sol\":5686:5711  magnifiedDividendPerShare */\n      sload(0x06)\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5715  magnifiedDividendPerShare.mul */\n      tag_117\n        /* \"DividendPayingToken.sol\":5686:5734  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      jump\t// in\n    tag_115:\n        /* \"DividendPayingToken.sol\":5686:5747  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe */\n      tag_118\n        /* \"DividendPayingToken.sol\":5686:5749  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      jump\t// in\n    tag_114:\n        /* \"DividendPayingToken.sol\":5686:5760  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap1\n      tag_119\n        /* \"DividendPayingToken.sol\":5686:5798  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      jump\t// in\n    tag_113:\n        /* \"DividendPayingToken.sol\":5686:5812  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_120\n        /* \"DividendPayingToken.sol\":5686:5814  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      jump\t// in\n    tag_112:\n        /* \"DividendPayingToken.sol\":5686:5826  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      dup2\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      div\n        /* \"DividendPayingToken.sol\":5679:5826  return magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_111:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_46:\n        /* \"ERC20.sol\":3137:3139  18 */\n      0x12\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_49:\n        /* \"ERC20.sol\":5678:5682  bool */\n      0x00\n        /* \"ERC20.sol\":5694:5777  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_98\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      tag_125\n        /* \"ERC20.sol\":5703:5713  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"ERC20.sol\":5717:5724  spender */\n      dup5\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_108\n        /* \"ERC20.sol\":5765:5775  addedValue */\n      dup6\n        /* \"ERC20.sol\":5726:5737  _allowances */\n      0x01\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      tag_127\n        /* \"ERC20.sol\":5738:5748  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5726:5760  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5726:5764  _allowances[_msgSender()][spender].add */\n      tag_128\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":880:963  address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82) */\n    tag_51:\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      dup2\n      jump\t// out\n        /* \"DividendPayingToken.sol\":3254:3352  function withdrawDividend() public virtual override {... */\n    tag_53:\n        /* \"DividendPayingToken.sol\":3312:3347  _withdrawDividendOfUser(msg.sender) */\n      tag_130\n        /* \"DividendPayingToken.sol\":3336:3346  msg.sender */\n      caller\n        /* \"DividendPayingToken.sol\":3312:3335  _withdrawDividendOfUser */\n      tag_131\n        /* \"DividendPayingToken.sol\":3312:3347  _withdrawDividendOfUser(msg.sender) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"DividendPayingToken.sol\":3254:3352  function withdrawDividend() public virtual override {... */\n      jump\t// out\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      and\n        /* \"ERC20.sol\":3444:3451  uint256 */\n      0x00\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_134\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_135:\n        /* \"Ownable.sol\":1286:1292  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"Ownable.sol\":1302:1303  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1286:1292  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1302:1303  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1315:1321  _owner */\n      0x05\n        /* \"Ownable.sol\":1315:1334  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2568:2608  uint256 public totalDividendsDistributed */\n    tag_60:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_62:\n        /* \"Ownable.sol\":637:643  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"DividendPayingToken.sol\":4325:4447  function dividendOf(address _owner) public view override returns(uint256) {... */\n    tag_65:\n        /* \"DividendPayingToken.sol\":4390:4397  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4412:4442  withdrawableDividendOf(_owner) */\n      tag_97\n        /* \"DividendPayingToken.sol\":4435:4441  _owner */\n      dup3\n        /* \"DividendPayingToken.sol\":4412:4434  withdrawableDividendOf */\n      tag_77\n        /* \"DividendPayingToken.sol\":4412:4442  withdrawableDividendOf(_owner) */\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      0x04\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2385:2398  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      dup3\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_74:\n        /* \"ERC20.sol\":6385:6389  bool */\n      0x00\n        /* \"ERC20.sol\":6401:6530  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_98\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      tag_146\n        /* \"ERC20.sol\":6410:6420  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"ERC20.sol\":6424:6431  spender */\n      dup5\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_108\n        /* \"ERC20.sol\":6472:6487  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6433:6444  _allowances */\n      0x01\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      tag_148\n        /* \"ERC20.sol\":6445:6455  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6433:6467  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6433:6471  _allowances[_msgSender()][spender].sub */\n      tag_110\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4653:4819  function withdrawableDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":4730:4737  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":4787:4805  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":4752:4814  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      tag_97\n      swap1\n        /* \"DividendPayingToken.sol\":4752:4782  accumulativeDividendOf(_owner) */\n      tag_151\n        /* \"DividendPayingToken.sol\":4806:4812  _owner */\n      dup5\n        /* \"DividendPayingToken.sol\":4752:4774  accumulativeDividendOf */\n      tag_44\n        /* \"DividendPayingToken.sol\":4752:4782  accumulativeDividendOf(_owner) */\n      jump\t// in\n    tag_151:\n        /* \"DividendPayingToken.sol\":4752:4786  accumulativeDividendOf(_owner).sub */\n      swap1\n      tag_152\n        /* \"DividendPayingToken.sol\":4752:4814  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_80:\n        /* \"ERC20.sol\":3784:3788  bool */\n      0x00\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      tag_155\n        /* \"ERC20.sol\":3810:3820  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"ERC20.sol\":3824:3833  recipient */\n      dup5\n        /* \"ERC20.sol\":3835:3841  amount */\n      dup5\n        /* \"ERC20.sol\":3800:3809  _transfer */\n      tag_2\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      and\n        /* \"DividendPayingToken.sol\":5101:5108  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5123:5141  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n    tag_86:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_158\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_159\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_159:\n        /* \"DividendPayingToken.sol\":2804:2805  0 */\n      0x00\n        /* \"DividendPayingToken.sol\":2788:2801  totalSupply() */\n      tag_161\n        /* \"DividendPayingToken.sol\":2788:2799  totalSupply */\n      tag_38\n        /* \"DividendPayingToken.sol\":2788:2801  totalSupply() */\n      jump\t// in\n    tag_161:\n        /* \"DividendPayingToken.sol\":2788:2805  totalSupply() > 0 */\n      gt\n        /* \"DividendPayingToken.sol\":2780:2806  require(totalSupply() > 0) */\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n        /* \"DividendPayingToken.sol\":2817:2827  amount > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":2813:3085  if (amount > 0) {... */\n      tag_130\n      jumpi\n        /* \"DividendPayingToken.sol\":2865:2951  magnifiedDividendPerShare.add(... */\n      tag_164\n        /* \"DividendPayingToken.sol\":2930:2943  totalSupply() */\n      tag_165\n        /* \"DividendPayingToken.sol\":2930:2941  totalSupply */\n      tag_38\n        /* \"DividendPayingToken.sol\":2930:2943  totalSupply() */\n      jump\t// in\n    tag_165:\n        /* \"DividendPayingToken.sol\":2904:2927  (amount).mul(magnitude) */\n      tag_166\n        /* \"DividendPayingToken.sol\":2905:2911  amount */\n      dup4\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":2904:2916  (amount).mul */\n      tag_117\n        /* \"DividendPayingToken.sol\":2904:2927  (amount).mul(magnitude) */\n      jump\t// in\n    tag_166:\n        /* \"DividendPayingToken.sol\":2904:2943  (amount).mul(magnitude) / totalSupply() */\n      dup2\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n        /* \"DividendPayingToken.sol\":2865:2890  magnifiedDividendPerShare */\n      sload(0x06)\n      swap2\n        /* \"DividendPayingToken.sol\":2904:2943  (amount).mul(magnitude) / totalSupply() */\n      swap1\n      div\n        /* \"DividendPayingToken.sol\":2865:2894  magnifiedDividendPerShare.add */\n      tag_128\n        /* \"DividendPayingToken.sol\":2865:2951  magnifiedDividendPerShare.add(... */\n      jump\t// in\n    tag_164:\n        /* \"DividendPayingToken.sol\":2837:2862  magnifiedDividendPerShare */\n      0x06\n        /* \"DividendPayingToken.sol\":2837:2951  magnifiedDividendPerShare = magnifiedDividendPerShare.add(... */\n      sstore\n        /* \"DividendPayingToken.sol\":2964:3004  DividendsDistributed(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":2985:2995  msg.sender */\n      caller\n      swap2\n        /* \"DividendPayingToken.sol\":2964:3004  DividendsDistributed(msg.sender, amount) */\n      0xa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":3041:3066  totalDividendsDistributed */\n      sload(0x09)\n        /* \"DividendPayingToken.sol\":3041:3078  totalDividendsDistributed.add(amount) */\n      tag_168\n      swap1\n        /* \"DividendPayingToken.sol\":3071:3077  amount */\n      dup3\n        /* \"DividendPayingToken.sol\":3041:3070  totalDividendsDistributed.add */\n      tag_128\n        /* \"DividendPayingToken.sol\":3041:3078  totalDividendsDistributed.add(amount) */\n      jump\t// in\n    tag_168:\n        /* \"DividendPayingToken.sol\":3013:3038  totalDividendsDistributed */\n      0x09\n        /* \"DividendPayingToken.sol\":3013:3078  totalDividendsDistributed = totalDividendsDistributed.add(amount) */\n      sstore\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4017:4024  uint256 */\n      0x00\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4043:4054  _allowances */\n      0x01\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4043:4070  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_92:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_171\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1578:1600  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":1570:1643  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Ownable.sol\":1679:1685  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"Ownable.sol\":1679:1685  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1679:1685  _owner */\n      0x00\n      swap1\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"Ownable.sol\":1706:1712  _owner */\n      0x05\n        /* \"Ownable.sol\":1706:1723  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9522:9541  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9514:9582  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9600:9621  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9592:9660  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9671:9682  _allowances */\n      0x01\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9671:9698  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9671:9707  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_110:\n        /* \"SafeMath.sol\":1268:1275  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1303:1315  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1295:1301  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1287:1316  require(b <= a, errorMessage) */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_188:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_190\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_188)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_191:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1338:1343  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1616:2075  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_117:\n        /* \"SafeMath.sol\":1674:1681  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1915:1921  a == 0 */\n      dup3\n        /* \"SafeMath.sol\":1911:1956  if (a == 0) {... */\n      tag_193\n      jumpi\n      pop\n        /* \"SafeMath.sol\":1944:1945  0 */\n      0x00\n        /* \"SafeMath.sol\":1937:1945  return 0 */\n      jump(tag_97)\n        /* \"SafeMath.sol\":1911:1956  if (a == 0) {... */\n    tag_193:\n        /* \"SafeMath.sol\":1978:1983  a * b */\n      dup3\n      dup3\n      mul\n        /* \"SafeMath.sol\":1982:1983  b */\n      dup3\n        /* \"SafeMath.sol\":1978:1979  a */\n      dup5\n        /* \"SafeMath.sol\":1978:1983  a * b */\n      dup3\n        /* \"SafeMath.sol\":1978:1979  a */\n      dup2\n        /* \"SafeMath.sol\":2001:2006  c / a */\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"SafeMath.sol\":2001:2011  c / a == b */\n      eq\n        /* \"SafeMath.sol\":1993:2049  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"SafeMath.sol\":2067:2068  c */\n      swap4\n        /* \"SafeMath.sol\":1616:2075  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMathUint.sol\":178:308  function toInt256Safe(uint256 a) internal pure returns (int256) {... */\n    tag_118:\n        /* \"SafeMathUint.sol\":234:240  int256 */\n      0x00\n        /* \"SafeMathUint.sol\":266:267  a */\n      dup2\n        /* \"SafeMathUint.sol\":282:288  b >= 0 */\n      dup2\n      dup2\n      slt\n      iszero\n        /* \"SafeMathUint.sol\":274:289  require(b >= 0) */\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2478:2650  function add(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_119:\n        /* \"SafeMathInt.sol\":2534:2540  int256 */\n      0x00\n        /* \"SafeMathInt.sol\":2563:2568  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMathInt.sol\":2587:2593  b >= 0 */\n      dup2\n      dup4\n      slt\n      dup1\n      iszero\n      swap1\n        /* \"SafeMathInt.sol\":2587:2603  b >= 0 && c >= a */\n      tag_199\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2602:2603  a */\n      dup4\n        /* \"SafeMathInt.sol\":2597:2598  c */\n      dup2\n        /* \"SafeMathInt.sol\":2597:2603  c >= a */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":2587:2603  b >= 0 && c >= a */\n    tag_199:\n        /* \"SafeMathInt.sol\":2586:2624  (b >= 0 && c >= a) || (b < 0 && c < a) */\n      dup1\n      tag_201\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2613:2614  0 */\n      0x00\n        /* \"SafeMathInt.sol\":2609:2610  b */\n      dup4\n        /* \"SafeMathInt.sol\":2609:2614  b < 0 */\n      slt\n        /* \"SafeMathInt.sol\":2609:2623  b < 0 && c < a */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2622:2623  a */\n      dup4\n        /* \"SafeMathInt.sol\":2618:2619  c */\n      dup2\n        /* \"SafeMathInt.sol\":2618:2623  c < a */\n      slt\n        /* \"SafeMathInt.sol\":2609:2623  b < 0 && c < a */\n    tag_201:\n        /* \"SafeMathInt.sol\":2578:2625  require((b >= 0 && c >= a) || (b < 0 && c < a)) */\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2868:2992  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"SafeMathInt.sol\":2924:2931  uint256 */\n      0x00\n        /* \"SafeMathInt.sol\":2956:2957  0 */\n      dup1\n        /* \"SafeMathInt.sol\":2951:2952  a */\n      dup3\n        /* \"SafeMathInt.sol\":2951:2957  a >= 0 */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":2943:2958  require(a >= 0) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n        /* \"SafeMathInt.sol\":2983:2984  a */\n      swap1\n        /* \"SafeMathInt.sol\":2868:2992  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"SafeMath.sol\":368:375  uint256 */\n      0x00\n        /* \"SafeMath.sol\":399:404  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":422:428  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":414:460  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_195\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"DividendPayingToken.sol\":3516:4118  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {... */\n    tag_131:\n        /* \"DividendPayingToken.sol\":3589:3596  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":3604:3633  uint256 _withdrawableDividend */\n      dup1\n        /* \"DividendPayingToken.sol\":3636:3664  withdrawableDividendOf(user) */\n      tag_208\n        /* \"DividendPayingToken.sol\":3659:3663  user */\n      dup4\n        /* \"DividendPayingToken.sol\":3636:3658  withdrawableDividendOf */\n      tag_77\n        /* \"DividendPayingToken.sol\":3636:3664  withdrawableDividendOf(user) */\n      jump\t// in\n    tag_208:\n        /* \"DividendPayingToken.sol\":3604:3664  uint256 _withdrawableDividend = withdrawableDividendOf(user) */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":3674:3699  _withdrawableDividend > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":3670:4099  if (_withdrawableDividend > 0) {... */\n      tag_209\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3736:3760  withdrawnDividends[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3736:3754  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3736:3760  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3736:3787  withdrawnDividends[user].add(_withdrawableDividend) */\n      tag_210\n      swap1\n        /* \"DividendPayingToken.sol\":3765:3786  _withdrawableDividend */\n      dup3\n        /* \"DividendPayingToken.sol\":3736:3764  withdrawnDividends[user].add */\n      tag_128\n        /* \"DividendPayingToken.sol\":3736:3787  withdrawnDividends[user].add(_withdrawableDividend) */\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3709:3727  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DividendPayingToken.sol\":3709:3787  withdrawnDividends[user] = withdrawnDividends[user].add(_withdrawableDividend) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"DividendPayingToken.sol\":3800:3846  DividendWithdrawn(user, _withdrawableDividend) */\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      swap2\n      swap3\n        /* \"DividendPayingToken.sol\":3800:3846  DividendWithdrawn(user, _withdrawableDividend) */\n      0xee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":3854:3866  bool success */\n      0x00\n        /* \"DividendPayingToken.sol\":3876:3880  CAKE */\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3869:3890  IERC20(CAKE).transfer */\n      and\n      0xa9059cbb\n        /* \"DividendPayingToken.sol\":3891:3895  user */\n      dup6\n        /* \"DividendPayingToken.sol\":3897:3918  _withdrawableDividend */\n      dup5\n        /* \"DividendPayingToken.sol\":3869:3919  IERC20(CAKE).transfer(user, _withdrawableDividend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      mload\n      swap1\n      pop\n      dup1\n        /* \"DividendPayingToken.sol\":3928:4056  if(!success) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3978:4002  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3978:3996  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3978:4002  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3978:4029  withdrawnDividends[user].sub(_withdrawableDividend) */\n      tag_216\n      swap1\n        /* \"DividendPayingToken.sol\":4007:4028  _withdrawableDividend */\n      dup4\n        /* \"DividendPayingToken.sol\":3978:4006  withdrawnDividends[user].sub */\n      tag_152\n        /* \"DividendPayingToken.sol\":3978:4029  withdrawnDividends[user].sub(_withdrawableDividend) */\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3951:3969  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DividendPayingToken.sol\":3951:4029  withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      swap3\n      pop\n        /* \"DividendPayingToken.sol\":4039:4047  return 0 */\n      tag_111\n      swap2\n      pop\n      pop\n      jump\n        /* \"DividendPayingToken.sol\":3928:4056  if(!success) {... */\n    tag_215:\n      pop\n        /* \"DividendPayingToken.sol\":4071:4092  _withdrawableDividend */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":4064:4092  return _withdrawableDividend */\n      jump(tag_111)\n        /* \"DividendPayingToken.sol\":3670:4099  if (_withdrawableDividend > 0) {... */\n    tag_209:\n      pop\n        /* \"DividendPayingToken.sol\":4112:4113  0 */\n      0x00\n      swap3\n        /* \"DividendPayingToken.sol\":3516:4118  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":757:891  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_152:\n        /* \"SafeMath.sol\":815:822  uint256 */\n      0x00\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_195\n        /* \"SafeMath.sol\":845:846  a */\n      dup4\n        /* \"SafeMath.sol\":848:849  b */\n      dup4\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"SafeMath.sol\":841:844  sub */\n      tag_110\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220db55212306fd4e1296f0c6f677bd9463fc22d8e18cf8929cd33267fcea38d0fc64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a06040527f0e09fabb73bd3ade0a17ecc321fd13a19e81ce820000000000000000000000006080523480156200003557600080fd5b506040516200137238038062001372833981810160405260408110156200005b57600080fd5b81019080805160405193929190846401000000008211156200007c57600080fd5b9083019060208201858111156200009257600080fd5b8251640100000000811182820188101715620000ad57600080fd5b82525081516020918201929091019080838360005b83811015620000dc578181015183820152602001620000c2565b50505050905090810190601f1680156200010a5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200012e57600080fd5b9083019060208201858111156200014457600080fd5b82516401000000008111828201881017156200015f57600080fd5b82525081516020918201929091019080838360005b838110156200018e57818101518382015260200162000174565b50505050905090810190601f168015620001bc5780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001dc90600390602085019062000261565b508051620001f290600490602084019062000261565b5050506000620002076200025d60201b60201c565b600580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505050620002fd565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a457805160ff1916838001178555620002d4565b82800160010185558215620002d4579182015b82811115620002d4578251825591602001919060010190620002b7565b50620002e2929150620002e6565b5090565b5b80821115620002e25760008155600101620002e7565b60805160601c61105262000320600039806106685280610dfe52506110526000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806385a6b3ae116100b8578063a8b9d2401161007c578063a8b9d2401461038a578063a9059cbb146103b0578063aafd847a146103dc578063ba72a95514610402578063dd62ed3e1461041f578063f2fde38b1461044d57610142565b806385a6b3ae146103205780638da5cb5b1461032857806391b89fba1461033057806395d89b4114610356578063a457c2d71461035e57610142565b8063313ce5671161010a578063313ce5671461027a57806339509351146102985780634ca6ef28146102c45780636a474002146102e857806370a08231146102f2578063715018a61461031857610142565b806306fdde0314610147578063095ea7b3146101c457806318160ddd1461020457806323b872dd1461021e57806327ce014714610254575b600080fd5b61014f610473565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b038135169060200135610509565b604080519115158252519081900360200190f35b61020c610527565b60408051918252519081900360200190f35b6101f06004803603606081101561023457600080fd5b506001600160a01b0381358116916020810135909116906040013561052d565b61020c6004803603602081101561026a57600080fd5b50356001600160a01b03166105b4565b610282610613565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156102ae57600080fd5b506001600160a01b038135169060200135610618565b6102cc610666565b604080516001600160a01b039092168252519081900360200190f35b6102f061068a565b005b61020c6004803603602081101561030857600080fd5b50356001600160a01b0316610696565b6102f06106b1565b61020c610765565b6102cc61076b565b61020c6004803603602081101561034657600080fd5b50356001600160a01b031661077a565b61014f610785565b6101f06004803603604081101561037457600080fd5b506001600160a01b0381351690602001356107e6565b61020c600480360360208110156103a057600080fd5b50356001600160a01b031661084e565b6101f0600480360360408110156103c657600080fd5b506001600160a01b03813516906020013561087a565b61020c600480360360208110156103f257600080fd5b50356001600160a01b031661088e565b6102f06004803603602081101561041857600080fd5b50356108a9565b61020c6004803603604081101561043557600080fd5b506001600160a01b03813581169160200135166109a4565b6102f06004803603602081101561046357600080fd5b50356001600160a01b03166109cf565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b600061051d610516610ada565b8484610ade565b5060015b92915050565b60025490565b600061053a848484610142565b6105aa84610546610ada565b6105a585604051806060016040528060288152602001610fac602891396001600160a01b038a16600090815260016020526040812090610584610ada565b6001600160a01b031681526020810191909152604001600020549190610bca565b610ade565b5060019392505050565b6001600160a01b038116600090815260076020526040812054600160801b90610603906105fe906105f86105f36105ea88610696565b60065490610c61565b610cc1565b90610cd1565b610d04565b8161060a57fe5b0490505b919050565b601290565b600061051d610625610ada565b846105a58560016000610636610ada565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610d17565b7f000000000000000000000000000000000000000000000000000000000000000081565b61069333610d71565b50565b6001600160a01b031660009081526020819052604090205490565b6106b9610ada565b6005546001600160a01b0390811691161461071b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b60095481565b6005546001600160a01b031690565b60006105218261084e565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ff5780601f106104d4576101008083540402835291602001916104ff565b600061051d6107f3610ada565b846105a585604051806060016040528060258152602001610ff8602591396001600061081d610ada565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610bca565b6001600160a01b03811660009081526008602052604081205461052190610874846105b4565b90610f00565b600061051d610887610ada565b8484610142565b6001600160a01b031660009081526008602052604090205490565b6108b1610ada565b6005546001600160a01b03908116911614610913576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600061091d610527565b1161092757600080fd5b801561069357610958610938610527565b61094683600160801b610c61565b8161094d57fe5b600654919004610d17565b60065560408051828152905133917fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511919081900360200190a260095461099e9082610d17565b60095550565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6109d7610ada565b6005546001600160a01b03908116911614610a39576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610a7e5760405162461bcd60e51b8152600401808060200182810382526026815260200180610f436026913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b038316610b235760405162461bcd60e51b8152600401808060200182810382526024815260200180610fd46024913960400191505060405180910390fd5b6001600160a01b038216610b685760405162461bcd60e51b8152600401808060200182810382526022815260200180610f696022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008184841115610c595760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c1e578181015183820152602001610c06565b50505050905090810190601f168015610c4b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610c7057506000610521565b82820282848281610c7d57fe5b0414610cba5760405162461bcd60e51b8152600401808060200182810382526021815260200180610f8b6021913960400191505060405180910390fd5b9392505050565b6000818181121561052157600080fd5b6000828201818312801590610ce65750838112155b80610cfb5750600083128015610cfb57508381125b610cba57600080fd5b600080821215610d1357600080fd5b5090565b600082820183811015610cba576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080610d7d8361084e565b90508015610ef7576001600160a01b038316600090815260086020526040902054610da89082610d17565b6001600160a01b038416600081815260086020908152604091829020939093558051848152905191927fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d92918290030190a260007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050506040513d6020811015610e9d57600080fd5b5051905080610eef576001600160a01b038416600090815260086020526040902054610ec99083610f00565b6001600160a01b038516600090815260086020526040812091909155925061060e915050565b50905061060e565b50600092915050565b6000610cba83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bca56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220db55212306fd4e1296f0c6f677bd9463fc22d8e18cf8929cd33267fcea38d0fc64736f6c634300060c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH32 0xE09FABB73BD3ADE0A17ECC321FD13A19E81CE82000000000000000000000000 PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1372 CODESIZE SUB DUP1 PUSH3 0x1372 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xDC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xC2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x10A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x18E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH3 0x1DC SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1F2 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH3 0x207 PUSH3 0x25D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP POP POP PUSH3 0x2FD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2A4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B7 JUMP JUMPDEST POP PUSH3 0x2E2 SWAP3 SWAP2 POP PUSH3 0x2E6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2E7 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x1052 PUSH3 0x320 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x668 MSTORE DUP1 PUSH2 0xDFE MSTORE POP PUSH2 0x1052 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8B9D240 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x35E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x618 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x696 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x76B JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x77A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x785 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88E JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x516 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x5AA DUP5 PUSH2 0x546 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFAC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x584 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x603 SWAP1 PUSH2 0x5FE SWAP1 PUSH2 0x5F8 PUSH2 0x5F3 PUSH2 0x5EA DUP9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST DUP2 PUSH2 0x60A JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x625 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x636 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x693 CALLER PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 DUP3 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x7F3 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x81D PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x874 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x887 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x913 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH2 0x527 JUMP JUMPDEST GT PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x693 JUMPI PUSH2 0x958 PUSH2 0x938 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x946 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0x99E SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF43 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF69 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC06 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC4B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC70 JUMPI POP PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC7D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xCE6 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0xCFB JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCFB JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7D DUP4 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDA8 SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x60E SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x60E JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBCA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x536166654D6174683A206D756C7469706C696361 PUSH21 0x696F6E206F766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DB55 0x21 0x23 MOD REVERT 0x4E SLT SWAP7 CREATE 0xC6 0xF6 PUSH24 0xBD9463FC22D8E18CF8929CD33267FCEA38D0FC64736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "658:7293:1:-:0;;;880:83;;;2613:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2613:91:1;;-1:-1:-1;;2006:13:4;;2682:5:1;;-1:-1:-1;2689:7:1;;2006:13:4;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2029:17:4;;;;:7;;:17;;;;;:::i;:::-;;1933:120;;372:17:7;392:12;:10;;;:12;;:::i;:::-;414:6;:18;;-1:-1:-1;;;;;;414:18:7;-1:-1:-1;;;;;414:18:7;;;;;;;;447:43;;414:18;;-1:-1:-1;414:18:7;-1:-1:-1;;447:43:7;;-1:-1:-1;;447:43:7;340:157;2613:91:1;;658:7293;;586:96:0;665:10;586:96;:::o;658:7293:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;658:7293:1;;;-1:-1:-1;658:7293:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"55": [
									{
										"length": 32,
										"start": 1640
									},
									{
										"length": 32,
										"start": 3582
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8B9D240 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x35E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x618 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x696 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x76B JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x77A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x785 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88E JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x516 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x5AA DUP5 PUSH2 0x546 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFAC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x584 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x603 SWAP1 PUSH2 0x5FE SWAP1 PUSH2 0x5F8 PUSH2 0x5F3 PUSH2 0x5EA DUP9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST DUP2 PUSH2 0x60A JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x625 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x636 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x693 CALLER PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 DUP3 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x7F3 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x81D PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x874 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x887 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x913 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH2 0x527 JUMP JUMPDEST GT PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x693 JUMPI PUSH2 0x958 PUSH2 0x938 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x946 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0x99E SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF43 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF69 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC06 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC4B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC70 JUMPI POP PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC7D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xCE6 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0xCFB JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCFB JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7D DUP4 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDA8 SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x60E SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x60E JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBCA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x536166654D6174683A206D756C7469706C696361 PUSH21 0x696F6E206F766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DB55 0x21 0x23 MOD REVERT 0x4E SLT SWAP7 CREATE 0xC6 0xF6 PUSH24 0xBD9463FC22D8E18CF8929CD33267FCEA38D0FC64736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "658:7293:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4215:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3206:106;;;:::i;:::-;;;;;;;;;;;;;;;;4848:347;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4848:347:4;;;;;;;;;;;;;;;;;:::i;5587:244:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5587:244:1;-1:-1:-1;;;;;5587:244:1;;:::i;3055:91:4:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5590:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5590:215:4;;;;;;;;:::i;880:83:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;880:83:1;;;;;;;;;;;;;;3254:98;;;:::i;:::-;;3370:125:4;;;;;;;;;;;;;;;;-1:-1:-1;3370:125:4;-1:-1:-1;;;;;3370:125:4;;:::i;1196:145:7:-;;;:::i;2568:40:1:-;;;:::i;573:77:7:-;;;:::i;4325:122:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4325:122:1;-1:-1:-1;;;;;4325:122:1;;:::i;2329:102:4:-;;;:::i;6292:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6292:266:4;;;;;;;;:::i;4653:166:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4653:166:1;-1:-1:-1;;;;;4653:166:1;;:::i;3698:172:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3698:172:4;;;;;;;;:::i;5027:127:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5027:127:1;-1:-1:-1;;;;;5027:127:1;;:::i;2709:380::-;;;;;;;;;;;;;;;;-1:-1:-1;2709:380:1;;:::i;3928:149:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3928:149:4;;;;;;;;;;:::i;1490:240:7:-;;;;;;;;;;;;;;;;-1:-1:-1;1490:240:7;-1:-1:-1;;;;;1490:240:7;;:::i;2118:98:4:-;2204:5;2197:12;;;;;;;;-1:-1:-1;;2197:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:13;;2197:12;;2204:5;;2197:12;;2204:5;2197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;:::o;4215:166::-;4298:4;4314:39;4323:12;:10;:12::i;:::-;4337:7;4346:6;4314:8;:39::i;:::-;-1:-1:-1;4370:4:4;4215:166;;;;;:::o;3206:106::-;3293:12;;3206:106;:::o;4848:347::-;4984:4;5000:36;5010:6;5018:9;5029:6;5000:9;:36::i;:::-;5046:121;5055:6;5063:12;:10;:12::i;:::-;5077:89;5115:6;5077:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5077:19:4;;;;;;:11;:19;;;;;;5097:12;:10;:12::i;:::-;-1:-1:-1;;;;;5077:33:4;;;;;;;;;;;;-1:-1:-1;5077:33:4;;;:89;:37;:89::i;:::-;5046:8;:121::i;:::-;-1:-1:-1;5184:4:4;4848:347;;;;;:::o;5587:244:1:-;-1:-1:-1;;;;;5761:36:1;;5664:7;5761:36;;;:28;:36;;;;;;-1:-1:-1;;;1492:6:1;5686:128;;:112;;:63;:48;5716:17;5790:6;5716:9;:17::i;:::-;5686:25;;;:29;:48::i;:::-;:61;:63::i;:::-;:74;;:112::i;:::-;:126;:128::i;:::-;:140;;;;;;5679:147;;5587:244;;;;:::o;3055:91:4:-;3137:2;3055:91;:::o;5590:215::-;5678:4;5694:83;5703:12;:10;:12::i;:::-;5717:7;5726:50;5765:10;5726:11;:25;5738:12;:10;:12::i;:::-;-1:-1:-1;;;;;5726:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5726:25:4;;;:34;;;;;;;;;;;:38;:50::i;880:83:1:-;;;:::o;3254:98::-;3312:35;3336:10;3312:23;:35::i;:::-;;3254:98::o;3370:125:4:-;-1:-1:-1;;;;;3470:18:4;3444:7;3470:18;;;;;;;;;;;;3370:125::o;1196:145:7:-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:7;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:6:::1;::::0;1265:40:::1;::::0;1302:1:::1;::::0;-1:-1:-1;;;;;1286:6:7::1;::::0;1265:40:::1;::::0;1302:1;;1265:40:::1;1315:6;:19:::0;;-1:-1:-1;;;;;;1315:19:7::1;::::0;;1196:145::o;2568:40:1:-;;;;:::o;573:77:7:-;637:6;;-1:-1:-1;;;;;637:6:7;573:77;:::o;4325:122:1:-;4390:7;4412:30;4435:6;4412:22;:30::i;2329:102:4:-;2417:7;2410:14;;;;;;;;-1:-1:-1;;2410:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:13;;2410:14;;2417:7;;2410:14;;2417:7;2410:14;;;;;;;;;;;;;;;;;;;;;;;;6292:266;6385:4;6401:129;6410:12;:10;:12::i;:::-;6424:7;6433:96;6472:15;6433:96;;;;;;;;;;;;;;;;;:11;:25;6445:12;:10;:12::i;:::-;-1:-1:-1;;;;;6433:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6433:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;4653:166:1:-;-1:-1:-1;;;;;4787:26:1;;4730:7;4787:26;;;:18;:26;;;;;;4752:62;;:30;4806:6;4752:22;:30::i;:::-;:34;;:62::i;3698:172:4:-;3784:4;3800:42;3810:12;:10;:12::i;:::-;3824:9;3835:6;3800:9;:42::i;5027:127:1:-;-1:-1:-1;;;;;5123:26:1;5101:7;5123:26;;;:18;:26;;;;;;;5027:127::o;2709:380::-;787:12:7;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:7;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2804:1:1::1;2788:13;:11;:13::i;:::-;:17;2780:26;;;::::0;::::1;;2817:10:::0;;2813:272:::1;;2865:86;2930:13;:11;:13::i;:::-;2904:23;2905:6:::0;-1:-1:-1;;;2904:12:1::1;:23::i;:::-;:39;;;;;2865:25;::::0;;2904:39;::::1;2865:29;:86::i;:::-;2837:25;:114:::0;2964:40:::1;::::0;;;;;;;2985:10:::1;::::0;2964:40:::1;::::0;;;;;::::1;::::0;;::::1;3041:25;::::0;:37:::1;::::0;3071:6;3041:29:::1;:37::i;:::-;3013:25;:65:::0;2709:380;:::o;3928:149:4:-;-1:-1:-1;;;;;4043:18:4;;;4017:7;4043:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3928:149::o;1490:240:7:-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:7;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1578:22:7;::::1;1570:73;;;;-1:-1:-1::0;;;1570:73:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:6;::::0;1658:38:::1;::::0;-1:-1:-1;;;;;1658:38:7;;::::1;::::0;1679:6:::1;::::0;1658:38:::1;::::0;1679:6:::1;::::0;1658:38:::1;1706:6;:17:::0;;-1:-1:-1;;;;;;1706:17:7::1;-1:-1:-1::0;;;;;1706:17:7;;;::::1;::::0;;;::::1;::::0;;1490:240::o;586:96:0:-;665:10;586:96;:::o;9391:370:4:-;-1:-1:-1;;;;;9522:19:4;;9514:68;;;;-1:-1:-1;;;9514:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9600:21:4;;9592:68;;;;-1:-1:-1;;;9592:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9671:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9722:32;;;;;;;;;;;;;;;;;9391:370;;;:::o;1182:187:8:-;1268:7;1303:12;1295:6;;;;1287:29;;;;-1:-1:-1;;;1287:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1338:5:8;;;1182:187::o;1616:459::-;1674:7;1915:6;1911:45;;-1:-1:-1;1944:1:8;1937:8;;1911:45;1978:5;;;1982:1;1978;:5;:1;2001:5;;;;;:10;1993:56;;;;-1:-1:-1;;;1993:56:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:1;1616:459;-1:-1:-1;;;1616:459:8:o;178:130:10:-;234:6;266:1;282:6;;;;274:15;;;;;2478:172:9;2534:6;2563:5;;;2587:6;;;;;;:16;;;2602:1;2597;:6;;2587:16;2586:38;;;;2613:1;2609;:5;:14;;;;;2622:1;2618;:5;2609:14;2578:47;;;;;2868:124;2924:7;2956:1;2951;:6;;2943:15;;;;;;-1:-1:-1;2983:1:9;2868:124::o;310:176:8:-;368:7;399:5;;;422:6;;;;414:46;;;;;-1:-1:-1;;;414:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:602:1;3589:7;3604:29;3636:28;3659:4;3636:22;:28::i;:::-;3604:60;-1:-1:-1;3674:25:1;;3670:429;;-1:-1:-1;;;;;3736:24:1;;;;;;:18;:24;;;;;;:51;;3765:21;3736:28;:51::i;:::-;-1:-1:-1;;;;;3709:24:1;;;;;;:18;:24;;;;;;;;;:78;;;;3800:46;;;;;;;3709:24;;3800:46;;;;;;;;;3854:12;3876:4;-1:-1:-1;;;;;3869:21:1;;3891:4;3897:21;3869:50;;;;;;;;;;;;;-1:-1:-1;;;;;3869:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3869:50:1;;-1:-1:-1;3869:50:1;3928:128;;-1:-1:-1;;;;;3978:24:1;;;;;;:18;:24;;;;;;:51;;4007:21;3978:28;:51::i;:::-;-1:-1:-1;;;;;3951:24:1;;;;;;:18;:24;;;;;:78;;;;:24;-1:-1:-1;4039:8:1;;-1:-1:-1;;4039:8:1;3928:128;-1:-1:-1;4071:21:1;-1:-1:-1;4064:28:1;;3670:429;-1:-1:-1;4112:1:1;;3516:602;-1:-1:-1;;3516:602:1:o;757:134:8:-;815:7;841:43;845:1;848;841:43;;;;;;;;;;;;;;;;;:3;:43::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "835600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CAKE()": "infinite",
								"accumulativeDividendOf(address)": "infinite",
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1256",
								"decimals()": "230",
								"decreaseAllowance(address,uint256)": "infinite",
								"distributeCAKEDividends(uint256)": "infinite",
								"dividendOf(address)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24334",
								"symbol()": "infinite",
								"totalDividendsDistributed()": "1021",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "313",
								"transferFrom(address,address,uint256)": "360",
								"transferOwnership(address)": "infinite",
								"withdrawDividend()": "infinite",
								"withdrawableDividendOf(address)": "infinite",
								"withdrawnDividendOf(address)": "1208"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setBalance(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_withdrawDividendOfUser(address payable)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 880,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "E09FABB73BD3ADE0A17ECC321FD13A19E81CE82000000000000000000000000"
								},
								{
									"begin": 880,
									"end": 963,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 880,
									"end": 963,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2682,
									"end": 2687,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2682,
									"end": 2687,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2689,
									"end": 2696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2689,
									"end": 2696,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 372,
									"end": 389,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 414,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 7,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 447,
									"end": 490,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 586,
									"end": 682,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db55212306fd4e1296f0c6f677bd9463fc22d8e18cf8929cd33267fcea38d0fc64736f6c634300060c0033",
									".code": [
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "85A6B3AE"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A8B9D240"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A8B9D240"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "AAFD847A"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "BA72A955"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "85A6B3AE"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "91B89FBA"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "4CA6EF28"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "6A474002"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "27CE0147"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4323,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4344,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5063,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5097,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5789,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5790,
											"end": 5796,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5703,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5737,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5738,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 880,
											"end": 963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 963,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 637,
											"end": 643,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 637,
											"end": 643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 637,
											"end": 643,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4435,
											"end": 4441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4412,
											"end": 4442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6410,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6431,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6472,
											"end": 6487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6445,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2788,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2904,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2837,
											"end": 2951,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "A493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3013,
											"end": 3078,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4054,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH data",
											"source": 7,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9682,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH data",
											"source": 8,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 178,
											"end": 308,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 178,
											"end": 308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 234,
											"end": 240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 282,
											"end": 288,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 282,
											"end": 288,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 274,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 274,
											"end": 289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 274,
											"end": 289,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2650,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2478,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2622,
											"end": 2623,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2623,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "EE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3880,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 757,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 815,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 845,
											"end": 846,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 841,
											"end": 884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"CAKE()": "4ca6ef28",
							"accumulativeDividendOf(address)": "27ce0147",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"distributeCAKEDividends(uint256)": "ba72a955",
							"dividendOf(address)": "91b89fba",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalDividendsDistributed()": "85a6b3ae",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawDividend()": "6a474002",
							"withdrawableDividendOf(address)": "a8b9d240",
							"withdrawnDividendOf(address)": "aafd847a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAKE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeCAKEDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividendsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"A mintable ERC20 token that allows anyone to pay and distribute ether  to token holders as dividends and allows token holders to withdraw their dividends.  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code\",\"kind\":\"dev\",\"methods\":{\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has earned in total.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawDividend()\":{\"details\":\"It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\"},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"title\":\"Dividend-Paying Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingToken.sol\":\"DividendPayingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"DividendPayingToken.sol\":{\"keccak256\":\"0xa0c8d8db980175990d2f2f4bd3566cefc573b165c305a24305a40909062ef02c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1062e989ff929f8805c93d4e6fa2b963a8a27e4439d6afb5e942e4bc88c0ee\",\"dweb:/ipfs/QmZE7VmrP8PTeu4BrjkwDkHH1ntRthYJx6Rkfz9rovBa4N\"]},\"DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x540feb0de30442e4ff73b150bfda6936d67b7b9a821ef07dfd171329f5980c5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e37fe007425be9fc1f260badb7049980dd9ee8ea0e6cb50f9167e9262e6aed3\",\"dweb:/ipfs/QmceJrr5vs6LCfBj51ZtyjqmyD4DuPiGozKphxKed2F14K\"]},\"DividendPayingTokenOptionalInterface.sol\":{\"keccak256\":\"0xff14d6250f7475ad64006d069fd715371ce5ed90c5a946b944aa5241b6faa47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92c259af1a8c2b41fc8796c42fb6f0583f691b61c7007c1836fdee7fbc892e59\",\"dweb:/ipfs/QmNwopB8sD2wAR72gZ4ms4LRSVuMGpmPiJjUYubQFhvaSd\"]},\"ERC20.sol\":{\"keccak256\":\"0x83db848aeb57e6b9d105566d2c9d97184bbc038fe3012a24a242d875ab71181c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41b4e38a45d2c3b677510d7191b231aef68af68947c2a7bd36b1c8d600b25a95\",\"dweb:/ipfs/QmRnWEp1UR3MvnvujLT79tRyqFcUghVrti4RQdqABs3ZRT\"]},\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]},\"Ownable.sol\":{\"keccak256\":\"0xc8bb32fd490e2821c1b3485964cdb304fc9ff4d449c9c80e8381a052c0472e7a\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://dbfa4b1ab73357cc544387f2ee65b227ab4a620f7a02aa3bed54dc784c79299d\",\"dweb:/ipfs/QmeXgguUxhgk3FFJgnDDbLEHf7fkBv6g8HUufekHRB4NsG\"]},\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]},\"SafeMathInt.sol\":{\"keccak256\":\"0xcd8b4ef427f18356a0d9456b15d9decbd1fad699cb66cfb5447493cf244b79ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0545e940cc0ee3ec34e2d8b4f5815fa09aa84da9be30728a1cce3ccc44101474\",\"dweb:/ipfs/QmdFE4A5HzhXUxVPBVFj4q2LxnmFJAJDQhwMQc64zFrtdD\"]},\"SafeMathUint.sol\":{\"keccak256\":\"0x8f5c24cd76bdcec7af73fb22794aa32e29ce58c0f63b448f7a8b25d44b78975f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f36d6348f20e2d713db661f3b22fd9d212c37f18ad9f790312f3c01d1e800aa\",\"dweb:/ipfs/QmVtv5QhzE77fhso2WsX6RYb1th851n4xCQsUE9i2XHzWv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1108,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 62,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "magnifiedDividendPerShare",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 66,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "magnifiedDividendCorrections",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 70,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "withdrawnDividends",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 72,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "totalDividendsDistributed",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accumulativeDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has earned in total."
							},
							"dividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawDividend()": {
								"notice": "Withdraws the ether distributed to the sender."
							},
							"withdrawableDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawnDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has withdrawn."
							}
						},
						"version": 1
					}
				}
			},
			"DividendPayingTokenInterface.sol": {
				"DividendPayingTokenInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendsDistributed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "dividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDividend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "An interface for a dividend-paying token contract.",
						"events": {
							"DividendWithdrawn(address,uint256)": {
								"details": "This event MUST emit when an address withdraws their dividend.",
								"params": {
									"to": "The address which withdraws ether from this contract.",
									"weiAmount": "The amount of withdrawn ether in wei."
								}
							},
							"DividendsDistributed(address,uint256)": {
								"details": "This event MUST emit when ether is distributed to token holders.",
								"params": {
									"from": "The address which sends ether to this contract.",
									"weiAmount": "The amount of distributed ether in wei."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"dividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawDividend()": {
								"details": "SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
							}
						},
						"title": "Dividend-Paying Token Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dividendOf(address)": "91b89fba",
							"withdrawDividend()": "6a474002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"An interface for a dividend-paying token contract.\",\"events\":{\"DividendWithdrawn(address,uint256)\":{\"details\":\"This event MUST emit when an address withdraws their dividend.\",\"params\":{\"to\":\"The address which withdraws ether from this contract.\",\"weiAmount\":\"The amount of withdrawn ether in wei.\"}},\"DividendsDistributed(address,uint256)\":{\"details\":\"This event MUST emit when ether is distributed to token holders.\",\"params\":{\"from\":\"The address which sends ether to this contract.\",\"weiAmount\":\"The amount of distributed ether in wei.\"}}},\"kind\":\"dev\",\"methods\":{\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawDividend()\":{\"details\":\"SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\"}},\"title\":\"Dividend-Paying Token Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingTokenInterface.sol\":\"DividendPayingTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x540feb0de30442e4ff73b150bfda6936d67b7b9a821ef07dfd171329f5980c5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e37fe007425be9fc1f260badb7049980dd9ee8ea0e6cb50f9167e9262e6aed3\",\"dweb:/ipfs/QmceJrr5vs6LCfBj51ZtyjqmyD4DuPiGozKphxKed2F14K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"dividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawDividend()": {
								"notice": "Withdraws the ether distributed to the sender."
							}
						},
						"version": 1
					}
				}
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"DividendPayingTokenOptionalInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawableDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "OPTIONAL functions for a dividend-paying token contract.",
						"kind": "dev",
						"methods": {
							"accumulativeDividendOf(address)": {
								"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)",
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has earned in total."
								}
							},
							"withdrawableDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawnDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has withdrawn."
								}
							}
						},
						"title": "Dividend-Paying Token Optional Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accumulativeDividendOf(address)": "27ce0147",
							"withdrawableDividendOf(address)": "a8b9d240",
							"withdrawnDividendOf(address)": "aafd847a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"OPTIONAL functions for a dividend-paying token contract.\",\"kind\":\"dev\",\"methods\":{\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has earned in total.\"}},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"title\":\"Dividend-Paying Token Optional Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingTokenOptionalInterface.sol\":\"DividendPayingTokenOptionalInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DividendPayingTokenOptionalInterface.sol\":{\"keccak256\":\"0xff14d6250f7475ad64006d069fd715371ce5ed90c5a946b944aa5241b6faa47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92c259af1a8c2b41fc8796c42fb6f0583f691b61c7007c1836fdee7fbc892e59\",\"dweb:/ipfs/QmNwopB8sD2wAR72gZ4ms4LRSVuMGpmPiJjUYubQFhvaSd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accumulativeDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has earned in total."
							},
							"withdrawableDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawnDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has withdrawn."
							}
						},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"ERC20.sol\":2006:2011  _name */\n  0x03\n  swap1\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"ERC20.sol\":2029:2036  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":2204:2209  _name */\n      0x03\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2172:2185  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2197:2209  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2204:2209  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2204:2209  _name */\n      dup3\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"ERC20.sol\":4298:4302  bool */\n      0x00\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      tag_58\n        /* \"ERC20.sol\":4323:4333  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"ERC20.sol\":4337:4344  spender */\n      dup5\n        /* \"ERC20.sol\":4346:4352  amount */\n      dup5\n        /* \"ERC20.sol\":4314:4322  _approve */\n      tag_60\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"ERC20.sol\":4370:4374  true */\n      0x01\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"ERC20.sol\":3293:3305  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_28:\n        /* \"ERC20.sol\":4984:4988  bool */\n      0x00\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"ERC20.sol\":5010:5016  sender */\n      dup5\n        /* \"ERC20.sol\":5018:5027  recipient */\n      dup5\n        /* \"ERC20.sol\":5029:5035  amount */\n      dup5\n        /* \"ERC20.sol\":5000:5009  _transfer */\n      tag_64\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"ERC20.sol\":5055:5061  sender */\n      dup5\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      tag_66\n        /* \"ERC20.sol\":5063:5073  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5077:5088  _allowances */\n      0x01\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      tag_68\n        /* \"ERC20.sol\":5097:5107  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5110  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5077:5114  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"ERC20.sol\":5046:5054  _approve */\n      tag_60\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"ERC20.sol\":5184:5188  true */\n      0x01\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_30:\n        /* \"ERC20.sol\":3137:3139  18 */\n      0x12\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"ERC20.sol\":5678:5682  bool */\n      0x00\n        /* \"ERC20.sol\":5694:5777  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      tag_73\n        /* \"ERC20.sol\":5703:5713  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":5717:5724  spender */\n      dup5\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"ERC20.sol\":5765:5775  addedValue */\n      dup6\n        /* \"ERC20.sol\":5726:5737  _allowances */\n      0x01\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      tag_75\n        /* \"ERC20.sol\":5738:5748  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5726:5760  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5726:5764  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      and\n        /* \"ERC20.sol\":3444:3451  uint256 */\n      0x00\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_38:\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      0x04\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2385:2398  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      dup3\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"ERC20.sol\":6385:6389  bool */\n      0x00\n        /* \"ERC20.sol\":6401:6530  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":6410:6420  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":6424:6431  spender */\n      dup5\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"ERC20.sol\":6472:6487  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6433:6444  _allowances */\n      0x01\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      tag_86\n        /* \"ERC20.sol\":6445:6455  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6433:6467  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6433:6471  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"ERC20.sol\":3784:3788  bool */\n      0x00\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      tag_89\n        /* \"ERC20.sol\":3810:3820  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"ERC20.sol\":3824:3833  recipient */\n      dup5\n        /* \"ERC20.sol\":3835:3841  amount */\n      dup5\n        /* \"ERC20.sol\":3800:3809  _transfer */\n      tag_64\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4017:4024  uint256 */\n      0x00\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4043:4054  _allowances */\n      0x01\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4043:4070  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_59:\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9522:9541  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9514:9582  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9600:9621  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9592:9660  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9671:9682  _allowances */\n      0x01\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9671:9698  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9671:9707  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7032:7592  function _transfer(... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7167:7187  sender != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":7159:7229  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7247:7270  recipient != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7239:7310  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC20.sol\":7321:7368  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":7342:7348  sender */\n      dup4\n        /* \"ERC20.sol\":7350:7359  recipient */\n      dup4\n        /* \"ERC20.sol\":7361:7367  amount */\n      dup4\n        /* \"ERC20.sol\":7321:7341  _beforeTokenTransfer */\n      tag_99\n        /* \"ERC20.sol\":7321:7368  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"ERC20.sol\":7421:7427  amount */\n      dup2\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7399:7416  _balances[sender] */\n      dup7\n      and\n        /* \"ERC20.sol\":7399:7408  _balances */\n      0x00\n        /* \"ERC20.sol\":7399:7416  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"ERC20.sol\":7399:7420  _balances[sender].sub */\n      tag_69\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7379:7396  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":7379:7388  _balances */\n      0x00\n        /* \"ERC20.sol\":7379:7396  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":7379:7470  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":7503:7523  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":7503:7535  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"ERC20.sol\":7528:7534  amount */\n      dup3\n        /* \"ERC20.sol\":7503:7527  _balances[recipient].add */\n      tag_76\n        /* \"ERC20.sol\":7503:7535  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":7480:7489  _balances */\n      0x00\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":7480:7535  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":7550:7585  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":7550:7585  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":7032:7592  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"SafeMath.sol\":1268:1275  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1303:1315  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1295:1301  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1287:1316  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1338:1343  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"SafeMath.sol\":368:375  uint256 */\n      0x00\n        /* \"SafeMath.sol\":399:404  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":422:428  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":414:460  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"SafeMath.sol\":478:479  c */\n      swap4\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10348:10469  function _beforeTokenTransfer(... */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000c5138038062000c518339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101c0565b5080516101b89060049060208401906101c0565b505050610253565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020157805160ff191683800117855561022e565b8280016001018555821561022e579182015b8281111561022e578251825591602001919060010190610213565b5061023a92915061023e565b5090565b5b8082111561023a576000815560010161023f565b6109ee80620002636000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC51 CODESIZE SUB DUP1 PUSH3 0xC51 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP POP POP PUSH2 0x253 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x201 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x22E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x22E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x213 JUMP JUMPDEST POP PUSH2 0x23A SWAP3 SWAP2 POP PUSH2 0x23E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x9EE DUP1 PUSH3 0x263 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C94A EXTCODEHASH 0x2E 0xD8 0x49 0x2E STOP 0x4F 0xAF 0xC3 SWAP14 MULMOD 0xA5 MSTORE8 PUSH14 0x7370843A6AE0F7F1129B76F1BA66 0x27 0xD0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1325:9146:4:-:0;;;1933:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1933:120:4;;-1:-1:-1;;2006:13:4;;;;-1:-1:-1;2006:5:4;;:13;;;;;:::i;:::-;-1:-1:-1;2029:17:4;;;;:7;;:17;;;;;:::i;:::-;;1933:120;;1325:9146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1325:9146:4;;;-1:-1:-1;1325:9146:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C94A EXTCODEHASH 0x2E 0xD8 0x49 0x2E STOP 0x4F 0xAF 0xC3 SWAP14 MULMOD 0xA5 MSTORE8 PUSH14 0x7370843A6AE0F7F1129B76F1BA66 0x27 0xD0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1325:9146:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4215:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3206:106;;;:::i;:::-;;;;;;;;;;;;;;;;4848:347;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4848:347:4;;;;;;;;;;;;;;;;;:::i;3055:91::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5590:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5590:215:4;;;;;;;;:::i;3370:125::-;;;;;;;;;;;;;;;;-1:-1:-1;3370:125:4;-1:-1:-1;;;;;3370:125:4;;:::i;2329:102::-;;;:::i;6292:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6292:266:4;;;;;;;;:::i;3698:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3698:172:4;;;;;;;;:::i;3928:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3928:149:4;;;;;;;;;;:::i;2118:98::-;2204:5;2197:12;;;;;;;;-1:-1:-1;;2197:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:13;;2197:12;;2204:5;;2197:12;;2204:5;2197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;:::o;4215:166::-;4298:4;4314:39;4323:12;:10;:12::i;:::-;4337:7;4346:6;4314:8;:39::i;:::-;-1:-1:-1;4370:4:4;4215:166;;;;:::o;3206:106::-;3293:12;;3206:106;:::o;4848:347::-;4984:4;5000:36;5010:6;5018:9;5029:6;5000:9;:36::i;:::-;5046:121;5055:6;5063:12;:10;:12::i;:::-;5077:89;5115:6;5077:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5077:19:4;;;;;;:11;:19;;;;;;5097:12;:10;:12::i;:::-;-1:-1:-1;;;;;5077:33:4;;;;;;;;;;;;-1:-1:-1;5077:33:4;;;:89;:37;:89::i;:::-;5046:8;:121::i;:::-;-1:-1:-1;5184:4:4;4848:347;;;;;:::o;3055:91::-;3137:2;3055:91;:::o;5590:215::-;5678:4;5694:83;5703:12;:10;:12::i;:::-;5717:7;5726:50;5765:10;5726:11;:25;5738:12;:10;:12::i;:::-;-1:-1:-1;;;;;5726:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5726:25:4;;;:34;;;;;;;;;;;:38;:50::i;3370:125::-;-1:-1:-1;;;;;3470:18:4;3444:7;3470:18;;;;;;;;;;;;3370:125::o;2329:102::-;2417:7;2410:14;;;;;;;;-1:-1:-1;;2410:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:13;;2410:14;;2417:7;;2410:14;;2417:7;2410:14;;;;;;;;;;;;;;;;;;;;;;;;6292:266;6385:4;6401:129;6410:12;:10;:12::i;:::-;6424:7;6433:96;6472:15;6433:96;;;;;;;;;;;;;;;;;:11;:25;6445:12;:10;:12::i;:::-;-1:-1:-1;;;;;6433:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6433:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3698:172::-;3784:4;3800:42;3810:12;:10;:12::i;:::-;3824:9;3835:6;3800:9;:42::i;3928:149::-;-1:-1:-1;;;;;4043:18:4;;;4017:7;4043:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3928:149::o;586:96:0:-;665:10;586:96;:::o;9391:370:4:-;-1:-1:-1;;;;;9522:19:4;;9514:68;;;;-1:-1:-1;;;9514:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9600:21:4;;9592:68;;;;-1:-1:-1;;;9592:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9671:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9722:32;;;;;;;;;;;;;;;;;9391:370;;;:::o;7032:560::-;-1:-1:-1;;;;;7167:20:4;;7159:70;;;;-1:-1:-1;;;7159:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7247:23:4;;7239:71;;;;-1:-1:-1;;;7239:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7321:47;7342:6;7350:9;7361:6;7321:20;:47::i;:::-;7399:71;7421:6;7399:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7399:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7379:17:4;;;:9;:17;;;;;;;;;;;:91;;;;7503:20;;;;;;;:32;;7528:6;7503:24;:32::i;:::-;-1:-1:-1;;;;;7480:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;7550:35;;;;;;;7480:20;;7550:35;;;;;;;;;;;;;7032:560;;;:::o;1182:187:8:-;1268:7;1303:12;1295:6;;;;1287:29;;;;-1:-1:-1;;;1287:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1338:5:8;;;1182:187::o;310:176::-;368:7;399:5;;;422:6;;;;414:46;;;;;-1:-1:-1;;;414:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:1;310:176;-1:-1:-1;;;310:176:8:o;10348:121:4:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "508400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "296",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033",
									".code": [
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4323,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4344,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5063,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5097,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5703,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5737,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5738,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6410,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6431,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6472,
											"end": 6487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6445,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4054,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9682,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH data",
											"source": 4,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH data",
											"source": 4,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7350,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH data",
											"source": 4,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 399,
											"end": 404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 422,
											"end": 428,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 478,
											"end": 479,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 310,
											"end": 486,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"ERC20.sol\":{\"keccak256\":\"0x83db848aeb57e6b9d105566d2c9d97184bbc038fe3012a24a242d875ab71181c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41b4e38a45d2c3b677510d7191b231aef68af68947c2a7bd36b1c8d600b25a95\",\"dweb:/ipfs/QmRnWEp1UR3MvnvujLT79tRyqFcUghVrti4RQdqABs3ZRT\"]},\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]},\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"Ownable.sol\":340:497  constructor () public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":372:389  address msgSender */\n  0x00\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  tag_4\n    /* \"Ownable.sol\":392:402  _msgSender */\n  tag_5\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  jump\t// in\ntag_4:\n    /* \"Ownable.sol\":414:420  _owner */\n  0x00\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Ownable.sol\":414:420  _owner */\n  dup3\n  swap1\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"Ownable.sol\":340:497  constructor () public {... */\n  pop\n    /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\n  jump(tag_6)\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\ntag_5:\n    /* \"Context.sol\":665:675  msg.sender */\n  caller\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_12\n      jump\t// in\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_14\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_15\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_14:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_16\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_16:\n        /* \"Ownable.sol\":1302:1303  0 */\n      0x00\n        /* \"Ownable.sol\":1286:1292  _owner */\n      dup1\n      sload\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1286:1292  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1302:1303  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1332:1333  0 */\n      0x00\n        /* \"Ownable.sol\":1315:1334  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"Ownable.sol\":611:618  address */\n      0x00\n        /* \"Ownable.sol\":637:643  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_20\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_15\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1578:1600  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":1570:1643  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"Ownable.sol\":1679:1685  _owner */\n      0x00\n      dup1\n      sload\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"Ownable.sol\":1679:1685  _owner */\n      swap3\n      and\n      swap2\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"Ownable.sol\":1706:1712  _owner */\n      0x00\n        /* \"Ownable.sol\":1706:1723  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_15:\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102c78061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610267565b6000546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610165610267565b6000546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x2C7 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220F9CA43277585 0x1E REVERT MSTORE8 GASPRICE 0xC1 DELEGATECALL 0x23 SWAP14 TIMESTAMP SAR 0x2C 0xCD 0xBB LT PUSH26 0x276958FE684FECC3E4EBA764736F6C634300060C003300000000 ",
							"sourceMap": "91:1641:7:-:0;;;340:157;;;;;;;;;-1:-1:-1;372:17:7;392:12;:10;:12::i;:::-;414:6;:18;;-1:-1:-1;;;;;;414:18:7;-1:-1:-1;;;;;414:18:7;;;;;;;447:43;;414:18;;-1:-1:-1;414:18:7;447:43;;414:6;;447:43;340:157;91:1641;;586:96:0;665:10;586:96;:::o;91:1641:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610267565b6000546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610165610267565b6000546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220F9CA43277585 0x1E REVERT MSTORE8 GASPRICE 0xC1 DELEGATECALL 0x23 SWAP14 TIMESTAMP SAR 0x2C 0xCD 0xBB LT PUSH26 0x276958FE684FECC3E4EBA764736F6C634300060C003300000000 ",
							"sourceMap": "91:1641:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:145;;;:::i;:::-;;573:77;;;:::i;:::-;;;;-1:-1:-1;;;;;573:77:7;;;;;;;;;;;;;;1490:240;;;;;;;;;;;;;;;;-1:-1:-1;1490:240:7;-1:-1:-1;;;;;1490:240:7;;:::i;1196:145::-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:7;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:1:::1;1286:6:::0;;1265:40:::1;::::0;-1:-1:-1;;;;;1286:6:7;;::::1;::::0;1265:40:::1;::::0;1302:1;;1265:40:::1;1332:1;1315:19:::0;;-1:-1:-1;;;;;;1315:19:7::1;::::0;;1196:145::o;573:77::-;611:7;637:6;-1:-1:-1;;;;;637:6:7;573:77;:::o;1490:240::-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:7;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1578:22:7;::::1;1570:73;;;;-1:-1:-1::0;;;1570:73:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:6;::::0;;1658:38:::1;::::0;-1:-1:-1;;;;;1658:38:7;;::::1;::::0;1679:6;::::1;::::0;1658:38:::1;::::0;::::1;1706:6;:17:::0;;-1:-1:-1;;;;;;1706:17:7::1;-1:-1:-1::0;;;;;1706:17:7;;;::::1;::::0;;;::::1;::::0;;1490:240::o;586:96:0:-;665:10;586:96;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142200",
								"executionCost": "22625",
								"totalCost": "164825"
							},
							"external": {
								"owner()": "1037",
								"renounceOwnership()": "24182",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 497,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 497,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 372,
									"end": 389,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 414,
									"end": 420,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 7,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 420,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 414,
									"end": 420,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 447,
									"end": 490,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 340,
									"end": 497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 586,
									"end": 682,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033",
									".code": [
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 637,
											"end": 643,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH data",
											"source": 7,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"Ownable.sol\":{\"keccak256\":\"0xc8bb32fd490e2821c1b3485964cdb304fc9ff4d449c9c80e8381a052c0472e7a\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://dbfa4b1ab73357cc544387f2ee65b227ab4a620f7a02aa3bed54dc784c79299d\",\"dweb:/ipfs/QmeXgguUxhgk3FFJgnDDbLEHf7fkBv6g8HUufekHRB4NsG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1108,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":58:4636  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":58:4636  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP9 PUSH7 0xCE260ABF24BC5A 0x22 0xC1 0xB7 0xE1 RETURNDATACOPY PUSH15 0xA50AD0211AA8142CBDFA4061DDEF04 JUMPDEST PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "58:4578:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP9 PUSH7 0xCE260ABF24BC5A 0x22 0xC1 0xB7 0xE1 RETURNDATACOPY PUSH15 0xA50AD0211AA8142CBDFA4061DDEF04 JUMPDEST PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "58:4578:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033",
									".code": [
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMathInt.sol": {
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"details": "Math operations for int256 with overflow safety checks.",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathInt",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMathInt.sol\":1265:2994  library SafeMathInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMathInt.sol\":1265:2994  library SafeMathInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x697B598E5C97DA859713FA343FE342D4315D 0xB5 0xCA MOD 0xDB 0xAC GT 0xC3 0xBB 0x21 0xE5 EXTCODECOPY 0x4F 0xE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1265:1729:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x697B598E5C97DA859713FA343FE342D4315D 0xB5 0xCA MOD 0xDB 0xAC GT 0xC3 0xBB 0x21 0xE5 EXTCODECOPY 0x4F 0xE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1265:1729:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite",
								"toUint256Safe(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033",
									".code": [
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations for int256 with overflow safety checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathInt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMathInt.sol\":\"SafeMathInt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMathInt.sol\":{\"keccak256\":\"0xcd8b4ef427f18356a0d9456b15d9decbd1fad699cb66cfb5447493cf244b79ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0545e940cc0ee3ec34e2d8b4f5815fa09aa84da9be30728a1cce3ccc44101474\",\"dweb:/ipfs/QmdFE4A5HzhXUxVPBVFj4q2LxnmFJAJDQhwMQc64zFrtdD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMathUint.sol": {
				"SafeMathUint": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathUint",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMathUint.sol\":153:310  library SafeMathUint {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMathUint.sol\":153:310  library SafeMathUint {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xCA KECCAK256 KECCAK256 DUP4 CALLDATACOPY 0xE4 0xAF ADD 0xCD 0xF6 0xF 0xF9 0x23 DUP16 0xD7 RETURNDATACOPY 0xF6 SUB SHR SWAP14 0x4F PUSH27 0x4E5C5DBF43F9832C7A64736F6C634300060C003300000000000000 ",
							"sourceMap": "153:157:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xCA KECCAK256 KECCAK256 DUP4 CALLDATACOPY 0xE4 0xAF ADD 0xCD 0xF6 0xF 0xF9 0x23 DUP16 0xD7 RETURNDATACOPY 0xF6 SUB SHR SWAP14 0x4F PUSH27 0x4E5C5DBF43F9832C7A64736F6C634300060C003300000000000000 ",
							"sourceMap": "153:157:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt256Safe(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 153,
									"end": 310,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033",
									".code": [
										{
											"begin": 153,
											"end": 310,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 153,
											"end": 310,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 153,
											"end": 310,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 153,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 153,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 153,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 153,
											"end": 310,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathUint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMathUint.sol\":\"SafeMathUint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMathUint.sol\":{\"keccak256\":\"0x8f5c24cd76bdcec7af73fb22794aa32e29ce58c0f63b448f7a8b25d44b78975f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f36d6348f20e2d713db661f3b22fd9d212c37f18ad9f790312f3c01d1e800aa\",\"dweb:/ipfs/QmVtv5QhzE77fhso2WsX6RYb1th851n4xCQsUE9i2XHzWv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "648:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "665:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "665:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "658:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:0"
									},
									"scope": 22,
									"src": "586:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "755:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "765:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "765:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "905:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "905:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "898:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "739:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:16:0"
									},
									"scope": 22,
									"src": "688:232:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "554:368:0"
						}
					],
					"src": "33:890:0"
				},
				"id": 0
			},
			"DividendPayingToken.sol": {
				"ast": {
					"absolutePath": "DividendPayingToken.sol",
					"exportedSymbols": {
						"DividendPayingToken": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 999,
							"src": "58:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1405,
							"src": "80:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMathUint.sol",
							"file": "./SafeMathUint.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1649,
							"src": "105:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMathInt.sol",
							"file": "./SafeMathInt.sol",
							"id": 28,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1622,
							"src": "134:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DividendPayingTokenInterface.sol",
							"file": "./DividendPayingTokenInterface.sol",
							"id": 29,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 479,
							"src": "162:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DividendPayingTokenOptionalInterface.sol",
							"file": "./DividendPayingTokenOptionalInterface.sol",
							"id": 30,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 507,
							"src": "207:52:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 31,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1210,
							"src": "260:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 33,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 998,
										"src": "690:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$998",
											"typeString": "contract ERC20"
										}
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "690:5:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 35,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1209,
										"src": "697:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1209",
											"typeString": "contract Ownable"
										}
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "697:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 37,
										"name": "DividendPayingTokenInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 478,
										"src": "706:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DividendPayingTokenInterface_$478",
											"typeString": "contract DividendPayingTokenInterface"
										}
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "706:28:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 39,
										"name": "DividendPayingTokenOptionalInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 506,
										"src": "736:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DividendPayingTokenOptionalInterface_$506",
											"typeString": "contract DividendPayingTokenOptionalInterface"
										}
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "736:36:1"
								}
							],
							"contractDependencies": [
								22,
								478,
								506,
								998,
								1076,
								1101,
								1209
							],
							"contractKind": "contract",
							"documentation": {
								"id": 32,
								"nodeType": "StructuredDocumentation",
								"src": "286:372:1",
								"text": "@title Dividend-Paying Token\n @author Roger Wu (https://github.com/roger-wu)\n @dev A mintable ERC20 token that allows anyone to pay and distribute ether\n  to token holders as dividends and allows token holders to withdraw their dividends.\n  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code"
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448,
								506,
								478,
								1209,
								998,
								1101,
								1076,
								22
							],
							"name": "DividendPayingToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 43,
									"libraryName": {
										"contractScope": null,
										"id": 41,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1404,
										"src": "783:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1404",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "777:27:1",
									"typeName": {
										"id": 42,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "796:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 46,
									"libraryName": {
										"contractScope": null,
										"id": 44,
										"name": "SafeMathUint",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1648,
										"src": "813:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathUint_$1648",
											"typeString": "library SafeMathUint"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "807:31:1",
									"typeName": {
										"id": 45,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 49,
									"libraryName": {
										"contractScope": null,
										"id": 47,
										"name": "SafeMathInt",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1621,
										"src": "847:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathInt_$1621",
											"typeString": "library SafeMathInt"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "841:29:1",
									"typeName": {
										"id": 48,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "863:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "4ca6ef28",
									"id": 55,
									"mutability": "immutable",
									"name": "CAKE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "880:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 50,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "880:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "307830453039466142423733426433416465306131374543433332316644313361313965383163453832",
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "920:42:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"value": "0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											],
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "912:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 51,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "912:7:1",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "912:51:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 60,
									"mutability": "constant",
									"name": "magnitude",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "1454:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 56,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1454:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 57,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1492:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313238",
											"id": 58,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1495:3:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_128_by_1",
												"typeString": "int_const 128"
											},
											"value": "128"
										},
										"src": "1492:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "magnifiedDividendPerShare",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "1503:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 61,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1503:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 66,
									"mutability": "mutable",
									"name": "magnifiedDividendCorrections",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2440:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 65,
										"keyType": {
											"id": 63,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2448:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2440:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 64,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2459:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "withdrawnDividends",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2508:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 69,
										"keyType": {
											"id": 67,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2516:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2508:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 68,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2527:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "85a6b3ae",
									"id": 72,
									"mutability": "mutable",
									"name": "totalDividendsDistributed",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2568:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2568:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2698:6:1",
										"statements": []
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 79,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "2682:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"argumentTypes": null,
													"id": 80,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 76,
													"src": "2689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 81,
											"modifierName": {
												"argumentTypes": null,
												"id": 78,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 998,
												"src": "2676:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$998_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2676:21:1"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2625:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2625:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2646:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2646:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2624:44:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2698:0:1"
									},
									"scope": 448,
									"src": "2613:91:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2774:315:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 92,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2788:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2788:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2804:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2788:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2780:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2780:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2780:26:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 98,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2817:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2826:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2817:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 129,
												"nodeType": "IfStatement",
												"src": "2813:272:1",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "2829:256:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "magnifiedDividendPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2837:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 107,
																						"name": "magnitude",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 60,
																						"src": "2917:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"id": 104,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 86,
																								"src": "2905:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 105,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2904:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "2904:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2904:23:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 109,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "2930:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2930:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2904:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 102,
																			"name": "magnifiedDividendPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "2865:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1237,
																		"src": "2865:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2865:86:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2837:114:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "2837:114:1"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 116,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2985:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2985:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 118,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "2997:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 115,
																	"name": "DividendsDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "2964:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2964:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "EmitStatement",
															"src": "2959:45:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "totalDividendsDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "3013:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 124,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "3071:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 122,
																			"name": "totalDividendsDistributed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 72,
																			"src": "3041:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1237,
																		"src": "3041:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3041:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3013:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3013:65:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "ba72a955",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 89,
											"modifierName": {
												"argumentTypes": null,
												"id": 88,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1158,
												"src": "2765:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2765:9:1"
										}
									],
									"name": "distributeCAKEDividends",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2742:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2741:16:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2774:0:1"
									},
									"scope": 448,
									"src": "2709:380:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										463
									],
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "3306:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3336:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3336:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 136,
														"name": "_withdrawDividendOfUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3312:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (address payable) returns (uint256)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3312:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "3312:35:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3093:158:1",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
									},
									"functionSelector": "6a474002",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDividend",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3297:8:1"
									},
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3279:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3306:0:1"
									},
									"scope": 448,
									"src": "3254:98:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3598:520:1",
										"statements": [
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "_withdrawableDividend",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 208,
														"src": "3604:29:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3604:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 153,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3659:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 152,
														"name": "withdrawableDividendOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3636:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3604:60:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "_withdrawableDividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "3674:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3698:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3674:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 205,
												"nodeType": "IfStatement",
												"src": "3670:429:1",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "3701:398:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 159,
																		"name": "withdrawnDividends",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "3709:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 161,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 160,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3728:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3709:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 166,
																			"name": "_withdrawableDividend",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "3765:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 162,
																				"name": "withdrawnDividends",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "3736:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 164,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 163,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 145,
																				"src": "3755:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3736:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1237,
																		"src": "3736:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3736:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3709:78:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 169,
															"nodeType": "ExpressionStatement",
															"src": "3709:78:1"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 171,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3818:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 172,
																		"name": "_withdrawableDividend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "3824:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 170,
																	"name": "DividendWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "3800:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3800:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 174,
															"nodeType": "EmitStatement",
															"src": "3795:51:1"
														},
														{
															"assignments": [
																176
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 176,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 204,
																	"src": "3854:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 175,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3854:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 184,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 181,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3891:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 182,
																		"name": "_withdrawableDividend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "3897:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 178,
																				"name": "CAKE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "3876:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 177,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1076,
																			"src": "3869:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1076_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3869:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1076",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "3869:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3869:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3854:65:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3931:8:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 185,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "3932:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 201,
															"nodeType": "IfStatement",
															"src": "3928:128:1",
															"trueBody": {
																"id": 200,
																"nodeType": "Block",
																"src": "3941:115:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 187,
																					"name": "withdrawnDividends",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "3951:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 189,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 188,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 145,
																					"src": "3970:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3951:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 194,
																						"name": "_withdrawableDividend",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 151,
																						"src": "4007:21:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 190,
																							"name": "withdrawnDividends",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "3978:18:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 192,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 191,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 145,
																							"src": "3997:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3978:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1254,
																					"src": "3978:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3978:51:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3951:78:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 197,
																		"nodeType": "ExpressionStatement",
																		"src": "3951:78:1"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4046:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 149,
																		"id": 199,
																		"nodeType": "Return",
																		"src": "4039:8:1"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 202,
																"name": "_withdrawableDividend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "4071:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 149,
															"id": 203,
															"nodeType": "Return",
															"src": "4064:28:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4112:1:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 149,
												"id": 207,
												"nodeType": "Return",
												"src": "4105:8:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "3356:158:1",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawDividendOfUser",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3549:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3548:22:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3589:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3588:9:1"
									},
									"scope": 448,
									"src": "3516:602:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										459
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "4399:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 219,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "4435:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 218,
														"name": "withdrawableDividendOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4412:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4412:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 221,
												"nodeType": "Return",
												"src": "4405:37:1"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4123:199:1",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "91b89fba",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 214,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4373:8:1"
									},
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4345:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4345:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4344:16:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4390:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4389:9:1"
									},
									"scope": 448,
									"src": "4325:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										489
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4739:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 236,
																"name": "withdrawnDividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "4787:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 238,
															"indexExpression": {
																"argumentTypes": null,
																"id": 237,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "4806:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4787:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 233,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "4775:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 232,
																"name": "accumulativeDividendOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "4752:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4752:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1254,
														"src": "4752:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 240,
												"nodeType": "Return",
												"src": "4745:69:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "4451:199:1",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "a8b9d240",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawableDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4713:8:1"
									},
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 242,
												"src": "4685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4684:16:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 242,
												"src": "4730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4729:9:1"
									},
									"scope": 448,
									"src": "4653:166:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										497
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5110:44:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "withdrawnDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "5123:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "5142:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5123:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 254,
												"nodeType": "Return",
												"src": "5116:33:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4823:201:1",
										"text": "@notice View the amount of dividend in wei that an address has withdrawn.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has withdrawn."
									},
									"functionSelector": "aafd847a",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawnDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 247,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5084:8:1"
									},
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "5056:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5055:16:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "5101:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5101:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5100:9:1"
									},
									"scope": 448,
									"src": "5027:127:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										505
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "5673:158:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 274,
																			"name": "magnifiedDividendCorrections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "5761:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																				"typeString": "mapping(address => int256)"
																			}
																		},
																		"id": 276,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 275,
																			"name": "_owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "5790:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5761:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 268,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 259,
																								"src": "5726:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 267,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 609,
																							"src": "5716:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5716:17:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 265,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "5686:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "5686:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5686:48:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toInt256Safe",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1647,
																			"src": "5686:61:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (int256)"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5686:63:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1578,
																	"src": "5686:74:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5686:112:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint256Safe",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1620,
															"src": "5686:126:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																"typeString": "function (int256) pure returns (uint256)"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5686:128:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 280,
														"name": "magnitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "5817:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5686:140:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 282,
												"nodeType": "Return",
												"src": "5679:147:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "5159:425:1",
										"text": "@notice View the amount of dividend in wei that an address has earned in total.\n @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has earned in total."
									},
									"functionSelector": "27ce0147",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accumulativeDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5647:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "5619:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5618:16:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "5664:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5663:9:1"
									},
									"scope": 448,
									"src": "5587:244:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "6212:297:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6226:5:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6218:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6218:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "6218:14:1"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "_magCorrection",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 330,
														"src": "6239:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 299,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6239:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "6293:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 301,
																	"name": "magnifiedDividendPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "6263:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1317,
																"src": "6263:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6263:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toInt256Safe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1647,
														"src": "6263:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256) pure returns (int256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6263:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6239:75:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 308,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6320:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 310,
														"indexExpression": {
															"argumentTypes": null,
															"id": 309,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "6349:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6320:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 315,
																"name": "_magCorrection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6396:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 311,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6357:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 313,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 312,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "6386:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6357:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "6357:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6357:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6320:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "6320:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6417:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"argumentTypes": null,
															"id": 320,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "6446:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6417:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 326,
																"name": "_magCorrection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6489:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6452:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 324,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 323,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "6481:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6452:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1539,
															"src": "6452:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6452:52:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6417:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6417:87:1"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "5835:288:1",
										"text": "@dev Internal function that transfer tokens from one address to another.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param from The address to transfer from.\n @param to The address to transfer to.\n @param value The amount to be transferred."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6203:8:1"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6145:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6145:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6159:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6171:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6144:41:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6212:0:1"
									},
									"scope": 448,
									"src": "6126:383:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										885
									],
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "6834:190:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 343,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6852:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 344,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6861:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 340,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "6840:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_DividendPayingToken_$448",
																"typeString": "contract super DividendPayingToken"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 885,
														"src": "6840:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6840:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "6840:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 347,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6874:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 349,
														"indexExpression": {
															"argumentTypes": null,
															"id": 348,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6874:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 356,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 336,
																						"src": "6995:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 354,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "6965:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "6965:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6965:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 358,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6964:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256Safe",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "6964:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6964:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 350,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6914:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 352,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "6943:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6914:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1539,
															"src": "6914:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6914:105:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6874:145:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "6874:145:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "6513:253:1",
										"text": "@dev Internal function that mints tokens to an account.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param account The account that will receive the created tokens.\n @param value The amount that will be created."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6825:8:1"
									},
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "6784:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "6801:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6801:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6783:32:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6834:0:1"
									},
									"scope": 448,
									"src": "6769:255:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "7358:190:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7376:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7385:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 374,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "7364:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_DividendPayingToken_$448",
																"typeString": "contract super DividendPayingToken"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "7364:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7364:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "7364:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "7398:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 383,
														"indexExpression": {
															"argumentTypes": null,
															"id": 382,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7427:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7398:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 390,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 370,
																						"src": "7519:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 388,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "7489:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "7489:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7489:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7488:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256Safe",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "7488:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7488:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "7438:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 386,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 385,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "7467:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7438:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "7438:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7438:105:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7398:145:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "7398:145:1"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "7028:262:1",
										"text": "@dev Internal function that burns an amount of the token of a given account.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param account The account whose tokens will be burnt.\n @param value The amount that will be burnt."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7349:8:1"
									},
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "7308:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "7325:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7325:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7307:32:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7358:0:1"
									},
									"scope": 448,
									"src": "7293:255:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "7619:330:1",
										"statements": [
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "currentBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 446,
														"src": "7625:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 409,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "7660:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 408,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7650:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7650:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7625:43:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 412,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "7678:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 413,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "7691:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7678:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "7816:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7829:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7816:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 444,
													"nodeType": "IfStatement",
													"src": "7813:132:1",
													"trueBody": {
														"id": 443,
														"nodeType": "Block",
														"src": "7845:100:1",
														"statements": [
															{
																"assignments": [
																	432
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 432,
																		"mutability": "mutable",
																		"name": "burnAmount",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 443,
																		"src": "7853:18:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 431,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7853:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 437,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 435,
																			"name": "newBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "7893:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 433,
																			"name": "currentBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "7874:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1254,
																		"src": "7874:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7874:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7853:51:1"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 439,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "7918:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 440,
																			"name": "burnAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "7927:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 438,
																		"name": "_burn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			399
																		],
																		"referencedDeclaration": 399,
																		"src": "7912:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7912:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 442,
																"nodeType": "ExpressionStatement",
																"src": "7912:26:1"
															}
														]
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "7675:270:1",
												"trueBody": {
													"id": 427,
													"nodeType": "Block",
													"src": "7707:100:1",
													"statements": [
														{
															"assignments": [
																416
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 416,
																	"mutability": "mutable",
																	"name": "mintAmount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 427,
																	"src": "7715:18:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7715:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 421,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 419,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "7751:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 417,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "7736:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1254,
																	"src": "7736:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7736:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7715:51:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 423,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "7780:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 424,
																		"name": "mintAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "7789:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		365
																	],
																	"referencedDeclaration": 365,
																	"src": "7774:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7774:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "7774:26:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "7573:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "7590:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7572:37:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7619:0:1"
									},
									"scope": 448,
									"src": "7552:397:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 449,
							"src": "658:7293:1"
						}
					],
					"src": "33:7919:1"
				},
				"id": 1
			},
			"DividendPayingTokenInterface.sol": {
				"ast": {
					"absolutePath": "DividendPayingTokenInterface.sol",
					"exportedSymbols": {
						"DividendPayingTokenInterface": [
							478
						]
					},
					"id": 479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "59:154:2",
								"text": "@title Dividend-Paying Token Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev An interface for a dividend-paying token contract."
							},
							"fullyImplemented": false,
							"id": 478,
							"linearizedBaseContracts": [
								478
							],
							"name": "DividendPayingTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "256:199:2",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "91b89fba",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "477:16:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "516:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "515:9:2"
									},
									"scope": 478,
									"src": "458:67:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "530:291:2",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
									},
									"functionSelector": "6a474002",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDividend",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:2:2"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:2"
									},
									"scope": 478,
									"src": "824:37:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "865:202:2",
										"text": "@dev This event MUST emit when ether is distributed to token holders.\n @param from The address which sends ether to this contract.\n @param weiAmount The amount of distributed ether in wei."
									},
									"id": 470,
									"name": "DividendsDistributed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 470,
												"src": "1102:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 470,
												"src": "1128:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1096:53:2"
									},
									"src": "1070:80:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "1154:202:2",
										"text": "@dev This event MUST emit when an address withdraws their dividend.\n @param to The address which withdraws ether from this contract.\n @param weiAmount The amount of withdrawn ether in wei."
									},
									"id": 477,
									"name": "DividendWithdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "1388:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "1412:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1382:51:2"
									},
									"src": "1359:75:2"
								}
							],
							"scope": 479,
							"src": "213:1223:2"
						}
					],
					"src": "33:1404:2"
				},
				"id": 2
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"ast": {
					"absolutePath": "DividendPayingTokenOptionalInterface.sol",
					"exportedSymbols": {
						"DividendPayingTokenOptionalInterface": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 480,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 481,
								"nodeType": "StructuredDocumentation",
								"src": "59:169:3",
								"text": "@title Dividend-Paying Token Optional Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev OPTIONAL functions for a dividend-paying token contract."
							},
							"fullyImplemented": false,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "DividendPayingTokenOptionalInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "279:199:3",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "a8b9d240",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawableDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "513:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "512:16:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "551:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "550:9:3"
									},
									"scope": 506,
									"src": "481:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "564:201:3",
										"text": "@notice View the amount of dividend in wei that an address has withdrawn.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has withdrawn."
									},
									"functionSelector": "aafd847a",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawnDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "797:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "796:16:3"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "835:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "834:9:3"
									},
									"scope": 506,
									"src": "768:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "848:318:3",
										"text": "@notice View the amount of dividend in wei that an address has earned in total.\n @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has earned in total."
									},
									"functionSelector": "27ce0147",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accumulativeDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1201:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1200:16:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1239:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1238:9:3"
									},
									"scope": 506,
									"src": "1169:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "228:1022:3"
						}
					],
					"src": "33:1218:3"
				},
				"id": 3
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 508,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 509,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1077,
							"src": "58:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 510,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1102,
							"src": "81:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 511,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 23,
							"src": "112:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 512,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1405,
							"src": "136:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 514,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1343:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 515,
									"nodeType": "InheritanceSpecifier",
									"src": "1343:7:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 516,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1076,
										"src": "1352:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1076",
											"typeString": "contract IERC20"
										}
									},
									"id": 517,
									"nodeType": "InheritanceSpecifier",
									"src": "1352:6:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 518,
										"name": "IERC20Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1101,
										"src": "1360:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$1101",
											"typeString": "contract IERC20Metadata"
										}
									},
									"id": 519,
									"nodeType": "InheritanceSpecifier",
									"src": "1360:14:4"
								}
							],
							"contractDependencies": [
								22,
								1076,
								1101
							],
							"contractKind": "contract",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "162:1162:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998,
								1101,
								1076,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 522,
									"libraryName": {
										"contractScope": null,
										"id": 520,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1404,
										"src": "1387:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1404",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1381:27:4",
									"typeName": {
										"id": 521,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1400:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1414:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 525,
										"keyType": {
											"id": 523,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1422:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1414:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 524,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1433:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 532,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1466:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 531,
										"keyType": {
											"id": 527,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1474:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1466:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 530,
											"keyType": {
												"id": 528,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1493:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1485:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1504:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1540:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1575:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 535,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1575:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1601:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 537,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1601:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1996:57:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 546,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 547,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2014:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2006:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "2006:13:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 550,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "2029:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 551,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2039:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2029:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2029:17:4"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1630:298:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 555,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "1945:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1945:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "1966:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1966:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1944:44:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:0:4"
									},
									"scope": 998,
									"src": "1933:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "2187:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "2204:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "2197:12:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2059:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2154:8:4"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:2:4"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "2172:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2172:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:15:4"
									},
									"scope": 998,
									"src": "2118:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "2400:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 572,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 538,
													"src": "2417:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 571,
												"id": 573,
												"nodeType": "Return",
												"src": "2410:14:4"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "2222:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2367:8:4"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2344:2:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "2385:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2385:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2384:15:4"
									},
									"scope": 998,
									"src": "2329:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1100
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3120:26:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3137:2:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "3130:9:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2437:613:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3095:8:4"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3072:2:4"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "3113:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 579,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3112:7:4"
									},
									"scope": 998,
									"src": "3055:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "3276:36:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 592,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "3293:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "3286:19:4"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3152:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 588,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3249:8:4"
									},
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3226:2:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "3267:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3266:9:4"
									},
									"scope": 998,
									"src": "3206:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1015
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "3453:42:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 604,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3470:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 606,
													"indexExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "3480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3470:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 607,
												"nodeType": "Return",
												"src": "3463:25:4"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "3318:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3426:8:4"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "3389:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3388:17:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "3444:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3443:9:4"
									},
									"scope": 998,
									"src": "3370:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1025
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "3790:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 621,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3810:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3810:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 623,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "3824:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "3835:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "3800:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3800:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3859:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 619,
												"id": 628,
												"nodeType": "Return",
												"src": "3852:11:4"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "3501:192:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3766:8:4"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3716:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3735:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3715:35:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3784:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3784:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3783:6:4"
									},
									"scope": 998,
									"src": "3698:172:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "4026:51:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 641,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4043:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 643,
														"indexExpression": {
															"argumentTypes": null,
															"id": 642,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "4055:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4043:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 645,
													"indexExpression": {
														"argumentTypes": null,
														"id": 644,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "4062:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4043:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 640,
												"id": 646,
												"nodeType": "Return",
												"src": "4036:34:4"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3876:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 637,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3999:8:4"
									},
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "3947:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "3962:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3946:32:4"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "4017:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4016:9:4"
									},
									"scope": 998,
									"src": "3928:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1045
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "4304:77:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 660,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4323:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4323:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4337:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4346:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "4314:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4314:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "4314:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4370:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 658,
												"id": 667,
												"nodeType": "Return",
												"src": "4363:11:4"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "4083:127:4",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 655,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4280:8:4"
									},
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4232:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4232:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4249:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4231:33:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4298:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4298:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4297:6:4"
									},
									"scope": 998,
									"src": "4215:166:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "4990:205:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5010:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5018:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5029:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "5000:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "5000:36:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5055:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 690,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5063:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5063:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "5115:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5123:42:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "5077:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "5089:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5077:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 695,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5097:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5097:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5077:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1282,
																"src": "5077:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5077:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "5046:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5046:121:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5184:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 681,
												"id": 705,
												"nodeType": "Return",
												"src": "5177:11:4"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "4387:456:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4966:8:4"
									},
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4879:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4903:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4930:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4869:81:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4984:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4984:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4983:6:4"
									},
									"scope": 998,
									"src": "4848:347:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "5684:121:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 718,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5703:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5703:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5717:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 728,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "5765:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 721,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "5726:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 724,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 722,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5738:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5738:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5726:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 725,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "5752:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5726:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1237,
																"src": "5726:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5726:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "5694:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5694:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "5694:83:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5794:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 716,
												"id": 733,
												"nodeType": "Return",
												"src": "5787:11:4"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5201:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5617:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5634:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5634:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5616:37:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5678:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5678:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5677:6:4"
									},
									"scope": 998,
									"src": "5590:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "6391:167:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 746,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6410:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6410:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6424:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 756,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "6472:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6489:39:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 749,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "6433:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 750,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6445:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6445:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6433:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 754,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 753,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "6459:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6433:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1282,
																"src": "6433:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6433:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "6401:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6401:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6401:129:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6547:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 744,
												"id": 762,
												"nodeType": "Return",
												"src": "6540:11:4"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "5811:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6319:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6319:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6336:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6318:42:4"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6385:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6384:6:4"
									},
									"scope": 998,
									"src": "6292:266:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "7149:443:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 775,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "7167:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7185:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7177:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7177:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7177:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7167:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7189:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7159:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "7159:70:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 785,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "7247:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7268:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7260:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7260:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7260:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7247:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7272:37:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7239:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "7239:71:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 795,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7342:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 796,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7350:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "7321:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7321:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "7321:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7379:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 802,
														"indexExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7389:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 807,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "7421:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7429:40:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7399:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 805,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "7409:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7399:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "7399:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7399:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7379:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "7379:91:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 812,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7480:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 814,
														"indexExpression": {
															"argumentTypes": null,
															"id": 813,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7490:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7480:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 819,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "7528:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7503:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 816,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "7513:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7503:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1237,
															"src": "7503:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7503:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7480:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "7480:55:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 824,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7559:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 825,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7567:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 826,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7578:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "7550:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7550:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "EmitStatement",
												"src": "7545:40:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "6564:463:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7060:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7060:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7084:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7111:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7050:81:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7149:0:4"
									},
									"scope": 998,
									"src": "7032:560:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "7933:305:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 839,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "7951:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7970:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7962:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 840,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7962:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7962:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7951:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7974:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7943:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7943:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "7943:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8048:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8040:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8040:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8040:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 853,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8052:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 854,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8061:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "8019:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "8019:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 857,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "8079:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 860,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "8111:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 858,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "8094:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1237,
															"src": "8094:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8094:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8079:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "8079:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 864,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8128:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 866,
														"indexExpression": {
															"argumentTypes": null,
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8138:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8128:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 871,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "8172:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 867,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "8149:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 869,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 868,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "8159:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8149:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1237,
															"src": "8149:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8149:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8128:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8128:51:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8211:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8203:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8203:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8203:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 880,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8215:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 881,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8224:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8194:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8194:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "EmitStatement",
												"src": "8189:42:4"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "7598:265:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "7883:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7883:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "7900:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7882:33:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7933:0:4"
									},
									"scope": 998,
									"src": "7868:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "8623:345:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 894,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "8641:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8660:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8652:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 895,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8652:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8652:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8641:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8664:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8633:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8633:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "8633:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 904,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8732:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8749:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8741:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8741:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8741:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 909,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "8753:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "8711:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "8711:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 912,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8771:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 914,
														"indexExpression": {
															"argumentTypes": null,
															"id": 913,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8781:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8771:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 919,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "8815:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8823:36:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 915,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "8792:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 917,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 916,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "8802:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8792:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "8792:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8792:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8771:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "8771:89:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 924,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "8870:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 927,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "8902:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 925,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "8885:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1254,
															"src": "8885:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8885:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8870:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "8870:39:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 932,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8933:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8950:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8942:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8942:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8942:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 937,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "8954:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 931,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8924:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8924:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "EmitStatement",
												"src": "8919:42:4"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "8244:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "8573:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "8590:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8572:33:4"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8623:0:4"
									},
									"scope": 998,
									"src": "8558:410:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "9504:257:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 952,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "9522:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9539:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9531:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 953,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9531:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9531:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9522:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9543:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9514:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9514:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "9514:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 962,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "9600:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9619:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9611:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9611:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9611:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9600:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9623:36:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9592:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9592:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9592:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 971,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "9671:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 974,
															"indexExpression": {
																"argumentTypes": null,
																"id": 972,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "9683:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9671:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 975,
														"indexExpression": {
															"argumentTypes": null,
															"id": 973,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9690:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9671:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 976,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "9701:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9671:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "9671:36:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 980,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "9731:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 981,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9738:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 982,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "9747:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "9722:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9722:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "EmitStatement",
												"src": "9717:37:4"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "8974:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9418:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9418:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9441:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9441:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9466:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9466:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9408:78:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9504:0:4"
									},
									"scope": 998,
									"src": "9391:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "10467:2:4",
										"statements": []
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "9767:576:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10387:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10387:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10409:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10429:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10377:72:4"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10467:0:4"
									},
									"scope": 998,
									"src": "10348:121:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "1325:9146:4"
						}
					],
					"src": "33:10439:4"
				},
				"id": 4
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "269:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "268:9:5"
									},
									"scope": 1076,
									"src": "223:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1015,
												"src": "380:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "379:17:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1015,
												"src": "420:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:9:5"
									},
									"scope": 1076,
									"src": "361:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "667:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "686:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:35:5"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "720:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:5"
									},
									"scope": 1076,
									"src": "649:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1020:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1035:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:32:5"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1074:9:5"
									},
									"scope": 1076,
									"src": "1001:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1754:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1771:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1753:33:5"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1805:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1042,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:6:5"
									},
									"scope": 1076,
									"src": "1737:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2149:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2173:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2200:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2139:81:5"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2239:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2238:6:5"
									},
									"scope": 1076,
									"src": "2118:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1066,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2429:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2451:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2471:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:57:5"
									},
									"src": "2414:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1075,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2660:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2683:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2708:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2659:63:5"
									},
									"src": "2645:78:5"
								}
							],
							"scope": 1077,
							"src": "129:2596:5"
						}
					],
					"src": "33:2693:5"
				},
				"id": 5
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20Metadata": [
							1101
						]
					},
					"id": 1102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1079,
							"nodeType": "ImportDirective",
							"scope": 1102,
							"sourceUnit": 1077,
							"src": "58:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1081,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1076,
										"src": "227:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1076",
											"typeString": "contract IERC20"
										}
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "227:6:6"
								}
							],
							"contractDependencies": [
								1076
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "82:116:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1101,
							"linearizedBaseContracts": [
								1101,
								1076
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "240:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "338:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "337:15:6"
									},
									"scope": 1101,
									"src": "299:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "359:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1094,
												"src": "461:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1091,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "461:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "460:15:6"
									},
									"scope": 1101,
									"src": "420:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "482:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "595:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1097,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "595:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "594:7:6"
									},
									"scope": 1101,
									"src": "552:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1102,
							"src": "199:405:6"
						}
					],
					"src": "33:572:6"
				},
				"id": 6
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1209
						]
					},
					"id": 1210,
					"license": "MIT License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1103,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 1104,
							"nodeType": "ImportDirective",
							"scope": 1210,
							"sourceUnit": 23,
							"src": "66:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1105,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "111:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 1106,
									"nodeType": "InheritanceSpecifier",
									"src": "111:7:7"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1209,
							"linearizedBaseContracts": [
								1209,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1108,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1209,
									"src": "125:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "125:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1114,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "181:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "212:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "180:57:7"
									},
									"src": "154:84:7"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "362:135:7",
										"statements": [
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1135,
														"src": "372:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1118,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "372:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1120,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "392:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "392:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "372:32:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1123,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "414:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1124,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "423:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "414:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "414:18:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "476:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "468:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1128,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "468:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "468:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1132,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "480:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1127,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "447:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "442:48:7"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "244:91:7",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:7"
									},
									"scope": 1209,
									"src": "340:157:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "620:30:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1142,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1108,
													"src": "637:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1143,
												"nodeType": "Return",
												"src": "630:13:7"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "503:65:7",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:7"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1145,
												"src": "611:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "610:9:7"
									},
									"scope": 1209,
									"src": "573:77:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "759:95:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1149,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "777:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1150,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "787:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "787:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "777:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "801:34:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "769:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "769:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "769:67:7"
											},
											{
												"id": 1156,
												"nodeType": "PlaceholderStatement",
												"src": "846:1:7"
											}
										]
									},
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "656:77:7",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1158,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:2:7"
									},
									"src": "738:116:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "1250:91:7",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1165,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1286:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1302:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1294:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1294:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1294:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1164,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1265:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1265:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "EmitStatement",
												"src": "1260:45:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1172,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "1315:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1332:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1324:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1324:7:7",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1324:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1315:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "1315:19:7"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "860:331:7",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1162,
											"modifierName": {
												"argumentTypes": null,
												"id": 1161,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1158,
												"src": "1240:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1240:9:7"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1222:2:7"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:7"
									},
									"scope": 1209,
									"src": "1196:145:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "1560:170:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1189,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "1578:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1598:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1590:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1590:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1590:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1578:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1602:40:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1570:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "1570:73:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1199,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1679:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1200,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1687:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1198,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1658:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "EmitStatement",
												"src": "1653:43:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1203,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "1706:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1204,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "1715:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1706:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "1706:17:7"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "1347:138:7",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1186,
											"modifierName": {
												"argumentTypes": null,
												"id": 1185,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1158,
												"src": "1550:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1550:9:7"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1208,
												"src": "1517:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1516:18:7"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1560:0:7"
									},
									"scope": 1209,
									"src": "1490:240:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1210,
							"src": "91:1641:7"
						}
					],
					"src": "0:1733:7"
				},
				"id": 7
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1404
						]
					},
					"id": 1405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1211,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1404,
							"linearizedBaseContracts": [
								1404
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "377:109:8",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1236,
														"src": "387:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "387:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1223,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "399:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1224,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "403:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "399:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "387:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1228,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "422:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1229,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "427:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "422:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:29:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "414:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "414:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "414:46:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1222,
													"src": "478:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1235,
												"nodeType": "Return",
												"src": "471:8:8"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "81:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "323:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "334:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "322:22:8"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "368:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:9:8"
									},
									"scope": 1404,
									"src": "310:176:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "824:67:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1248,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "845:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1249,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "848:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "851:32:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1247,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1254,
															1282
														],
														"referencedDeclaration": 1282,
														"src": "841:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1246,
												"id": 1252,
												"nodeType": "Return",
												"src": "834:50:8"
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "492:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1254,
												"src": "770:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1254,
												"src": "781:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:22:8"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1254,
												"src": "815:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "814:9:8"
									},
									"scope": 1404,
									"src": "757:134:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "1277:92:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1267,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "1295:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1268,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "1300:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1295:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1270,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "1303:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1287:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "1287:29:8"
											},
											{
												"assignments": [
													1274
												],
												"declarations": [
													{
														"constant": false,
														"id": 1274,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "1326:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1326:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1278,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1275,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "1338:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1276,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "1342:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1338:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1326:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1279,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1274,
													"src": "1361:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1280,
												"nodeType": "Return",
												"src": "1354:8:8"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "897:280:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1195:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1206:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1217:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1217:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1194:50:8"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1268:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1267:9:8"
									},
									"scope": 1404,
									"src": "1182:187:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "1683:392:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "1915:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1920:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1915:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1298,
												"nodeType": "IfStatement",
												"src": "1911:45:8",
												"trueBody": {
													"id": 1297,
													"nodeType": "Block",
													"src": "1923:33:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1944:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1291,
															"id": 1296,
															"nodeType": "Return",
															"src": "1937:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1300
												],
												"declarations": [
													{
														"constant": false,
														"id": 1300,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1316,
														"src": "1966:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1966:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1304,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1301,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "1978:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1302,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "1982:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1978:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1966:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1306,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "2001:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1307,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "2005:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2001:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "2010:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2001:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2013:35:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1993:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "1993:56:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1314,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "2067:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1315,
												"nodeType": "Return",
												"src": "2060:8:8"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1375:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1317,
												"src": "1629:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1317,
												"src": "1640:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1628:22:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1317,
												"src": "1674:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1673:9:8"
									},
									"scope": 1404,
									"src": "1616:459:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2604:63:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1328,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "2625:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1329,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "2628:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2631:28:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1327,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1334,
															1362
														],
														"referencedDeclaration": 1362,
														"src": "2621:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2621:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1332,
												"nodeType": "Return",
												"src": "2614:46:8"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "2081:451:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2550:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2561:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2549:22:8"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2595:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2595:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2594:9:8"
									},
									"scope": 1404,
									"src": "2537:130:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "3244:177:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "3262:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3266:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3262:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1350,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3269:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3254:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "3254:28:8"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1361,
														"src": "3292:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3292:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1358,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1355,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "3304:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1356,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "3308:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3304:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3292:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1359,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "3413:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1360,
												"nodeType": "Return",
												"src": "3406:8:8"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "2673:471:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3162:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3173:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3184:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3184:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3161:50:8"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3235:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3234:9:8"
									},
									"scope": 1404,
									"src": "3149:272:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "3939:61:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1373,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "3960:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1374,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "3963:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3966:26:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1372,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1379,
															1403
														],
														"referencedDeclaration": 1403,
														"src": "3956:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3956:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1371,
												"id": 1377,
												"nodeType": "Return",
												"src": "3949:44:8"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "3427:440:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "3885:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "3896:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3896:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3884:22:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "3930:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3929:9:8"
									},
									"scope": 1404,
									"src": "3872:128:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "4566:68:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1392,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "4584:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4589:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4584:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1395,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4592:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4576:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "4576:29:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1398,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "4622:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1399,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "4626:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4622:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1401,
												"nodeType": "Return",
												"src": "4615:12:8"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "4006:460:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4484:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4484:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4495:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4506:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4506:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4483:50:8"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4557:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4556:9:8"
									},
									"scope": 1404,
									"src": "4471:163:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1405,
							"src": "58:4578:8"
						}
					],
					"src": "33:4604:8"
				},
				"id": 8
			},
			"SafeMathInt.sol": {
				"ast": {
					"absolutePath": "SafeMathInt.sol",
					"exportedSymbols": {
						"SafeMathInt": [
							1621
						]
					},
					"id": 1622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1406,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "1146:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1407,
								"nodeType": "StructuredDocumentation",
								"src": "1171:93:9",
								"text": " @title SafeMathInt\n @dev Math operations for int256 with overflow safety checks."
							},
							"fullyImplemented": true,
							"id": 1621,
							"linearizedBaseContracts": [
								1621
							],
							"name": "SafeMathInt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1415,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1621,
									"src": "1291:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1408,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1291:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"id": 1414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "31",
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1335:1:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 1410,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1328:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_int256_$",
													"typeString": "type(int256)"
												},
												"typeName": {
													"id": 1409,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:6:9",
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													}
												}
											},
											"id": 1412,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1328:9:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "323535",
											"id": 1413,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1341:3:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "1328:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1425,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1621,
									"src": "1350:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1416,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1350:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 1424,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1387:19:9",
										"subExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1396:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1389:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1417,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1389:6:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1389:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323535",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1402:3:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "1389:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 1423,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1388:18:9",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "1560:232:9",
										"statements": [
											{
												"assignments": [
													1436
												],
												"declarations": [
													{
														"constant": false,
														"id": 1436,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1473,
														"src": "1570:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1435,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1570:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "1581:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "1585:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1581:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1570:16:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1442,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "1668:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1443,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "1673:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1668:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1445,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "1688:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1446,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "1692:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1688:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1448,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1687:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1449,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "1708:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1450,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "1712:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1708:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1707:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1687:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1668:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1660:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "1660:64:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1458,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "1743:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1748:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1743:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1461,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1742:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1462,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "1755:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1463,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "1759:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1755:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1465,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "1764:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "1755:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1754:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1742:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1734:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1734:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "1734:33:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1471,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "1784:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1434,
												"id": 1472,
												"nodeType": "Return",
												"src": "1777:8:9"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "1413:78:9",
										"text": " @dev Multiplies two int256 variables and fails on overflow."
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "1509:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1427,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1509:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "1519:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1429,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1508:20:9"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "1552:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1432,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1551:8:9"
									},
									"scope": 1621,
									"src": "1496:296:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "1946:189:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1485,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "2023:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "2028:2:9",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2029:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "2023:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1489,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "2034:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1490,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "2039:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2034:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2023:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2015:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "2015:35:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1495,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "2123:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1496,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "2127:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2123:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1498,
												"nodeType": "Return",
												"src": "2116:12:9"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "1798:79:9",
										"text": " @dev Division of two int256 variables and fails on overflow."
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1500,
												"src": "1895:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1476,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1895:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1500,
												"src": "1905:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1478,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1894:20:9"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1500,
												"src": "1938:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1481,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1937:8:9"
									},
									"scope": 1621,
									"src": "1882:253:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "2287:108:9",
										"statements": [
											{
												"assignments": [
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1538,
														"src": "2297:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1510,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2297:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "2308:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "2312:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2308:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:16:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1517,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1505,
																				"src": "2332:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2337:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2332:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1520,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1511,
																				"src": "2342:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1521,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "2347:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2342:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2332:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2331:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1525,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1505,
																				"src": "2354:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2358:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2354:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1528,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1511,
																				"src": "2363:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1529,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "2367:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2363:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2354:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1532,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2353:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2331:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2323:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2323:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "2323:47:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1536,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1511,
													"src": "2387:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1509,
												"id": 1537,
												"nodeType": "Return",
												"src": "2380:8:9"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "2141:77:9",
										"text": " @dev Subtracts two int256 variables and fails on overflow."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1539,
												"src": "2236:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1502,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1539,
												"src": "2246:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1504,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2235:20:9"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1539,
												"src": "2279:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1507,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2279:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2278:8:9"
									},
									"scope": 1621,
									"src": "2223:172:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "2542:108:9",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1577,
														"src": "2552:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1549,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2552:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1551,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "2563:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1552,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "2567:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2563:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2552:16:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1556,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "2587:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2592:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2587:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1559,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1550,
																				"src": "2597:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1560,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "2602:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2597:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2587:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1563,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2586:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1564,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "2609:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2613:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2609:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1567,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1550,
																				"src": "2618:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1568,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "2622:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2618:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2609:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2608:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2586:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2578:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "2578:47:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1575,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1550,
													"src": "2642:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1576,
												"nodeType": "Return",
												"src": "2635:8:9"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2401:72:9",
										"text": " @dev Adds two int256 variables and fails on overflow."
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1578,
												"src": "2491:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1578,
												"src": "2501:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2490:20:9"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1578,
												"src": "2534:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1546,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2534:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2533:8:9"
									},
									"scope": 1621,
									"src": "2478:172:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "2789:72:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1587,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "2807:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1588,
																"name": "MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "2812:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "2807:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2799:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2799:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "2799:24:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1592,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "2840:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2844:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2840:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1597,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "2853:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2840:14:9",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2848:2:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1595,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "2849:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1599,
												"nodeType": "Return",
												"src": "2833:21:9"
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "2656:74:9",
										"text": " @dev Converts to absolute value, and fails on overflow."
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "2748:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1580,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:10:9"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "2781:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1583,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2780:8:9"
									},
									"scope": 1621,
									"src": "2735:126:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "2933:59:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1609,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "2951:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2956:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2951:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2943:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2943:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "2943:15:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1616,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "2983:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2975:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2975:7:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1618,
												"nodeType": "Return",
												"src": "2968:17:9"
											}
										]
									},
									"documentation": null,
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256Safe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1620,
												"src": "2891:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2890:10:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1620,
												"src": "2924:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2923:9:9"
									},
									"scope": 1621,
									"src": "2868:124:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1622,
							"src": "1265:1729:9"
						}
					],
					"src": "1146:1849:9"
				},
				"id": 9
			},
			"SafeMathUint.sol": {
				"ast": {
					"absolutePath": "SafeMathUint.sol",
					"exportedSymbols": {
						"SafeMathUint": [
							1648
						]
					},
					"id": 1649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1623,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1624,
								"nodeType": "StructuredDocumentation",
								"src": "58:94:10",
								"text": " @title SafeMathUint\n @dev Math operations with safety checks that revert on error"
							},
							"fullyImplemented": true,
							"id": 1648,
							"linearizedBaseContracts": [
								1648
							],
							"name": "SafeMathUint",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "242:66:10",
										"statements": [
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1646,
														"src": "248:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1631,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "248:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1635,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "266:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "259:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 1633,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "259:6:10",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:9:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "248:20:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1639,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "282:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "287:1:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "282:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "274:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "274:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "274:15:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1644,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1632,
													"src": "302:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1645,
												"nodeType": "Return",
												"src": "295:8:10"
											}
										]
									},
									"documentation": null,
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256Safe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1647,
												"src": "200:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "199:11:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1647,
												"src": "234:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1628,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "234:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "233:8:10"
									},
									"scope": 1648,
									"src": "178:130:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1649,
							"src": "153:157:10"
						}
					],
					"src": "33:278:10"
				},
				"id": 10
			}
		}
	}
}