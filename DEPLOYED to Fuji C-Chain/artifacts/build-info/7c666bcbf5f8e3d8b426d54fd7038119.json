{
	"id": "7c666bcbf5f8e3d8b426d54fd7038119",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"MONEYAVAXDividendTracker.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n\npragma solidity ^0.6.2;\n\n\nimport \"./DividendPayingToken.sol\";\nimport \"./SafeMath.sol\";\nimport \"./IterableMapping.sol\";\nimport \"./Ownable.sol\";\nimport \"./IUniswapV2Pair.sol\";\nimport \"./IUniswapV2Factory.sol\";\nimport \"./IUniswapV2Router.sol\";\nimport \"./MONEYAVAXDividendTracker.sol\";\n\n\n\ncontract MONEYAVAXDividendTracker is Ownable, DividendPayingToken {\n    using SafeMath for uint256;\n    using SafeMathInt for int256;\n    using IterableMapping for IterableMapping.Map;\n\n    IterableMapping.Map private tokenHoldersMap;\n    uint256 public lastProcessedIndex;\n\n    mapping (address => bool) public excludedFromDividends;\n\n    mapping (address => uint256) public lastClaimTimes;\n\n    uint256 public claimWait;\n    uint256 public immutable minimumTokenBalanceForDividends;\n\n    event ExcludeFromDividends(address indexed account);\n    event ClaimWaitUpdated(uint256 indexed newValue, uint256 indexed oldValue);\n\n    event Claim(address indexed account, uint256 amount, bool indexed automatic);\n\n    constructor() public DividendPayingToken(\"MONEYAVAX_Dividen_Tracker\", \"MONEYAVAX_Dividend_Tracker\") {\n    \tclaimWait = 3600;\n        minimumTokenBalanceForDividends = 200000 * (10**18); //must hold 200000+ tokens\n    }\n\n    function _transfer(address, address, uint256) internal override {\n        require(false, \"MONEYAVAX_Dividend_Tracker: No transfers allowed\");\n    }\n\n    function withdrawDividend() public override {\n        require(false, \"MONEYAVAX_Dividend_Tracker: withdrawDividend disabled. Use the 'claim' function on the main MONEYAVAX contract.\");\n    }\n\n    function excludeFromDividends(address account) external onlyOwner {\n    \trequire(!excludedFromDividends[account]);\n    \texcludedFromDividends[account] = true;\n\n    \t_setBalance(account, 0);\n    \ttokenHoldersMap.remove(account);\n\n    \temit ExcludeFromDividends(account);\n    }\n\n    function updateClaimWait(uint256 newClaimWait) external onlyOwner {\n        require(newClaimWait >= 3600 && newClaimWait <= 86400, \"MONEYAVAX_Dividend_Tracker: claimWait must be updated to between 1 and 24 hours\");\n        require(newClaimWait != claimWait, \"MONEYAVAX_Dividend_Tracker: Cannot update claimWait to same value\");\n        emit ClaimWaitUpdated(newClaimWait, claimWait);\n        claimWait = newClaimWait;\n    }\n\n    function getLastProcessedIndex() external view returns(uint256) {\n    \treturn lastProcessedIndex;\n    }\n\n    function getNumberOfTokenHolders() external view returns(uint256) {\n        return tokenHoldersMap.keys.length;\n    }\n\n\n\n    function getAccount(address _account)\n        public view returns (\n            address account,\n            int256 index,\n            int256 iterationsUntilProcessed,\n            uint256 withdrawableDividends,\n            uint256 totalDividends,\n            uint256 lastClaimTime,\n            uint256 nextClaimTime,\n            uint256 secondsUntilAutoClaimAvailable) {\n        account = _account;\n\n        index = tokenHoldersMap.getIndexOfKey(account);\n\n        iterationsUntilProcessed = -1;\n\n        if(index >= 0) {\n            if(uint256(index) > lastProcessedIndex) {\n                iterationsUntilProcessed = index.sub(int256(lastProcessedIndex));\n            }\n            else {\n                uint256 processesUntilEndOfArray = tokenHoldersMap.keys.length > lastProcessedIndex ?\n                                                        tokenHoldersMap.keys.length.sub(lastProcessedIndex) :\n                                                        0;\n\n\n                iterationsUntilProcessed = index.add(int256(processesUntilEndOfArray));\n            }\n        }\n\n\n        withdrawableDividends = withdrawableDividendOf(account);\n        totalDividends = accumulativeDividendOf(account);\n\n        lastClaimTime = lastClaimTimes[account];\n\n        nextClaimTime = lastClaimTime > 0 ?\n                                    lastClaimTime.add(claimWait) :\n                                    0;\n\n        secondsUntilAutoClaimAvailable = nextClaimTime > block.timestamp ?\n                                                    nextClaimTime.sub(block.timestamp) :\n                                                    0;\n    }\n\n    function getAccountAtIndex(uint256 index)\n        public view returns (\n            address,\n            int256,\n            int256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256) {\n    \tif(index >= tokenHoldersMap.size()) {\n            return (0x0000000000000000000000000000000000000000, -1, -1, 0, 0, 0, 0, 0);\n        }\n\n        address account = tokenHoldersMap.getKeyAtIndex(index);\n\n        return getAccount(account);\n    }\n\n    function canAutoClaim(uint256 lastClaimTime) private view returns (bool) {\n    \tif(lastClaimTime > block.timestamp)  {\n    \t\treturn false;\n    \t}\n\n    \treturn block.timestamp.sub(lastClaimTime) >= claimWait;\n    }\n\n    function setBalance(address payable account, uint256 newBalance) external onlyOwner {\n    \tif(excludedFromDividends[account]) {\n    \t\treturn;\n    \t}\n\n    \tif(newBalance >= minimumTokenBalanceForDividends) {\n            _setBalance(account, newBalance);\n    \t\ttokenHoldersMap.set(account, newBalance);\n    \t}\n    \telse {\n            _setBalance(account, 0);\n    \t\ttokenHoldersMap.remove(account);\n    \t}\n\n    \tprocessAccount(account, true);\n    }\n\n    function process(uint256 gas) public returns (uint256, uint256, uint256) {\n    \tuint256 numberOfTokenHolders = tokenHoldersMap.keys.length;\n\n    \tif(numberOfTokenHolders == 0) {\n    \t\treturn (0, 0, lastProcessedIndex);\n    \t}\n\n    \tuint256 _lastProcessedIndex = lastProcessedIndex;\n\n    \tuint256 gasUsed = 0;\n\n    \tuint256 gasLeft = gasleft();\n\n    \tuint256 iterations = 0;\n    \tuint256 claims = 0;\n\n    \twhile(gasUsed < gas && iterations < numberOfTokenHolders) {\n    \t\t_lastProcessedIndex++;\n\n    \t\tif(_lastProcessedIndex >= tokenHoldersMap.keys.length) {\n    \t\t\t_lastProcessedIndex = 0;\n    \t\t}\n\n    \t\taddress account = tokenHoldersMap.keys[_lastProcessedIndex];\n\n    \t\tif(canAutoClaim(lastClaimTimes[account])) {\n    \t\t\tif(processAccount(payable(account), true)) {\n    \t\t\t\tclaims++;\n    \t\t\t}\n    \t\t}\n\n    \t\titerations++;\n\n    \t\tuint256 newGasLeft = gasleft();\n\n    \t\tif(gasLeft > newGasLeft) {\n    \t\t\tgasUsed = gasUsed.add(gasLeft.sub(newGasLeft));\n    \t\t}\n\n    \t\tgasLeft = newGasLeft;\n    \t}\n\n    \tlastProcessedIndex = _lastProcessedIndex;\n\n    \treturn (iterations, claims, lastProcessedIndex);\n    }\n\n    function processAccount(address payable account, bool automatic) public onlyOwner returns (bool) {\n        uint256 amount = _withdrawDividendOfUser(account);\n\n    \tif(amount > 0) {\n    \t\tlastClaimTimes[account] = block.timestamp;\n            emit Claim(account, amount, automatic);\n    \t\treturn true;\n    \t}\n\n    \treturn false;\n    }\n}\n"
			},
			"IUniswapV2Router.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n\n\n\n// pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			},
			"IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"Ownable.sol": {
				"content": "pragma solidity ^0.6.2;\n\n// SPDX-License-Identifier: MIT License\n\nimport \"./Context.sol\";\n\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () public {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"IterableMapping.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.2;\n\nlibrary IterableMapping {\n    // Iterable mapping from address to uint;\n    struct Map {\n        address[] keys;\n        mapping(address => uint) values;\n        mapping(address => uint) indexOf;\n        mapping(address => bool) inserted;\n    }\n\n    function get(Map storage map, address key) public view returns (uint) {\n        return map.values[key];\n    }\n\n    function getIndexOfKey(Map storage map, address key) public view returns (int) {\n        if(!map.inserted[key]) {\n            return -1;\n        }\n        return int(map.indexOf[key]);\n    }\n\n    function getKeyAtIndex(Map storage map, uint index) public view returns (address) {\n        return map.keys[index];\n    }\n\n\n\n    function size(Map storage map) public view returns (uint) {\n        return map.keys.length;\n    }\n\n    function set(Map storage map, address key, uint val) public {\n        if (map.inserted[key]) {\n            map.values[key] = val;\n        } else {\n            map.inserted[key] = true;\n            map.values[key] = val;\n            map.indexOf[key] = map.keys.length;\n            map.keys.push(key);\n        }\n    }\n\n    function remove(Map storage map, address key) public {\n        if (!map.inserted[key]) {\n            return;\n        }\n\n        delete map.inserted[key];\n        delete map.values[key];\n\n        uint index = map.indexOf[key];\n        uint lastIndex = map.keys.length - 1;\n        address lastKey = map.keys[lastIndex];\n\n        map.indexOf[lastKey] = index;\n        delete map.indexOf[key];\n\n        map.keys[index] = lastKey;\n        map.keys.pop();\n    }\n}\n"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"DividendPayingToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./ERC20.sol\";\nimport \"./SafeMath.sol\";\nimport \"./SafeMathUint.sol\";\nimport \"./SafeMathInt.sol\";\nimport \"./DividendPayingTokenInterface.sol\";\nimport \"./DividendPayingTokenOptionalInterface.sol\";\nimport \"./Ownable.sol\";\n\n\n/// @title Dividend-Paying Token\n/// @author Roger Wu (https://github.com/roger-wu)\n/// @dev A mintable ERC20 token that allows anyone to pay and distribute ether\n///  to token holders as dividends and allows token holders to withdraw their dividends.\n///  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code\ncontract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {\n  using SafeMath for uint256;\n  using SafeMathUint for uint256;\n  using SafeMathInt for int256;\n    \n    // address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82); //CAKE Bsc\n    // address public immutable CAKE = address(0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB); // WETH.e AVAX Mainnet\n     address public immutable CAKE = address(0xB6076C93701D6a07266c31066B298AeC6dd65c2d); // USDC fujic \n\n\n  // With `magnitude`, we can properly distribute dividends even if the amount of received ether is small.\n  // For more discussion about choosing the value of `magnitude`,\n  //  see https://github.com/ethereum/EIPs/issues/1726#issuecomment-472352728\n  uint256 constant internal magnitude = 2**128;\n\n  uint256 internal magnifiedDividendPerShare;\n\n  // About dividendCorrection:\n  // If the token balance of a `_user` is never changed, the dividend of `_user` can be computed with:\n  //   `dividendOf(_user) = dividendPerShare * balanceOf(_user)`.\n  // When `balanceOf(_user)` is changed (via minting/burning/transferring tokens),\n  //   `dividendOf(_user)` should not be changed,\n  //   but the computed value of `dividendPerShare * balanceOf(_user)` is changed.\n  // To keep the `dividendOf(_user)` unchanged, we add a correction term:\n  //   `dividendOf(_user) = dividendPerShare * balanceOf(_user) + dividendCorrectionOf(_user)`,\n  //   where `dividendCorrectionOf(_user)` is updated whenever `balanceOf(_user)` is changed:\n  //   `dividendCorrectionOf(_user) = dividendPerShare * (old balanceOf(_user)) - (new balanceOf(_user))`.\n  // So now `dividendOf(_user)` returns the same value before and after `balanceOf(_user)` is changed.\n  mapping(address => int256) internal magnifiedDividendCorrections;\n  mapping(address => uint256) internal withdrawnDividends;\n\n  uint256 public totalDividendsDistributed;\n\n  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {\n\n  }\n\n\n  function distributeCAKEDividends(uint256 amount) public onlyOwner{\n    require(totalSupply() > 0);\n\n    if (amount > 0) {\n      magnifiedDividendPerShare = magnifiedDividendPerShare.add(\n        (amount).mul(magnitude) / totalSupply()\n      );\n      emit DividendsDistributed(msg.sender, amount);\n\n      totalDividendsDistributed = totalDividendsDistributed.add(amount);\n    }\n  }\n\n  /// @notice Withdraws the ether distributed to the sender.\n  /// @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\n  function withdrawDividend() public virtual override {\n    _withdrawDividendOfUser(msg.sender);\n  }\n\n  /// @notice Withdraws the ether distributed to the sender.\n  /// @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\n function _withdrawDividendOfUser(address payable user) internal returns (uint256) {\n    uint256 _withdrawableDividend = withdrawableDividendOf(user);\n    if (_withdrawableDividend > 0) {\n      withdrawnDividends[user] = withdrawnDividends[user].add(_withdrawableDividend);\n      emit DividendWithdrawn(user, _withdrawableDividend);\n      bool success = IERC20(CAKE).transfer(user, _withdrawableDividend);\n\n      if(!success) {\n        withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend);\n        return 0;\n      }\n\n      return _withdrawableDividend;\n    }\n\n    return 0;\n  }\n\n\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function dividendOf(address _owner) public view override returns(uint256) {\n    return withdrawableDividendOf(_owner);\n  }\n\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function withdrawableDividendOf(address _owner) public view override returns(uint256) {\n    return accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]);\n  }\n\n  /// @notice View the amount of dividend in wei that an address has withdrawn.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has withdrawn.\n  function withdrawnDividendOf(address _owner) public view override returns(uint256) {\n    return withdrawnDividends[_owner];\n  }\n\n\n  /// @notice View the amount of dividend in wei that an address has earned in total.\n  /// @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n  /// = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has earned in total.\n  function accumulativeDividendOf(address _owner) public view override returns(uint256) {\n    return magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\n      .add(magnifiedDividendCorrections[_owner]).toUint256Safe() / magnitude;\n  }\n\n  /// @dev Internal function that transfer tokens from one address to another.\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\n  /// @param from The address to transfer from.\n  /// @param to The address to transfer to.\n  /// @param value The amount to be transferred.\n  function _transfer(address from, address to, uint256 value) internal virtual override {\n    require(false);\n\n    int256 _magCorrection = magnifiedDividendPerShare.mul(value).toInt256Safe();\n    magnifiedDividendCorrections[from] = magnifiedDividendCorrections[from].add(_magCorrection);\n    magnifiedDividendCorrections[to] = magnifiedDividendCorrections[to].sub(_magCorrection);\n  }\n\n  /// @dev Internal function that mints tokens to an account.\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\n  /// @param account The account that will receive the created tokens.\n  /// @param value The amount that will be created.\n  function _mint(address account, uint256 value) internal override {\n    super._mint(account, value);\n\n    magnifiedDividendCorrections[account] = magnifiedDividendCorrections[account]\n      .sub( (magnifiedDividendPerShare.mul(value)).toInt256Safe() );\n  }\n\n  /// @dev Internal function that burns an amount of the token of a given account.\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\n  /// @param account The account whose tokens will be burnt.\n  /// @param value The amount that will be burnt.\n  function _burn(address account, uint256 value) internal override {\n    super._burn(account, value);\n\n    magnifiedDividendCorrections[account] = magnifiedDividendCorrections[account]\n      .add( (magnifiedDividendPerShare.mul(value)).toInt256Safe() );\n  }\n\n  function _setBalance(address account, uint256 newBalance) internal {\n    uint256 currentBalance = balanceOf(account);\n\n    if(newBalance > currentBalance) {\n      uint256 mintAmount = newBalance.sub(currentBalance);\n      _mint(account, mintAmount);\n    } else if(newBalance < currentBalance) {\n      uint256 burnAmount = currentBalance.sub(newBalance);\n      _burn(account, burnAmount);\n    }\n  }\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n\n/// @title Dividend-Paying Token Optional Interface\n/// @author Roger Wu (https://github.com/roger-wu)\n/// @dev OPTIONAL functions for a dividend-paying token contract.\ninterface DividendPayingTokenOptionalInterface {\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function withdrawableDividendOf(address _owner) external view returns(uint256);\n\n  /// @notice View the amount of dividend in wei that an address has withdrawn.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has withdrawn.\n  function withdrawnDividendOf(address _owner) external view returns(uint256);\n\n  /// @notice View the amount of dividend in wei that an address has earned in total.\n  /// @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` has earned in total.\n  function accumulativeDividendOf(address _owner) external view returns(uint256);\n}\n"
			},
			"DividendPayingTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n\n/// @title Dividend-Paying Token Interface\n/// @author Roger Wu (https://github.com/roger-wu)\n/// @dev An interface for a dividend-paying token contract.\ninterface DividendPayingTokenInterface {\n  /// @notice View the amount of dividend in wei that an address can withdraw.\n  /// @param _owner The address of a token holder.\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\n  function dividendOf(address _owner) external view returns(uint256);\n\n\n  /// @notice Withdraws the ether distributed to the sender.\n  /// @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  ///  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\n  function withdrawDividend() external;\n\n  /// @dev This event MUST emit when ether is distributed to token holders.\n  /// @param from The address which sends ether to this contract.\n  /// @param weiAmount The amount of distributed ether in wei.\n  event DividendsDistributed(\n    address indexed from,\n    uint256 weiAmount\n  );\n\n  /// @dev This event MUST emit when an address withdraws their dividend.\n  /// @param to The address which withdraws ether from this contract.\n  /// @param weiAmount The amount of withdrawn ether in wei.\n  event DividendWithdrawn(\n    address indexed to,\n    uint256 weiAmount\n  );\n}\n"
			},
			"SafeMathInt.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\nMIT License\n\nCopyright (c) 2018 requestnetwork\nCopyright (c) 2018 Fragments, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\npragma solidity ^0.6.2;\n\n/**\n * @title SafeMathInt\n * @dev Math operations for int256 with overflow safety checks.\n */\nlibrary SafeMathInt {\n    int256 private constant MIN_INT256 = int256(1) << 255;\n    int256 private constant MAX_INT256 = ~(int256(1) << 255);\n\n    /**\n     * @dev Multiplies two int256 variables and fails on overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a * b;\n\n        // Detect overflow when multiplying MIN_INT256 with -1\n        require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\n        require((b == 0) || (c / b == a));\n        return c;\n    }\n\n    /**\n     * @dev Division of two int256 variables and fails on overflow.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        // Prevent overflow when dividing MIN_INT256 by -1\n        require(b != -1 || a != MIN_INT256);\n\n        // Solidity already throws when dividing by 0.\n        return a / b;\n    }\n\n    /**\n     * @dev Subtracts two int256 variables and fails on overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a - b;\n        require((b >= 0 && c <= a) || (b < 0 && c > a));\n        return c;\n    }\n\n    /**\n     * @dev Adds two int256 variables and fails on overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a + b;\n        require((b >= 0 && c >= a) || (b < 0 && c < a));\n        return c;\n    }\n\n    /**\n     * @dev Converts to absolute value, and fails on overflow.\n     */\n    function abs(int256 a) internal pure returns (int256) {\n        require(a != MIN_INT256);\n        return a < 0 ? -a : a;\n    }\n\n\n    function toUint256Safe(int256 a) internal pure returns (uint256) {\n        require(a >= 0);\n        return uint256(a);\n    }\n}\n"
			},
			"SafeMathUint.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @title SafeMathUint\n * @dev Math operations with safety checks that revert on error\n */\nlibrary SafeMathUint {\n  function toInt256Safe(uint256 a) internal pure returns (int256) {\n    int256 b = int256(a);\n    require(b >= 0);\n    return b;\n  }\n}\n"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DividendPayingToken.sol": {
				"DividendPayingToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendsDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CAKE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeCAKEDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "dividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDividendsDistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDividend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawableDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "A mintable ERC20 token that allows anyone to pay and distribute ether  to token holders as dividends and allows token holders to withdraw their dividends.  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code",
						"kind": "dev",
						"methods": {
							"accumulativeDividendOf(address)": {
								"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude",
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has earned in total."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"dividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawDividend()": {
								"details": "It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
							},
							"withdrawableDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawnDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has withdrawn."
								}
							}
						},
						"title": "Dividend-Paying Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\n  mstore(0x40, 0xa0)\n    /* \"DividendPayingToken.sol\":1099:1182  address public immutable CAKE = address(0xB6076C93701D6a07266c31066B298AeC6dd65c2d) */\n  mstore(0x80, 0xb6076c93701d6a07266c31066b298aec6dd65c2d000000000000000000000000)\n    /* \"DividendPayingToken.sol\":2613:2704  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  dup3\n  mload\n    /* \"DividendPayingToken.sol\":2682:2687  _name */\n  dup4\n  swap2\n  pop\n    /* \"DividendPayingToken.sol\":2689:2696  _symbol */\n  dup3\n  swap1\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  tag_21\n  swap1\n    /* \"ERC20.sol\":2006:2011  _name */\n  0x03\n  swap1\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  dup1\n  mload\n  tag_23\n  swap1\n    /* \"ERC20.sol\":2029:2036  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_22\n  jump\t// in\ntag_23:\n  pop\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"Ownable.sol\":372:389  address msgSender */\n  0x00\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  tag_25\n    /* \"Ownable.sol\":392:402  _msgSender */\n  shl(0x20, tag_26)\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"Ownable.sol\":414:420  _owner */\n  0x05\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n    /* \"Ownable.sol\":340:497  constructor () public {... */\n  pop\n    /* \"DividendPayingToken.sol\":2613:2704  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {... */\n  pop\n  pop\n    /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\n  jump(tag_28)\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\ntag_26:\n    /* \"Context.sol\":665:675  msg.sender */\n  caller\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\ntag_22:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_36)\ntag_28:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"DividendPayingToken.sol\":658:7951  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85a6b3ae\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa8b9d240\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa8b9d240\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xaafd847a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xba72a955\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x85a6b3ae\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91b89fba\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4ca6ef28\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6a474002\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x27ce0147\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_30:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_30)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_36\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_41\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_44\n      jump\t// in\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n        /* \"DividendPayingToken.sol\":1099:1182  address public immutable CAKE = address(0xB6076C93701D6a07266c31066B298AeC6dd65c2d) */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"DividendPayingToken.sol\":3254:3352  function withdrawDividend() public virtual override {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_56\n      jump\t// in\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_52\n      tag_58\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2568:2608  uint256 public totalDividendsDistributed */\n    tag_14:\n      tag_37\n      tag_60\n      jump\t// in\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_15:\n      tag_50\n      tag_62\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4325:4447  function dividendOf(address _owner) public view override returns(uint256) {... */\n    tag_16:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_65\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_28\n      tag_67\n      jump\t// in\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_18:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_74\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4653:4819  function withdrawableDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_19:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_80\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_21:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n    tag_22:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      calldataload\n      tag_86\n      jump\t// in\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_23:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_89\n      jump\t// in\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_92\n      jump\t// in\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"ERC20.sol\":2204:2209  _name */\n      0x03\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2172:2185  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2197:2209  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2204:2209  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2204:2209  _name */\n      dup3\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup3\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_36:\n        /* \"ERC20.sol\":4298:4302  bool */\n      0x00\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      tag_98\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      tag_99\n        /* \"ERC20.sol\":4323:4333  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"ERC20.sol\":4337:4344  spender */\n      dup5\n        /* \"ERC20.sol\":4346:4352  amount */\n      dup5\n        /* \"ERC20.sol\":4314:4322  _approve */\n      tag_101\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"ERC20.sol\":4370:4374  true */\n      0x01\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_97:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_38:\n        /* \"ERC20.sol\":3293:3305  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_41:\n        /* \"ERC20.sol\":4984:4988  bool */\n      0x00\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      tag_104\n        /* \"ERC20.sol\":5010:5016  sender */\n      dup5\n        /* \"ERC20.sol\":5018:5027  recipient */\n      dup5\n        /* \"ERC20.sol\":5029:5035  amount */\n      dup5\n        /* \"ERC20.sol\":5000:5009  _transfer */\n      tag_2\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_106\n        /* \"ERC20.sol\":5055:5061  sender */\n      dup5\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      tag_107\n        /* \"ERC20.sol\":5063:5073  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_108\n        /* \"ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5077:5088  _allowances */\n      0x01\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      tag_109\n        /* \"ERC20.sol\":5097:5107  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5110  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5077:5114  _allowances[sender][_msgSender()].sub */\n      tag_110\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_108:\n        /* \"ERC20.sol\":5046:5054  _approve */\n      tag_101\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"ERC20.sol\":5184:5188  true */\n      0x01\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":5664:5671  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5761:5789  magnifiedDividendCorrections */\n      0x07\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":1492:1498  2**128 */\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5814  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_112\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5798  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_113\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5749  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      tag_114\n        /* \"DividendPayingToken.sol\":5686:5734  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      tag_115\n        /* \"DividendPayingToken.sol\":5716:5733  balanceOf(_owner) */\n      tag_116\n        /* \"DividendPayingToken.sol\":5790:5796  _owner */\n      dup9\n        /* \"DividendPayingToken.sol\":5716:5725  balanceOf */\n      tag_56\n        /* \"DividendPayingToken.sol\":5716:5733  balanceOf(_owner) */\n      jump\t// in\n    tag_116:\n        /* \"DividendPayingToken.sol\":5686:5711  magnifiedDividendPerShare */\n      sload(0x06)\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5715  magnifiedDividendPerShare.mul */\n      tag_117\n        /* \"DividendPayingToken.sol\":5686:5734  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      jump\t// in\n    tag_115:\n        /* \"DividendPayingToken.sol\":5686:5747  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe */\n      tag_118\n        /* \"DividendPayingToken.sol\":5686:5749  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      jump\t// in\n    tag_114:\n        /* \"DividendPayingToken.sol\":5686:5760  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap1\n      tag_119\n        /* \"DividendPayingToken.sol\":5686:5798  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      jump\t// in\n    tag_113:\n        /* \"DividendPayingToken.sol\":5686:5812  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_120\n        /* \"DividendPayingToken.sol\":5686:5814  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      jump\t// in\n    tag_112:\n        /* \"DividendPayingToken.sol\":5686:5826  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      dup2\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      div\n        /* \"DividendPayingToken.sol\":5679:5826  return magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_111:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_46:\n        /* \"ERC20.sol\":3137:3139  18 */\n      0x12\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_49:\n        /* \"ERC20.sol\":5678:5682  bool */\n      0x00\n        /* \"ERC20.sol\":5694:5777  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_98\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      tag_125\n        /* \"ERC20.sol\":5703:5713  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"ERC20.sol\":5717:5724  spender */\n      dup5\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_108\n        /* \"ERC20.sol\":5765:5775  addedValue */\n      dup6\n        /* \"ERC20.sol\":5726:5737  _allowances */\n      0x01\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      tag_127\n        /* \"ERC20.sol\":5738:5748  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5726:5760  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5726:5764  _allowances[_msgSender()][spender].add */\n      tag_128\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":1099:1182  address public immutable CAKE = address(0xB6076C93701D6a07266c31066B298AeC6dd65c2d) */\n    tag_51:\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      dup2\n      jump\t// out\n        /* \"DividendPayingToken.sol\":3254:3352  function withdrawDividend() public virtual override {... */\n    tag_53:\n        /* \"DividendPayingToken.sol\":3312:3347  _withdrawDividendOfUser(msg.sender) */\n      tag_130\n        /* \"DividendPayingToken.sol\":3336:3346  msg.sender */\n      caller\n        /* \"DividendPayingToken.sol\":3312:3335  _withdrawDividendOfUser */\n      tag_131\n        /* \"DividendPayingToken.sol\":3312:3347  _withdrawDividendOfUser(msg.sender) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"DividendPayingToken.sol\":3254:3352  function withdrawDividend() public virtual override {... */\n      jump\t// out\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      and\n        /* \"ERC20.sol\":3444:3451  uint256 */\n      0x00\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_134\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_135:\n        /* \"Ownable.sol\":1286:1292  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"Ownable.sol\":1302:1303  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1286:1292  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1302:1303  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1315:1321  _owner */\n      0x05\n        /* \"Ownable.sol\":1315:1334  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2568:2608  uint256 public totalDividendsDistributed */\n    tag_60:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_62:\n        /* \"Ownable.sol\":637:643  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"DividendPayingToken.sol\":4325:4447  function dividendOf(address _owner) public view override returns(uint256) {... */\n    tag_65:\n        /* \"DividendPayingToken.sol\":4390:4397  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4412:4442  withdrawableDividendOf(_owner) */\n      tag_97\n        /* \"DividendPayingToken.sol\":4435:4441  _owner */\n      dup3\n        /* \"DividendPayingToken.sol\":4412:4434  withdrawableDividendOf */\n      tag_77\n        /* \"DividendPayingToken.sol\":4412:4442  withdrawableDividendOf(_owner) */\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      0x04\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2385:2398  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      dup3\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_74:\n        /* \"ERC20.sol\":6385:6389  bool */\n      0x00\n        /* \"ERC20.sol\":6401:6530  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_98\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      tag_146\n        /* \"ERC20.sol\":6410:6420  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"ERC20.sol\":6424:6431  spender */\n      dup5\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_108\n        /* \"ERC20.sol\":6472:6487  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6433:6444  _allowances */\n      0x01\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      tag_148\n        /* \"ERC20.sol\":6445:6455  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6433:6467  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6433:6471  _allowances[_msgSender()][spender].sub */\n      tag_110\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4653:4819  function withdrawableDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":4730:4737  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":4787:4805  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":4752:4814  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      tag_97\n      swap1\n        /* \"DividendPayingToken.sol\":4752:4782  accumulativeDividendOf(_owner) */\n      tag_151\n        /* \"DividendPayingToken.sol\":4806:4812  _owner */\n      dup5\n        /* \"DividendPayingToken.sol\":4752:4774  accumulativeDividendOf */\n      tag_44\n        /* \"DividendPayingToken.sol\":4752:4782  accumulativeDividendOf(_owner) */\n      jump\t// in\n    tag_151:\n        /* \"DividendPayingToken.sol\":4752:4786  accumulativeDividendOf(_owner).sub */\n      swap1\n      tag_152\n        /* \"DividendPayingToken.sol\":4752:4814  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_80:\n        /* \"ERC20.sol\":3784:3788  bool */\n      0x00\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      tag_155\n        /* \"ERC20.sol\":3810:3820  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"ERC20.sol\":3824:3833  recipient */\n      dup5\n        /* \"ERC20.sol\":3835:3841  amount */\n      dup5\n        /* \"ERC20.sol\":3800:3809  _transfer */\n      tag_2\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      and\n        /* \"DividendPayingToken.sol\":5101:5108  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5123:5141  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n    tag_86:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_158\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_159\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_159:\n        /* \"DividendPayingToken.sol\":2804:2805  0 */\n      0x00\n        /* \"DividendPayingToken.sol\":2788:2801  totalSupply() */\n      tag_161\n        /* \"DividendPayingToken.sol\":2788:2799  totalSupply */\n      tag_38\n        /* \"DividendPayingToken.sol\":2788:2801  totalSupply() */\n      jump\t// in\n    tag_161:\n        /* \"DividendPayingToken.sol\":2788:2805  totalSupply() > 0 */\n      gt\n        /* \"DividendPayingToken.sol\":2780:2806  require(totalSupply() > 0) */\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n        /* \"DividendPayingToken.sol\":2817:2827  amount > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":2813:3085  if (amount > 0) {... */\n      tag_130\n      jumpi\n        /* \"DividendPayingToken.sol\":2865:2951  magnifiedDividendPerShare.add(... */\n      tag_164\n        /* \"DividendPayingToken.sol\":2930:2943  totalSupply() */\n      tag_165\n        /* \"DividendPayingToken.sol\":2930:2941  totalSupply */\n      tag_38\n        /* \"DividendPayingToken.sol\":2930:2943  totalSupply() */\n      jump\t// in\n    tag_165:\n        /* \"DividendPayingToken.sol\":2904:2927  (amount).mul(magnitude) */\n      tag_166\n        /* \"DividendPayingToken.sol\":2905:2911  amount */\n      dup4\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":2904:2916  (amount).mul */\n      tag_117\n        /* \"DividendPayingToken.sol\":2904:2927  (amount).mul(magnitude) */\n      jump\t// in\n    tag_166:\n        /* \"DividendPayingToken.sol\":2904:2943  (amount).mul(magnitude) / totalSupply() */\n      dup2\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n        /* \"DividendPayingToken.sol\":2865:2890  magnifiedDividendPerShare */\n      sload(0x06)\n      swap2\n        /* \"DividendPayingToken.sol\":2904:2943  (amount).mul(magnitude) / totalSupply() */\n      swap1\n      div\n        /* \"DividendPayingToken.sol\":2865:2894  magnifiedDividendPerShare.add */\n      tag_128\n        /* \"DividendPayingToken.sol\":2865:2951  magnifiedDividendPerShare.add(... */\n      jump\t// in\n    tag_164:\n        /* \"DividendPayingToken.sol\":2837:2862  magnifiedDividendPerShare */\n      0x06\n        /* \"DividendPayingToken.sol\":2837:2951  magnifiedDividendPerShare = magnifiedDividendPerShare.add(... */\n      sstore\n        /* \"DividendPayingToken.sol\":2964:3004  DividendsDistributed(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":2985:2995  msg.sender */\n      caller\n      swap2\n        /* \"DividendPayingToken.sol\":2964:3004  DividendsDistributed(msg.sender, amount) */\n      0xa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":3041:3066  totalDividendsDistributed */\n      sload(0x09)\n        /* \"DividendPayingToken.sol\":3041:3078  totalDividendsDistributed.add(amount) */\n      tag_168\n      swap1\n        /* \"DividendPayingToken.sol\":3071:3077  amount */\n      dup3\n        /* \"DividendPayingToken.sol\":3041:3070  totalDividendsDistributed.add */\n      tag_128\n        /* \"DividendPayingToken.sol\":3041:3078  totalDividendsDistributed.add(amount) */\n      jump\t// in\n    tag_168:\n        /* \"DividendPayingToken.sol\":3013:3038  totalDividendsDistributed */\n      0x09\n        /* \"DividendPayingToken.sol\":3013:3078  totalDividendsDistributed = totalDividendsDistributed.add(amount) */\n      sstore\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4017:4024  uint256 */\n      0x00\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4043:4054  _allowances */\n      0x01\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4043:4070  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_92:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_171\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1578:1600  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":1570:1643  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Ownable.sol\":1679:1685  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"Ownable.sol\":1679:1685  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1679:1685  _owner */\n      0x00\n      swap1\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"Ownable.sol\":1706:1712  _owner */\n      0x05\n        /* \"Ownable.sol\":1706:1723  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9522:9541  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9514:9582  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9600:9621  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9592:9660  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9671:9682  _allowances */\n      0x01\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9671:9698  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9671:9707  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_110:\n        /* \"SafeMath.sol\":1268:1275  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1303:1315  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1295:1301  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1287:1316  require(b <= a, errorMessage) */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_188:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_190\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_188)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_191:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1338:1343  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1616:2075  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_117:\n        /* \"SafeMath.sol\":1674:1681  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1915:1921  a == 0 */\n      dup3\n        /* \"SafeMath.sol\":1911:1956  if (a == 0) {... */\n      tag_193\n      jumpi\n      pop\n        /* \"SafeMath.sol\":1944:1945  0 */\n      0x00\n        /* \"SafeMath.sol\":1937:1945  return 0 */\n      jump(tag_97)\n        /* \"SafeMath.sol\":1911:1956  if (a == 0) {... */\n    tag_193:\n        /* \"SafeMath.sol\":1978:1983  a * b */\n      dup3\n      dup3\n      mul\n        /* \"SafeMath.sol\":1982:1983  b */\n      dup3\n        /* \"SafeMath.sol\":1978:1979  a */\n      dup5\n        /* \"SafeMath.sol\":1978:1983  a * b */\n      dup3\n        /* \"SafeMath.sol\":1978:1979  a */\n      dup2\n        /* \"SafeMath.sol\":2001:2006  c / a */\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"SafeMath.sol\":2001:2011  c / a == b */\n      eq\n        /* \"SafeMath.sol\":1993:2049  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"SafeMath.sol\":2067:2068  c */\n      swap4\n        /* \"SafeMath.sol\":1616:2075  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMathUint.sol\":178:308  function toInt256Safe(uint256 a) internal pure returns (int256) {... */\n    tag_118:\n        /* \"SafeMathUint.sol\":234:240  int256 */\n      0x00\n        /* \"SafeMathUint.sol\":266:267  a */\n      dup2\n        /* \"SafeMathUint.sol\":282:288  b >= 0 */\n      dup2\n      dup2\n      slt\n      iszero\n        /* \"SafeMathUint.sol\":274:289  require(b >= 0) */\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2478:2650  function add(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_119:\n        /* \"SafeMathInt.sol\":2534:2540  int256 */\n      0x00\n        /* \"SafeMathInt.sol\":2563:2568  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMathInt.sol\":2587:2593  b >= 0 */\n      dup2\n      dup4\n      slt\n      dup1\n      iszero\n      swap1\n        /* \"SafeMathInt.sol\":2587:2603  b >= 0 && c >= a */\n      tag_199\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2602:2603  a */\n      dup4\n        /* \"SafeMathInt.sol\":2597:2598  c */\n      dup2\n        /* \"SafeMathInt.sol\":2597:2603  c >= a */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":2587:2603  b >= 0 && c >= a */\n    tag_199:\n        /* \"SafeMathInt.sol\":2586:2624  (b >= 0 && c >= a) || (b < 0 && c < a) */\n      dup1\n      tag_201\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2613:2614  0 */\n      0x00\n        /* \"SafeMathInt.sol\":2609:2610  b */\n      dup4\n        /* \"SafeMathInt.sol\":2609:2614  b < 0 */\n      slt\n        /* \"SafeMathInt.sol\":2609:2623  b < 0 && c < a */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2622:2623  a */\n      dup4\n        /* \"SafeMathInt.sol\":2618:2619  c */\n      dup2\n        /* \"SafeMathInt.sol\":2618:2623  c < a */\n      slt\n        /* \"SafeMathInt.sol\":2609:2623  b < 0 && c < a */\n    tag_201:\n        /* \"SafeMathInt.sol\":2578:2625  require((b >= 0 && c >= a) || (b < 0 && c < a)) */\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2868:2992  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"SafeMathInt.sol\":2924:2931  uint256 */\n      0x00\n        /* \"SafeMathInt.sol\":2956:2957  0 */\n      dup1\n        /* \"SafeMathInt.sol\":2951:2952  a */\n      dup3\n        /* \"SafeMathInt.sol\":2951:2957  a >= 0 */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":2943:2958  require(a >= 0) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n        /* \"SafeMathInt.sol\":2983:2984  a */\n      swap1\n        /* \"SafeMathInt.sol\":2868:2992  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"SafeMath.sol\":368:375  uint256 */\n      0x00\n        /* \"SafeMath.sol\":399:404  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":422:428  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":414:460  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_195\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"DividendPayingToken.sol\":3516:4118  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {... */\n    tag_131:\n        /* \"DividendPayingToken.sol\":3589:3596  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":3604:3633  uint256 _withdrawableDividend */\n      dup1\n        /* \"DividendPayingToken.sol\":3636:3664  withdrawableDividendOf(user) */\n      tag_208\n        /* \"DividendPayingToken.sol\":3659:3663  user */\n      dup4\n        /* \"DividendPayingToken.sol\":3636:3658  withdrawableDividendOf */\n      tag_77\n        /* \"DividendPayingToken.sol\":3636:3664  withdrawableDividendOf(user) */\n      jump\t// in\n    tag_208:\n        /* \"DividendPayingToken.sol\":3604:3664  uint256 _withdrawableDividend = withdrawableDividendOf(user) */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":3674:3699  _withdrawableDividend > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":3670:4099  if (_withdrawableDividend > 0) {... */\n      tag_209\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3736:3760  withdrawnDividends[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3736:3754  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3736:3760  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3736:3787  withdrawnDividends[user].add(_withdrawableDividend) */\n      tag_210\n      swap1\n        /* \"DividendPayingToken.sol\":3765:3786  _withdrawableDividend */\n      dup3\n        /* \"DividendPayingToken.sol\":3736:3764  withdrawnDividends[user].add */\n      tag_128\n        /* \"DividendPayingToken.sol\":3736:3787  withdrawnDividends[user].add(_withdrawableDividend) */\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3709:3727  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DividendPayingToken.sol\":3709:3787  withdrawnDividends[user] = withdrawnDividends[user].add(_withdrawableDividend) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"DividendPayingToken.sol\":3800:3846  DividendWithdrawn(user, _withdrawableDividend) */\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      swap2\n      swap3\n        /* \"DividendPayingToken.sol\":3800:3846  DividendWithdrawn(user, _withdrawableDividend) */\n      0xee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":3854:3866  bool success */\n      0x00\n        /* \"DividendPayingToken.sol\":3876:3880  CAKE */\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3869:3890  IERC20(CAKE).transfer */\n      and\n      0xa9059cbb\n        /* \"DividendPayingToken.sol\":3891:3895  user */\n      dup6\n        /* \"DividendPayingToken.sol\":3897:3918  _withdrawableDividend */\n      dup5\n        /* \"DividendPayingToken.sol\":3869:3919  IERC20(CAKE).transfer(user, _withdrawableDividend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      mload\n      swap1\n      pop\n      dup1\n        /* \"DividendPayingToken.sol\":3928:4056  if(!success) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3978:4002  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3978:3996  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3978:4002  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3978:4029  withdrawnDividends[user].sub(_withdrawableDividend) */\n      tag_216\n      swap1\n        /* \"DividendPayingToken.sol\":4007:4028  _withdrawableDividend */\n      dup4\n        /* \"DividendPayingToken.sol\":3978:4006  withdrawnDividends[user].sub */\n      tag_152\n        /* \"DividendPayingToken.sol\":3978:4029  withdrawnDividends[user].sub(_withdrawableDividend) */\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3951:3969  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DividendPayingToken.sol\":3951:4029  withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      swap3\n      pop\n        /* \"DividendPayingToken.sol\":4039:4047  return 0 */\n      tag_111\n      swap2\n      pop\n      pop\n      jump\n        /* \"DividendPayingToken.sol\":3928:4056  if(!success) {... */\n    tag_215:\n      pop\n        /* \"DividendPayingToken.sol\":4071:4092  _withdrawableDividend */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":4064:4092  return _withdrawableDividend */\n      jump(tag_111)\n        /* \"DividendPayingToken.sol\":3670:4099  if (_withdrawableDividend > 0) {... */\n    tag_209:\n      pop\n        /* \"DividendPayingToken.sol\":4112:4113  0 */\n      0x00\n      swap3\n        /* \"DividendPayingToken.sol\":3516:4118  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":757:891  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_152:\n        /* \"SafeMath.sol\":815:822  uint256 */\n      0x00\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_195\n        /* \"SafeMath.sol\":845:846  a */\n      dup4\n        /* \"SafeMath.sol\":848:849  b */\n      dup4\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"SafeMath.sol\":841:844  sub */\n      tag_110\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220cdb94a3db1dc48f602cbaaad09215396a86b5810d3ca0dcefbfc5fc9ed4fa45464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a06040527fb6076c93701d6a07266c31066b298aec6dd65c2d0000000000000000000000006080523480156200003557600080fd5b506040516200137238038062001372833981810160405260408110156200005b57600080fd5b81019080805160405193929190846401000000008211156200007c57600080fd5b9083019060208201858111156200009257600080fd5b8251640100000000811182820188101715620000ad57600080fd5b82525081516020918201929091019080838360005b83811015620000dc578181015183820152602001620000c2565b50505050905090810190601f1680156200010a5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200012e57600080fd5b9083019060208201858111156200014457600080fd5b82516401000000008111828201881017156200015f57600080fd5b82525081516020918201929091019080838360005b838110156200018e57818101518382015260200162000174565b50505050905090810190601f168015620001bc5780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001dc90600390602085019062000261565b508051620001f290600490602084019062000261565b5050506000620002076200025d60201b60201c565b600580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505050620002fd565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a457805160ff1916838001178555620002d4565b82800160010185558215620002d4579182015b82811115620002d4578251825591602001919060010190620002b7565b50620002e2929150620002e6565b5090565b5b80821115620002e25760008155600101620002e7565b60805160601c61105262000320600039806106685280610dfe52506110526000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806385a6b3ae116100b8578063a8b9d2401161007c578063a8b9d2401461038a578063a9059cbb146103b0578063aafd847a146103dc578063ba72a95514610402578063dd62ed3e1461041f578063f2fde38b1461044d57610142565b806385a6b3ae146103205780638da5cb5b1461032857806391b89fba1461033057806395d89b4114610356578063a457c2d71461035e57610142565b8063313ce5671161010a578063313ce5671461027a57806339509351146102985780634ca6ef28146102c45780636a474002146102e857806370a08231146102f2578063715018a61461031857610142565b806306fdde0314610147578063095ea7b3146101c457806318160ddd1461020457806323b872dd1461021e57806327ce014714610254575b600080fd5b61014f610473565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b038135169060200135610509565b604080519115158252519081900360200190f35b61020c610527565b60408051918252519081900360200190f35b6101f06004803603606081101561023457600080fd5b506001600160a01b0381358116916020810135909116906040013561052d565b61020c6004803603602081101561026a57600080fd5b50356001600160a01b03166105b4565b610282610613565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156102ae57600080fd5b506001600160a01b038135169060200135610618565b6102cc610666565b604080516001600160a01b039092168252519081900360200190f35b6102f061068a565b005b61020c6004803603602081101561030857600080fd5b50356001600160a01b0316610696565b6102f06106b1565b61020c610765565b6102cc61076b565b61020c6004803603602081101561034657600080fd5b50356001600160a01b031661077a565b61014f610785565b6101f06004803603604081101561037457600080fd5b506001600160a01b0381351690602001356107e6565b61020c600480360360208110156103a057600080fd5b50356001600160a01b031661084e565b6101f0600480360360408110156103c657600080fd5b506001600160a01b03813516906020013561087a565b61020c600480360360208110156103f257600080fd5b50356001600160a01b031661088e565b6102f06004803603602081101561041857600080fd5b50356108a9565b61020c6004803603604081101561043557600080fd5b506001600160a01b03813581169160200135166109a4565b6102f06004803603602081101561046357600080fd5b50356001600160a01b03166109cf565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b600061051d610516610ada565b8484610ade565b5060015b92915050565b60025490565b600061053a848484610142565b6105aa84610546610ada565b6105a585604051806060016040528060288152602001610fac602891396001600160a01b038a16600090815260016020526040812090610584610ada565b6001600160a01b031681526020810191909152604001600020549190610bca565b610ade565b5060019392505050565b6001600160a01b038116600090815260076020526040812054600160801b90610603906105fe906105f86105f36105ea88610696565b60065490610c61565b610cc1565b90610cd1565b610d04565b8161060a57fe5b0490505b919050565b601290565b600061051d610625610ada565b846105a58560016000610636610ada565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610d17565b7f000000000000000000000000000000000000000000000000000000000000000081565b61069333610d71565b50565b6001600160a01b031660009081526020819052604090205490565b6106b9610ada565b6005546001600160a01b0390811691161461071b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b60095481565b6005546001600160a01b031690565b60006105218261084e565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ff5780601f106104d4576101008083540402835291602001916104ff565b600061051d6107f3610ada565b846105a585604051806060016040528060258152602001610ff8602591396001600061081d610ada565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610bca565b6001600160a01b03811660009081526008602052604081205461052190610874846105b4565b90610f00565b600061051d610887610ada565b8484610142565b6001600160a01b031660009081526008602052604090205490565b6108b1610ada565b6005546001600160a01b03908116911614610913576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600061091d610527565b1161092757600080fd5b801561069357610958610938610527565b61094683600160801b610c61565b8161094d57fe5b600654919004610d17565b60065560408051828152905133917fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511919081900360200190a260095461099e9082610d17565b60095550565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6109d7610ada565b6005546001600160a01b03908116911614610a39576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610a7e5760405162461bcd60e51b8152600401808060200182810382526026815260200180610f436026913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b038316610b235760405162461bcd60e51b8152600401808060200182810382526024815260200180610fd46024913960400191505060405180910390fd5b6001600160a01b038216610b685760405162461bcd60e51b8152600401808060200182810382526022815260200180610f696022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008184841115610c595760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c1e578181015183820152602001610c06565b50505050905090810190601f168015610c4b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610c7057506000610521565b82820282848281610c7d57fe5b0414610cba5760405162461bcd60e51b8152600401808060200182810382526021815260200180610f8b6021913960400191505060405180910390fd5b9392505050565b6000818181121561052157600080fd5b6000828201818312801590610ce65750838112155b80610cfb5750600083128015610cfb57508381125b610cba57600080fd5b600080821215610d1357600080fd5b5090565b600082820183811015610cba576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080610d7d8361084e565b90508015610ef7576001600160a01b038316600090815260086020526040902054610da89082610d17565b6001600160a01b038416600081815260086020908152604091829020939093558051848152905191927fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d92918290030190a260007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050506040513d6020811015610e9d57600080fd5b5051905080610eef576001600160a01b038416600090815260086020526040902054610ec99083610f00565b6001600160a01b038516600090815260086020526040812091909155925061060e915050565b50905061060e565b50600092915050565b6000610cba83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bca56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220cdb94a3db1dc48f602cbaaad09215396a86b5810d3ca0dcefbfc5fc9ed4fa45464736f6c634300060c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH32 0xB6076C93701D6A07266C31066B298AEC6DD65C2D000000000000000000000000 PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1372 CODESIZE SUB DUP1 PUSH3 0x1372 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xDC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xC2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x10A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x18E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH3 0x1DC SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1F2 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH3 0x207 PUSH3 0x25D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP POP POP PUSH3 0x2FD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2A4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B7 JUMP JUMPDEST POP PUSH3 0x2E2 SWAP3 SWAP2 POP PUSH3 0x2E6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2E7 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x1052 PUSH3 0x320 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x668 MSTORE DUP1 PUSH2 0xDFE MSTORE POP PUSH2 0x1052 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8B9D240 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x35E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x618 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x696 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x76B JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x77A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x785 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88E JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x516 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x5AA DUP5 PUSH2 0x546 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFAC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x584 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x603 SWAP1 PUSH2 0x5FE SWAP1 PUSH2 0x5F8 PUSH2 0x5F3 PUSH2 0x5EA DUP9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST DUP2 PUSH2 0x60A JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x625 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x636 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x693 CALLER PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 DUP3 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x7F3 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x81D PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x874 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x887 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x913 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH2 0x527 JUMP JUMPDEST GT PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x693 JUMPI PUSH2 0x958 PUSH2 0x938 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x946 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0x99E SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF43 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF69 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC06 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC4B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC70 JUMPI POP PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC7D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xCE6 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0xCFB JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCFB JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7D DUP4 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDA8 SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x60E SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x60E JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBCA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x536166654D6174683A206D756C7469706C696361 PUSH21 0x696F6E206F766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220CDB9 0x4A RETURNDATASIZE 0xB1 0xDC 0x48 0xF6 MUL 0xCB 0xAA 0xAD MULMOD 0x21 MSTORE8 SWAP7 0xA8 PUSH12 0x5810D3CA0DCEFBFC5FC9ED4F LOG4 SLOAD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "658:7293:1:-:0;;;1099:83;;;2613:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2613:91:1;;-1:-1:-1;;2006:13:4;;2682:5:1;;-1:-1:-1;2689:7:1;;2006:13:4;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2029:17:4;;;;:7;;:17;;;;;:::i;:::-;;1933:120;;372:17:12;392:12;:10;;;:12;;:::i;:::-;414:6;:18;;-1:-1:-1;;;;;;414:18:12;-1:-1:-1;;;;;414:18:12;;;;;;;;447:43;;414:18;;-1:-1:-1;414:18:12;-1:-1:-1;;447:43:12;;-1:-1:-1;;447:43:12;340:157;2613:91:1;;658:7293;;586:96:0;665:10;586:96;:::o;658:7293:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;658:7293:1;;;-1:-1:-1;658:7293:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"55": [
									{
										"length": 32,
										"start": 1640
									},
									{
										"length": 32,
										"start": 3582
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8B9D240 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x35E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x618 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x696 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x76B JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x77A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x785 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88E JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x516 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x5AA DUP5 PUSH2 0x546 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFAC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x584 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x603 SWAP1 PUSH2 0x5FE SWAP1 PUSH2 0x5F8 PUSH2 0x5F3 PUSH2 0x5EA DUP9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST DUP2 PUSH2 0x60A JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x625 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x636 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x693 CALLER PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 DUP3 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x7F3 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x81D PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x874 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x887 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x913 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH2 0x527 JUMP JUMPDEST GT PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x693 JUMPI PUSH2 0x958 PUSH2 0x938 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x946 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0x99E SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF43 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF69 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC06 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC4B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC70 JUMPI POP PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC7D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xCE6 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0xCFB JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCFB JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7D DUP4 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDA8 SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x60E SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x60E JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBCA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x536166654D6174683A206D756C7469706C696361 PUSH21 0x696F6E206F766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220CDB9 0x4A RETURNDATASIZE 0xB1 0xDC 0x48 0xF6 MUL 0xCB 0xAA 0xAD MULMOD 0x21 MSTORE8 SWAP7 0xA8 PUSH12 0x5810D3CA0DCEFBFC5FC9ED4F LOG4 SLOAD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "658:7293:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4215:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3206:106;;;:::i;:::-;;;;;;;;;;;;;;;;4848:347;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4848:347:4;;;;;;;;;;;;;;;;;:::i;5587:244:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5587:244:1;-1:-1:-1;;;;;5587:244:1;;:::i;3055:91:4:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5590:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5590:215:4;;;;;;;;:::i;1099:83:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1099:83:1;;;;;;;;;;;;;;3254:98;;;:::i;:::-;;3370:125:4;;;;;;;;;;;;;;;;-1:-1:-1;3370:125:4;-1:-1:-1;;;;;3370:125:4;;:::i;1196:145:12:-;;;:::i;2568:40:1:-;;;:::i;573:77:12:-;;;:::i;4325:122:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4325:122:1;-1:-1:-1;;;;;4325:122:1;;:::i;2329:102:4:-;;;:::i;6292:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6292:266:4;;;;;;;;:::i;4653:166:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4653:166:1;-1:-1:-1;;;;;4653:166:1;;:::i;3698:172:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3698:172:4;;;;;;;;:::i;5027:127:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5027:127:1;-1:-1:-1;;;;;5027:127:1;;:::i;2709:380::-;;;;;;;;;;;;;;;;-1:-1:-1;2709:380:1;;:::i;3928:149:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3928:149:4;;;;;;;;;;:::i;1490:240:12:-;;;;;;;;;;;;;;;;-1:-1:-1;1490:240:12;-1:-1:-1;;;;;1490:240:12;;:::i;2118:98:4:-;2204:5;2197:12;;;;;;;;-1:-1:-1;;2197:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:13;;2197:12;;2204:5;;2197:12;;2204:5;2197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;:::o;4215:166::-;4298:4;4314:39;4323:12;:10;:12::i;:::-;4337:7;4346:6;4314:8;:39::i;:::-;-1:-1:-1;4370:4:4;4215:166;;;;;:::o;3206:106::-;3293:12;;3206:106;:::o;4848:347::-;4984:4;5000:36;5010:6;5018:9;5029:6;5000:9;:36::i;:::-;5046:121;5055:6;5063:12;:10;:12::i;:::-;5077:89;5115:6;5077:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5077:19:4;;;;;;:11;:19;;;;;;5097:12;:10;:12::i;:::-;-1:-1:-1;;;;;5077:33:4;;;;;;;;;;;;-1:-1:-1;5077:33:4;;;:89;:37;:89::i;:::-;5046:8;:121::i;:::-;-1:-1:-1;5184:4:4;4848:347;;;;;:::o;5587:244:1:-;-1:-1:-1;;;;;5761:36:1;;5664:7;5761:36;;;:28;:36;;;;;;-1:-1:-1;;;1492:6:1;5686:128;;:112;;:63;:48;5716:17;5790:6;5716:9;:17::i;:::-;5686:25;;;:29;:48::i;:::-;:61;:63::i;:::-;:74;;:112::i;:::-;:126;:128::i;:::-;:140;;;;;;5679:147;;5587:244;;;;:::o;3055:91:4:-;3137:2;3055:91;:::o;5590:215::-;5678:4;5694:83;5703:12;:10;:12::i;:::-;5717:7;5726:50;5765:10;5726:11;:25;5738:12;:10;:12::i;:::-;-1:-1:-1;;;;;5726:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5726:25:4;;;:34;;;;;;;;;;;:38;:50::i;1099:83:1:-;;;:::o;3254:98::-;3312:35;3336:10;3312:23;:35::i;:::-;;3254:98::o;3370:125:4:-;-1:-1:-1;;;;;3470:18:4;3444:7;3470:18;;;;;;;;;;;;3370:125::o;1196:145:12:-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1286:6:::1;::::0;1265:40:::1;::::0;1302:1:::1;::::0;-1:-1:-1;;;;;1286:6:12::1;::::0;1265:40:::1;::::0;1302:1;;1265:40:::1;1315:6;:19:::0;;-1:-1:-1;;;;;;1315:19:12::1;::::0;;1196:145::o;2568:40:1:-;;;;:::o;573:77:12:-;637:6;;-1:-1:-1;;;;;637:6:12;573:77;:::o;4325:122:1:-;4390:7;4412:30;4435:6;4412:22;:30::i;2329:102:4:-;2417:7;2410:14;;;;;;;;-1:-1:-1;;2410:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:13;;2410:14;;2417:7;;2410:14;;2417:7;2410:14;;;;;;;;;;;;;;;;;;;;;;;;6292:266;6385:4;6401:129;6410:12;:10;:12::i;:::-;6424:7;6433:96;6472:15;6433:96;;;;;;;;;;;;;;;;;:11;:25;6445:12;:10;:12::i;:::-;-1:-1:-1;;;;;6433:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6433:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;4653:166:1:-;-1:-1:-1;;;;;4787:26:1;;4730:7;4787:26;;;:18;:26;;;;;;4752:62;;:30;4806:6;4752:22;:30::i;:::-;:34;;:62::i;3698:172:4:-;3784:4;3800:42;3810:12;:10;:12::i;:::-;3824:9;3835:6;3800:9;:42::i;5027:127:1:-;-1:-1:-1;;;;;5123:26:1;5101:7;5123:26;;;:18;:26;;;;;;;5027:127::o;2709:380::-;787:12:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2804:1:1::1;2788:13;:11;:13::i;:::-;:17;2780:26;;;::::0;::::1;;2817:10:::0;;2813:272:::1;;2865:86;2930:13;:11;:13::i;:::-;2904:23;2905:6:::0;-1:-1:-1;;;2904:12:1::1;:23::i;:::-;:39;;;;;2865:25;::::0;;2904:39;::::1;2865:29;:86::i;:::-;2837:25;:114:::0;2964:40:::1;::::0;;;;;;;2985:10:::1;::::0;2964:40:::1;::::0;;;;;::::1;::::0;;::::1;3041:25;::::0;:37:::1;::::0;3071:6;3041:29:::1;:37::i;:::-;3013:25;:65:::0;2709:380;:::o;3928:149:4:-;-1:-1:-1;;;;;4043:18:4;;;4017:7;4043:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3928:149::o;1490:240:12:-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1578:22:12;::::1;1570:73;;;;-1:-1:-1::0;;;1570:73:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:6;::::0;1658:38:::1;::::0;-1:-1:-1;;;;;1658:38:12;;::::1;::::0;1679:6:::1;::::0;1658:38:::1;::::0;1679:6:::1;::::0;1658:38:::1;1706:6;:17:::0;;-1:-1:-1;;;;;;1706:17:12::1;-1:-1:-1::0;;;;;1706:17:12;;;::::1;::::0;;;::::1;::::0;;1490:240::o;586:96:0:-;665:10;586:96;:::o;9391:370:4:-;-1:-1:-1;;;;;9522:19:4;;9514:68;;;;-1:-1:-1;;;9514:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9600:21:4;;9592:68;;;;-1:-1:-1;;;9592:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9671:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9722:32;;;;;;;;;;;;;;;;;9391:370;;;:::o;1182:187:13:-;1268:7;1303:12;1295:6;;;;1287:29;;;;-1:-1:-1;;;1287:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1338:5:13;;;1182:187::o;1616:459::-;1674:7;1915:6;1911:45;;-1:-1:-1;1944:1:13;1937:8;;1911:45;1978:5;;;1982:1;1978;:5;:1;2001:5;;;;;:10;1993:56;;;;-1:-1:-1;;;1993:56:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:1;1616:459;-1:-1:-1;;;1616:459:13:o;178:130:15:-;234:6;266:1;282:6;;;;274:15;;;;;2478:172:14;2534:6;2563:5;;;2587:6;;;;;;:16;;;2602:1;2597;:6;;2587:16;2586:38;;;;2613:1;2609;:5;:14;;;;;2622:1;2618;:5;2609:14;2578:47;;;;;2868:124;2924:7;2956:1;2951;:6;;2943:15;;;;;;-1:-1:-1;2983:1:14;2868:124::o;310:176:13:-;368:7;399:5;;;422:6;;;;414:46;;;;;-1:-1:-1;;;414:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:602:1;3589:7;3604:29;3636:28;3659:4;3636:22;:28::i;:::-;3604:60;-1:-1:-1;3674:25:1;;3670:429;;-1:-1:-1;;;;;3736:24:1;;;;;;:18;:24;;;;;;:51;;3765:21;3736:28;:51::i;:::-;-1:-1:-1;;;;;3709:24:1;;;;;;:18;:24;;;;;;;;;:78;;;;3800:46;;;;;;;3709:24;;3800:46;;;;;;;;;3854:12;3876:4;-1:-1:-1;;;;;3869:21:1;;3891:4;3897:21;3869:50;;;;;;;;;;;;;-1:-1:-1;;;;;3869:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3869:50:1;;-1:-1:-1;3869:50:1;3928:128;;-1:-1:-1;;;;;3978:24:1;;;;;;:18;:24;;;;;;:51;;4007:21;3978:28;:51::i;:::-;-1:-1:-1;;;;;3951:24:1;;;;;;:18;:24;;;;;:78;;;;:24;-1:-1:-1;4039:8:1;;-1:-1:-1;;4039:8:1;3928:128;-1:-1:-1;4071:21:1;-1:-1:-1;4064:28:1;;3670:429;-1:-1:-1;4112:1:1;;3516:602;-1:-1:-1;;3516:602:1:o;757:134:13:-;815:7;841:43;845:1;848;841:43;;;;;;;;;;;;;;;;;:3;:43::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "835600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CAKE()": "infinite",
								"accumulativeDividendOf(address)": "infinite",
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1256",
								"decimals()": "230",
								"decreaseAllowance(address,uint256)": "infinite",
								"distributeCAKEDividends(uint256)": "infinite",
								"dividendOf(address)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24334",
								"symbol()": "infinite",
								"totalDividendsDistributed()": "1021",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "313",
								"transferFrom(address,address,uint256)": "360",
								"transferOwnership(address)": "infinite",
								"withdrawDividend()": "infinite",
								"withdrawableDividendOf(address)": "infinite",
								"withdrawnDividendOf(address)": "1208"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setBalance(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_withdrawDividendOfUser(address payable)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1182,
									"name": "PUSH",
									"source": 1,
									"value": "B6076C93701D6A07266C31066B298AEC6DD65C2D000000000000000000000000"
								},
								{
									"begin": 1099,
									"end": 1182,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1099,
									"end": 1182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2682,
									"end": 2687,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2682,
									"end": 2687,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2689,
									"end": 2696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2689,
									"end": 2696,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 372,
									"end": 389,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 414,
									"end": 420,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 12,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 447,
									"end": 490,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 586,
									"end": 682,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 7951,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdb94a3db1dc48f602cbaaad09215396a86b5810d3ca0dcefbfc5fc9ed4fa45464736f6c634300060c0033",
									".code": [
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "85A6B3AE"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A8B9D240"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A8B9D240"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "AAFD847A"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "BA72A955"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "85A6B3AE"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "91B89FBA"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "4CA6EF28"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "6A474002"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "27CE0147"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 7951,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4323,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4344,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5063,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5097,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5789,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5790,
											"end": 5796,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5703,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5737,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5738,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3336,
											"end": 3346,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3352,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 637,
											"end": 643,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 637,
											"end": 643,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 637,
											"end": 643,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4435,
											"end": 4441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4412,
											"end": 4442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6410,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6431,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6472,
											"end": 6487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6445,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2788,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2904,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2837,
											"end": 2951,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "A493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3013,
											"end": 3078,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4054,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH data",
											"source": 12,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9682,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH data",
											"source": 13,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "CODECOPY",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 178,
											"end": 308,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 178,
											"end": 308,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 234,
											"end": 240,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 267,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 274,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 274,
											"end": 289,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 274,
											"end": 289,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2478,
											"end": 2650,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 2478,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2622,
											"end": 2623,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2618,
											"end": 2623,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "EE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3880,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 891,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 757,
											"end": 891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 815,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 845,
											"end": 846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"CAKE()": "4ca6ef28",
							"accumulativeDividendOf(address)": "27ce0147",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"distributeCAKEDividends(uint256)": "ba72a955",
							"dividendOf(address)": "91b89fba",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalDividendsDistributed()": "85a6b3ae",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawDividend()": "6a474002",
							"withdrawableDividendOf(address)": "a8b9d240",
							"withdrawnDividendOf(address)": "aafd847a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAKE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeCAKEDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividendsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"A mintable ERC20 token that allows anyone to pay and distribute ether  to token holders as dividends and allows token holders to withdraw their dividends.  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code\",\"kind\":\"dev\",\"methods\":{\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has earned in total.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawDividend()\":{\"details\":\"It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\"},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"title\":\"Dividend-Paying Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingToken.sol\":\"DividendPayingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"DividendPayingToken.sol\":{\"keccak256\":\"0xaf6bdf1fd8aa3f84daa1574ad1f92139021d1780488f992980f313526dc93eb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24d73b01160d3b5629eda3cf59f19896de4146b65c31efab1ce63231831051eb\",\"dweb:/ipfs/QmbCGFwViZBo1Y5eXSj7izPVNjrd32RQerq6M9dDm4uFdq\"]},\"DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x540feb0de30442e4ff73b150bfda6936d67b7b9a821ef07dfd171329f5980c5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e37fe007425be9fc1f260badb7049980dd9ee8ea0e6cb50f9167e9262e6aed3\",\"dweb:/ipfs/QmceJrr5vs6LCfBj51ZtyjqmyD4DuPiGozKphxKed2F14K\"]},\"DividendPayingTokenOptionalInterface.sol\":{\"keccak256\":\"0xff14d6250f7475ad64006d069fd715371ce5ed90c5a946b944aa5241b6faa47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92c259af1a8c2b41fc8796c42fb6f0583f691b61c7007c1836fdee7fbc892e59\",\"dweb:/ipfs/QmNwopB8sD2wAR72gZ4ms4LRSVuMGpmPiJjUYubQFhvaSd\"]},\"ERC20.sol\":{\"keccak256\":\"0x83db848aeb57e6b9d105566d2c9d97184bbc038fe3012a24a242d875ab71181c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41b4e38a45d2c3b677510d7191b231aef68af68947c2a7bd36b1c8d600b25a95\",\"dweb:/ipfs/QmRnWEp1UR3MvnvujLT79tRyqFcUghVrti4RQdqABs3ZRT\"]},\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]},\"Ownable.sol\":{\"keccak256\":\"0xc8bb32fd490e2821c1b3485964cdb304fc9ff4d449c9c80e8381a052c0472e7a\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://dbfa4b1ab73357cc544387f2ee65b227ab4a620f7a02aa3bed54dc784c79299d\",\"dweb:/ipfs/QmeXgguUxhgk3FFJgnDDbLEHf7fkBv6g8HUufekHRB4NsG\"]},\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]},\"SafeMathInt.sol\":{\"keccak256\":\"0xcd8b4ef427f18356a0d9456b15d9decbd1fad699cb66cfb5447493cf244b79ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0545e940cc0ee3ec34e2d8b4f5815fa09aa84da9be30728a1cce3ccc44101474\",\"dweb:/ipfs/QmdFE4A5HzhXUxVPBVFj4q2LxnmFJAJDQhwMQc64zFrtdD\"]},\"SafeMathUint.sol\":{\"keccak256\":\"0x8f5c24cd76bdcec7af73fb22794aa32e29ce58c0f63b448f7a8b25d44b78975f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f36d6348f20e2d713db661f3b22fd9d212c37f18ad9f790312f3c01d1e800aa\",\"dweb:/ipfs/QmVtv5QhzE77fhso2WsX6RYb1th851n4xCQsUE9i2XHzWv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2659,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 62,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "magnifiedDividendPerShare",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 66,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "magnifiedDividendCorrections",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 70,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "withdrawnDividends",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 72,
								"contract": "DividendPayingToken.sol:DividendPayingToken",
								"label": "totalDividendsDistributed",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accumulativeDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has earned in total."
							},
							"dividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawDividend()": {
								"notice": "Withdraws the ether distributed to the sender."
							},
							"withdrawableDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawnDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has withdrawn."
							}
						},
						"version": 1
					}
				}
			},
			"DividendPayingTokenInterface.sol": {
				"DividendPayingTokenInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendsDistributed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "dividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDividend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "An interface for a dividend-paying token contract.",
						"events": {
							"DividendWithdrawn(address,uint256)": {
								"details": "This event MUST emit when an address withdraws their dividend.",
								"params": {
									"to": "The address which withdraws ether from this contract.",
									"weiAmount": "The amount of withdrawn ether in wei."
								}
							},
							"DividendsDistributed(address,uint256)": {
								"details": "This event MUST emit when ether is distributed to token holders.",
								"params": {
									"from": "The address which sends ether to this contract.",
									"weiAmount": "The amount of distributed ether in wei."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"dividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawDividend()": {
								"details": "SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
							}
						},
						"title": "Dividend-Paying Token Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dividendOf(address)": "91b89fba",
							"withdrawDividend()": "6a474002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"An interface for a dividend-paying token contract.\",\"events\":{\"DividendWithdrawn(address,uint256)\":{\"details\":\"This event MUST emit when an address withdraws their dividend.\",\"params\":{\"to\":\"The address which withdraws ether from this contract.\",\"weiAmount\":\"The amount of withdrawn ether in wei.\"}},\"DividendsDistributed(address,uint256)\":{\"details\":\"This event MUST emit when ether is distributed to token holders.\",\"params\":{\"from\":\"The address which sends ether to this contract.\",\"weiAmount\":\"The amount of distributed ether in wei.\"}}},\"kind\":\"dev\",\"methods\":{\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawDividend()\":{\"details\":\"SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\"}},\"title\":\"Dividend-Paying Token Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingTokenInterface.sol\":\"DividendPayingTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x540feb0de30442e4ff73b150bfda6936d67b7b9a821ef07dfd171329f5980c5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e37fe007425be9fc1f260badb7049980dd9ee8ea0e6cb50f9167e9262e6aed3\",\"dweb:/ipfs/QmceJrr5vs6LCfBj51ZtyjqmyD4DuPiGozKphxKed2F14K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"dividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawDividend()": {
								"notice": "Withdraws the ether distributed to the sender."
							}
						},
						"version": 1
					}
				}
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"DividendPayingTokenOptionalInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawableDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "OPTIONAL functions for a dividend-paying token contract.",
						"kind": "dev",
						"methods": {
							"accumulativeDividendOf(address)": {
								"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)",
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has earned in total."
								}
							},
							"withdrawableDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawnDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has withdrawn."
								}
							}
						},
						"title": "Dividend-Paying Token Optional Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accumulativeDividendOf(address)": "27ce0147",
							"withdrawableDividendOf(address)": "a8b9d240",
							"withdrawnDividendOf(address)": "aafd847a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"OPTIONAL functions for a dividend-paying token contract.\",\"kind\":\"dev\",\"methods\":{\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has earned in total.\"}},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"title\":\"Dividend-Paying Token Optional Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingTokenOptionalInterface.sol\":\"DividendPayingTokenOptionalInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DividendPayingTokenOptionalInterface.sol\":{\"keccak256\":\"0xff14d6250f7475ad64006d069fd715371ce5ed90c5a946b944aa5241b6faa47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92c259af1a8c2b41fc8796c42fb6f0583f691b61c7007c1836fdee7fbc892e59\",\"dweb:/ipfs/QmNwopB8sD2wAR72gZ4ms4LRSVuMGpmPiJjUYubQFhvaSd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accumulativeDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has earned in total."
							},
							"withdrawableDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawnDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has withdrawn."
							}
						},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"ERC20.sol\":2006:2011  _name */\n  0x03\n  swap1\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"ERC20.sol\":2029:2036  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":2204:2209  _name */\n      0x03\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2172:2185  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2197:2209  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2204:2209  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2204:2209  _name */\n      dup3\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"ERC20.sol\":4298:4302  bool */\n      0x00\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      tag_58\n        /* \"ERC20.sol\":4323:4333  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"ERC20.sol\":4337:4344  spender */\n      dup5\n        /* \"ERC20.sol\":4346:4352  amount */\n      dup5\n        /* \"ERC20.sol\":4314:4322  _approve */\n      tag_60\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"ERC20.sol\":4370:4374  true */\n      0x01\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"ERC20.sol\":3293:3305  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_28:\n        /* \"ERC20.sol\":4984:4988  bool */\n      0x00\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"ERC20.sol\":5010:5016  sender */\n      dup5\n        /* \"ERC20.sol\":5018:5027  recipient */\n      dup5\n        /* \"ERC20.sol\":5029:5035  amount */\n      dup5\n        /* \"ERC20.sol\":5000:5009  _transfer */\n      tag_64\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"ERC20.sol\":5055:5061  sender */\n      dup5\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      tag_66\n        /* \"ERC20.sol\":5063:5073  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5077:5088  _allowances */\n      0x01\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      tag_68\n        /* \"ERC20.sol\":5097:5107  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5110  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5077:5114  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"ERC20.sol\":5046:5054  _approve */\n      tag_60\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"ERC20.sol\":5184:5188  true */\n      0x01\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_30:\n        /* \"ERC20.sol\":3137:3139  18 */\n      0x12\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"ERC20.sol\":5678:5682  bool */\n      0x00\n        /* \"ERC20.sol\":5694:5777  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      tag_73\n        /* \"ERC20.sol\":5703:5713  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":5717:5724  spender */\n      dup5\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"ERC20.sol\":5765:5775  addedValue */\n      dup6\n        /* \"ERC20.sol\":5726:5737  _allowances */\n      0x01\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      tag_75\n        /* \"ERC20.sol\":5738:5748  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5726:5760  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5726:5764  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      and\n        /* \"ERC20.sol\":3444:3451  uint256 */\n      0x00\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_38:\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      0x04\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2385:2398  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      dup3\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"ERC20.sol\":6385:6389  bool */\n      0x00\n        /* \"ERC20.sol\":6401:6530  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":6410:6420  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":6424:6431  spender */\n      dup5\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"ERC20.sol\":6472:6487  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6433:6444  _allowances */\n      0x01\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      tag_86\n        /* \"ERC20.sol\":6445:6455  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6433:6467  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6433:6471  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"ERC20.sol\":3784:3788  bool */\n      0x00\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      tag_89\n        /* \"ERC20.sol\":3810:3820  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"ERC20.sol\":3824:3833  recipient */\n      dup5\n        /* \"ERC20.sol\":3835:3841  amount */\n      dup5\n        /* \"ERC20.sol\":3800:3809  _transfer */\n      tag_64\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4017:4024  uint256 */\n      0x00\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4043:4054  _allowances */\n      0x01\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4043:4070  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_59:\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9522:9541  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9514:9582  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9600:9621  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9592:9660  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9671:9682  _allowances */\n      0x01\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9671:9698  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9671:9707  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7032:7592  function _transfer(... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7167:7187  sender != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":7159:7229  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7247:7270  recipient != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7239:7310  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC20.sol\":7321:7368  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":7342:7348  sender */\n      dup4\n        /* \"ERC20.sol\":7350:7359  recipient */\n      dup4\n        /* \"ERC20.sol\":7361:7367  amount */\n      dup4\n        /* \"ERC20.sol\":7321:7341  _beforeTokenTransfer */\n      tag_99\n        /* \"ERC20.sol\":7321:7368  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"ERC20.sol\":7421:7427  amount */\n      dup2\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7399:7416  _balances[sender] */\n      dup7\n      and\n        /* \"ERC20.sol\":7399:7408  _balances */\n      0x00\n        /* \"ERC20.sol\":7399:7416  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"ERC20.sol\":7399:7420  _balances[sender].sub */\n      tag_69\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7379:7396  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":7379:7388  _balances */\n      0x00\n        /* \"ERC20.sol\":7379:7396  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":7379:7470  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":7503:7523  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":7503:7535  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"ERC20.sol\":7528:7534  amount */\n      dup3\n        /* \"ERC20.sol\":7503:7527  _balances[recipient].add */\n      tag_76\n        /* \"ERC20.sol\":7503:7535  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":7480:7489  _balances */\n      0x00\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":7480:7535  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":7550:7585  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":7550:7585  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":7032:7592  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"SafeMath.sol\":1268:1275  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1303:1315  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1295:1301  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1287:1316  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1338:1343  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"SafeMath.sol\":368:375  uint256 */\n      0x00\n        /* \"SafeMath.sol\":399:404  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":422:428  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":414:460  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"SafeMath.sol\":478:479  c */\n      swap4\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10348:10469  function _beforeTokenTransfer(... */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000c5138038062000c518339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101c0565b5080516101b89060049060208401906101c0565b505050610253565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020157805160ff191683800117855561022e565b8280016001018555821561022e579182015b8281111561022e578251825591602001919060010190610213565b5061023a92915061023e565b5090565b5b8082111561023a576000815560010161023f565b6109ee80620002636000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC51 CODESIZE SUB DUP1 PUSH3 0xC51 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP POP POP PUSH2 0x253 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x201 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x22E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x22E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x213 JUMP JUMPDEST POP PUSH2 0x23A SWAP3 SWAP2 POP PUSH2 0x23E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x9EE DUP1 PUSH3 0x263 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C94A EXTCODEHASH 0x2E 0xD8 0x49 0x2E STOP 0x4F 0xAF 0xC3 SWAP14 MULMOD 0xA5 MSTORE8 PUSH14 0x7370843A6AE0F7F1129B76F1BA66 0x27 0xD0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1325:9146:4:-:0;;;1933:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;-1:-1:-1;1933:120:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1933:120:4;;-1:-1:-1;;2006:13:4;;;;-1:-1:-1;2006:5:4;;:13;;;;;:::i;:::-;-1:-1:-1;2029:17:4;;;;:7;;:17;;;;;:::i;:::-;;1933:120;;1325:9146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1325:9146:4;;;-1:-1:-1;1325:9146:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C94A EXTCODEHASH 0x2E 0xD8 0x49 0x2E STOP 0x4F 0xAF 0xC3 SWAP14 MULMOD 0xA5 MSTORE8 PUSH14 0x7370843A6AE0F7F1129B76F1BA66 0x27 0xD0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1325:9146:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4215:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3206:106;;;:::i;:::-;;;;;;;;;;;;;;;;4848:347;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4848:347:4;;;;;;;;;;;;;;;;;:::i;3055:91::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5590:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5590:215:4;;;;;;;;:::i;3370:125::-;;;;;;;;;;;;;;;;-1:-1:-1;3370:125:4;-1:-1:-1;;;;;3370:125:4;;:::i;2329:102::-;;;:::i;6292:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6292:266:4;;;;;;;;:::i;3698:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3698:172:4;;;;;;;;:::i;3928:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3928:149:4;;;;;;;;;;:::i;2118:98::-;2204:5;2197:12;;;;;;;;-1:-1:-1;;2197:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:13;;2197:12;;2204:5;;2197:12;;2204:5;2197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;:::o;4215:166::-;4298:4;4314:39;4323:12;:10;:12::i;:::-;4337:7;4346:6;4314:8;:39::i;:::-;-1:-1:-1;4370:4:4;4215:166;;;;:::o;3206:106::-;3293:12;;3206:106;:::o;4848:347::-;4984:4;5000:36;5010:6;5018:9;5029:6;5000:9;:36::i;:::-;5046:121;5055:6;5063:12;:10;:12::i;:::-;5077:89;5115:6;5077:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5077:19:4;;;;;;:11;:19;;;;;;5097:12;:10;:12::i;:::-;-1:-1:-1;;;;;5077:33:4;;;;;;;;;;;;-1:-1:-1;5077:33:4;;;:89;:37;:89::i;:::-;5046:8;:121::i;:::-;-1:-1:-1;5184:4:4;4848:347;;;;;:::o;3055:91::-;3137:2;3055:91;:::o;5590:215::-;5678:4;5694:83;5703:12;:10;:12::i;:::-;5717:7;5726:50;5765:10;5726:11;:25;5738:12;:10;:12::i;:::-;-1:-1:-1;;;;;5726:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5726:25:4;;;:34;;;;;;;;;;;:38;:50::i;3370:125::-;-1:-1:-1;;;;;3470:18:4;3444:7;3470:18;;;;;;;;;;;;3370:125::o;2329:102::-;2417:7;2410:14;;;;;;;;-1:-1:-1;;2410:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:13;;2410:14;;2417:7;;2410:14;;2417:7;2410:14;;;;;;;;;;;;;;;;;;;;;;;;6292:266;6385:4;6401:129;6410:12;:10;:12::i;:::-;6424:7;6433:96;6472:15;6433:96;;;;;;;;;;;;;;;;;:11;:25;6445:12;:10;:12::i;:::-;-1:-1:-1;;;;;6433:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6433:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3698:172::-;3784:4;3800:42;3810:12;:10;:12::i;:::-;3824:9;3835:6;3800:9;:42::i;3928:149::-;-1:-1:-1;;;;;4043:18:4;;;4017:7;4043:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3928:149::o;586:96:0:-;665:10;586:96;:::o;9391:370:4:-;-1:-1:-1;;;;;9522:19:4;;9514:68;;;;-1:-1:-1;;;9514:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9600:21:4;;9592:68;;;;-1:-1:-1;;;9592:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9671:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9722:32;;;;;;;;;;;;;;;;;9391:370;;;:::o;7032:560::-;-1:-1:-1;;;;;7167:20:4;;7159:70;;;;-1:-1:-1;;;7159:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7247:23:4;;7239:71;;;;-1:-1:-1;;;7239:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7321:47;7342:6;7350:9;7361:6;7321:20;:47::i;:::-;7399:71;7421:6;7399:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7399:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7379:17:4;;;:9;:17;;;;;;;;;;;:91;;;;7503:20;;;;;;;:32;;7528:6;7503:24;:32::i;:::-;-1:-1:-1;;;;;7480:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;7550:35;;;;;;;7480:20;;7550:35;;;;;;;;;;;;;7032:560;;;:::o;1182:187:13:-;1268:7;1303:12;1295:6;;;;1287:29;;;;-1:-1:-1;;;1287:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1338:5:13;;;1182:187::o;310:176::-;368:7;399:5;;;422:6;;;;414:46;;;;;-1:-1:-1;;;414:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:1;310:176;-1:-1:-1;;;310:176:13:o;10348:121:4:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "508400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "296",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c94a3f2ed8492e004fafc39d09a5536d7370843a6ae0f7f1129b76f1ba6627d064736f6c634300060c0033",
									".code": [
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4323,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4344,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5063,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5097,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5703,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5737,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5738,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6410,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6431,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6472,
											"end": 6487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6445,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4054,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9682,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH data",
											"source": 4,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH data",
											"source": 4,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7350,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH data",
											"source": 4,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7399,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7503,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 478,
											"end": 479,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 310,
											"end": 486,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"ERC20.sol\":{\"keccak256\":\"0x83db848aeb57e6b9d105566d2c9d97184bbc038fe3012a24a242d875ab71181c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41b4e38a45d2c3b677510d7191b231aef68af68947c2a7bd36b1c8d600b25a95\",\"dweb:/ipfs/QmRnWEp1UR3MvnvujLT79tRyqFcUghVrti4RQdqABs3ZRT\"]},\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]},\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IUniswapV2Factory.sol\":{\"keccak256\":\"0xccc328a1c3c7959a2355eb7ff66d63d9df164cc7daac37223284b8d6192898cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f3745753869777d171862e4f9e0ccf1dff2bdc57f3941195267d60cf58cb88a\",\"dweb:/ipfs/QmVvh3EwUt15ZUdaFPM1hzTDRncsYouQZHnCU2crAVQUFa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IUniswapV2Pair.sol\":{\"keccak256\":\"0x25912efdfa7127b5d9edb273b9bd730f2b487465a63a513d0d545b8203eb97d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93010d9c0a26b6f4d923735ae2685461595233429ddf8cf2a8a8e30c9838b75d\",\"dweb:/ipfs/QmTXVrc7khrcpHWeKDxertzNtvkZs1Nzi9A3JwibabhA1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IUniswapV2Router.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IUniswapV2Router.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IUniswapV2Router.sol\":{\"keccak256\":\"0x0248eb0ad99a92587be54f7535d7de5f110cbef3028ca6733bac5cc794740706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5541ea37b9109c3fdd88bcd6d0e7cd608b0d1511be1172b066ecde9ff1142d26\",\"dweb:/ipfs/QmaxELC6b9EhrWwgStxiHtXv3QJEMyjEHHAeDKLDwj7YnJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IUniswapV2Router.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IUniswapV2Router.sol\":{\"keccak256\":\"0x0248eb0ad99a92587be54f7535d7de5f110cbef3028ca6733bac5cc794740706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5541ea37b9109c3fdd88bcd6d0e7cd608b0d1511be1172b066ecde9ff1142d26\",\"dweb:/ipfs/QmaxELC6b9EhrWwgStxiHtXv3QJEMyjEHHAeDKLDwj7YnJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IterableMapping.sol": {
				"IterableMapping": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"IterableMapping.sol\":57:1629  library IterableMapping {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"IterableMapping.sol\":57:1629  library IterableMapping {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x17e142d1\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4c60db9c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x732a2ccf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbc2b405c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd1aa9e7e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdeb3d896\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"IterableMapping.sol\":422:612  function getIndexOfKey(Map storage map, address key) public view returns (int) {... */\n    tag_2:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_10\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"IterableMapping.sol\":1171:1627  function remove(Map storage map, address key) public {... */\n    tag_3:\n      dup2\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"IterableMapping.sol\":307:416  function get(Map storage map, address key) public view returns (uint) {... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_17\n      jump\t// in\n        /* \"IterableMapping.sol\":850:1165  function set(Map storage map, address key, uint val) public {... */\n    tag_5:\n      dup2\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      dup1\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      0x20\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_21\n      jump\t// in\n        /* \"IterableMapping.sol\":618:739  function getKeyAtIndex(Map storage map, uint index) public view returns (address) {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_24\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"IterableMapping.sol\":747:844  function size(Map storage map) public view returns (uint) {... */\n    tag_7:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      calldataload\n      tag_27\n      jump\t// in\n        /* \"IterableMapping.sol\":422:612  function getIndexOfKey(Map storage map, address key) public view returns (int) {... */\n    tag_10:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":515:532  map.inserted[key] */\n      dup2\n      and\n        /* \"IterableMapping.sol\":496:499  int */\n      0x00\n        /* \"IterableMapping.sol\":515:532  map.inserted[key] */\n      swap1\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":515:527  map.inserted */\n      0x03\n      dup4\n      add\n        /* \"IterableMapping.sol\":515:532  map.inserted[key] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"IterableMapping.sol\":511:568  if(!map.inserted[key]) {... */\n      tag_29\n      jumpi\n      pop\n      not(0x00)\n        /* \"IterableMapping.sol\":548:557  return -1 */\n      jump(tag_28)\n        /* \"IterableMapping.sol\":511:568  if(!map.inserted[key]) {... */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":588:604  map.indexOf[key] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":588:599  map.indexOf */\n      0x02\n      dup4\n      add\n        /* \"IterableMapping.sol\":588:604  map.indexOf[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"IterableMapping.sol\":422:612  function getIndexOfKey(Map storage map, address key) public view returns (int) {... */\n    tag_28:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"IterableMapping.sol\":1171:1627  function remove(Map storage map, address key) public {... */\n    tag_14:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":1239:1256  map.inserted[key] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":1239:1251  map.inserted */\n      0x03\n      dup4\n      add\n        /* \"IterableMapping.sol\":1239:1256  map.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"IterableMapping.sol\":1234:1289  if (!map.inserted[key]) {... */\n      tag_31\n      jumpi\n        /* \"IterableMapping.sol\":1272:1279  return; */\n      jump(tag_30)\n        /* \"IterableMapping.sol\":1234:1289  if (!map.inserted[key]) {... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":1306:1323  map.inserted[key] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":1306:1318  map.inserted */\n      0x03\n      dup4\n      add\n        /* \"IterableMapping.sol\":1306:1323  map.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"IterableMapping.sol\":1299:1323  delete map.inserted[key] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n        /* \"IterableMapping.sol\":1340:1350  map.values */\n      dup6\n      add\n        /* \"IterableMapping.sol\":1340:1355  map.values[key] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"IterableMapping.sol\":1333:1355  delete map.values[key] */\n      dup4\n      swap1\n      sstore\n        /* \"IterableMapping.sol\":1379:1390  map.indexOf */\n      0x02\n      dup6\n      add\n        /* \"IterableMapping.sol\":1379:1395  map.indexOf[key] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"IterableMapping.sol\":1422:1437  map.keys.length */\n      dup4\n      sload\n        /* \"IterableMapping.sol\":1379:1395  map.indexOf[key] */\n      swap1\n      swap2\n      not(0x00)\n        /* \"IterableMapping.sol\":1422:1441  map.keys.length - 1 */\n      dup3\n      add\n      swap2\n        /* \"IterableMapping.sol\":1306:1309  map */\n      dup6\n      swap1\n        /* \"IterableMapping.sol\":1422:1441  map.keys.length - 1 */\n      dup4\n      swap1\n        /* \"IterableMapping.sol\":1469:1488  map.keys[lastIndex] */\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"IterableMapping.sol\":1499:1519  map.indexOf[lastKey] */\n      dup1\n      dup5\n      mstore\n        /* \"IterableMapping.sol\":1499:1510  map.indexOf */\n      0x02\n      dup10\n      add\n        /* \"IterableMapping.sol\":1499:1519  map.indexOf[lastKey] */\n      swap1\n      swap3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"IterableMapping.sol\":1499:1527  map.indexOf[lastKey] = index */\n      dup8\n      swap1\n      sstore\n        /* \"IterableMapping.sol\":1544:1560  map.indexOf[key] */\n      swap1\n      dup8\n      and\n      dup4\n      mstore\n      dup3\n      keccak256\n        /* \"IterableMapping.sol\":1537:1560  delete map.indexOf[key] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"IterableMapping.sol\":1571:1586  map.keys[index] */\n      dup6\n      sload\n        /* \"IterableMapping.sol\":1469:1488  map.keys[lastIndex] */\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"IterableMapping.sol\":1499:1502  map */\n      dup7\n      swap1\n        /* \"IterableMapping.sol\":1522:1527  index */\n      dup6\n      swap1\n        /* \"IterableMapping.sol\":1571:1586  map.keys[index] */\n      dup2\n      lt\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"IterableMapping.sol\":1571:1596  map.keys[index] = lastKey */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"IterableMapping.sol\":1606:1620  map.keys.pop() */\n      dup5\n      sload\n      dup6\n      swap1\n      dup1\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"IterableMapping.sol\":1171:1627  function remove(Map storage map, address key) public {... */\n    tag_30:\n      pop\n      pop\n      jump\t// out\n        /* \"IterableMapping.sol\":307:416  function get(Map storage map, address key) public view returns (uint) {... */\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":394:409  map.values[key] */\n      and\n        /* \"IterableMapping.sol\":371:375  uint */\n      0x00\n        /* \"IterableMapping.sol\":394:409  map.values[key] */\n      swap1\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":394:404  map.values */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"IterableMapping.sol\":394:409  map.values[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"IterableMapping.sol\":307:416  function get(Map storage map, address key) public view returns (uint) {... */\n      jump\t// out\n        /* \"IterableMapping.sol\":850:1165  function set(Map storage map, address key, uint val) public {... */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":924:941  map.inserted[key] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":924:936  map.inserted */\n      0x03\n      dup5\n      add\n        /* \"IterableMapping.sol\":924:941  map.inserted[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"IterableMapping.sol\":920:1159  if (map.inserted[key]) {... */\n      iszero\n      tag_40\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":957:972  map.values[key] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":957:967  map.values */\n      0x01\n      dup5\n      add\n        /* \"IterableMapping.sol\":957:972  map.values[key] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"IterableMapping.sol\":957:978  map.values[key] = val */\n      dup2\n      swap1\n      sstore\n        /* \"IterableMapping.sol\":920:1159  if (map.inserted[key]) {... */\n      jump(tag_41)\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"IterableMapping.sol\":1009:1026  map.inserted[key] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"IterableMapping.sol\":1009:1021  map.inserted */\n      0x03\n      dup6\n      add\n        /* \"IterableMapping.sol\":1009:1026  map.inserted[key] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"IterableMapping.sol\":1009:1033  map.inserted[key] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"IterableMapping.sol\":1029:1033  true */\n      0x01\n        /* \"IterableMapping.sol\":1009:1033  map.inserted[key] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"IterableMapping.sol\":1047:1057  map.values */\n      dup8\n      dup2\n      add\n        /* \"IterableMapping.sol\":1047:1062  map.values[key] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"IterableMapping.sol\":1047:1068  map.values[key] = val */\n      dup7\n      swap1\n      sstore\n        /* \"IterableMapping.sol\":1101:1116  map.keys.length */\n      dup8\n      sload\n        /* \"IterableMapping.sol\":1082:1093  map.indexOf */\n      0x02\n      dup10\n      add\n        /* \"IterableMapping.sol\":1082:1098  map.indexOf[key] */\n      dup5\n      mstore\n      swap2\n      dup5\n      keccak256\n        /* \"IterableMapping.sol\":1082:1116  map.indexOf[key] = map.keys.length */\n      dup3\n      swap1\n      sstore\n        /* \"IterableMapping.sol\":1130:1148  map.keys.push(key) */\n      dup2\n      add\n      dup8\n      sstore\n      dup7\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"IterableMapping.sol\":920:1159  if (map.inserted[key]) {... */\n    tag_41:\n        /* \"IterableMapping.sol\":850:1165  function set(Map storage map, address key, uint val) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"IterableMapping.sol\":618:739  function getKeyAtIndex(Map storage map, uint index) public view returns (address) {... */\n    tag_24:\n        /* \"IterableMapping.sol\":691:698  address */\n      0x00\n        /* \"IterableMapping.sol\":717:720  map */\n      dup3\n        /* \"IterableMapping.sol\":717:725  map.keys */\n      0x00\n      add\n        /* \"IterableMapping.sol\":726:731  index */\n      dup3\n        /* \"IterableMapping.sol\":717:732  map.keys[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap4\n        /* \"IterableMapping.sol\":618:739  function getKeyAtIndex(Map storage map, uint index) public view returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"IterableMapping.sol\":747:844  function size(Map storage map) public view returns (uint) {... */\n    tag_27:\n        /* \"IterableMapping.sol\":822:837  map.keys.length */\n      sload\n      swap1\n        /* \"IterableMapping.sol\":747:844  function size(Map storage map) public view returns (uint) {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c0ce6de95c2cca0db8476e405ca63e69f79c12b15f989e44b96d107bb44a01a764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "61044e610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806317e142d1146100715780634c60db9c146100af578063732a2ccf146100ea578063bc2b405c14610116578063d1aa9e7e14610155578063deb3d89614610194575b600080fd5b61009d6004803603604081101561008757600080fd5b50803590602001356001600160a01b03166101b1565b60408051918252519081900360200190f35b8180156100bb57600080fd5b506100e8600480360360408110156100d257600080fd5b50803590602001356001600160a01b03166101ff565b005b61009d6004803603604081101561010057600080fd5b50803590602001356001600160a01b031661031e565b81801561012257600080fd5b506100e86004803603606081101561013957600080fd5b508035906001600160a01b03602082013516906040013561033d565b6101786004803603604081101561016b57600080fd5b50803590602001356103e7565b604080516001600160a01b039092168252519081900360200190f35b61009d600480360360208110156101aa57600080fd5b5035610414565b6001600160a01b038116600090815260038301602052604081205460ff166101dc57506000196101f9565b506001600160a01b03811660009081526002830160205260409020545b92915050565b6001600160a01b038116600090815260038301602052604090205460ff166102265761031a565b6001600160a01b03811660009081526003830160209081526040808320805460ff19169055600185018252808320839055600285019091528120548354909160001982019185908390811061027757fe5b60009182526020808320909101546001600160a01b039081168084526002890190925260408084208790559087168352822091909155855490915081908690859081106102c057fe5b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905584548590806102f457fe5b600082815260209020810160001990810180546001600160a01b03191690550190555050505b5050565b6001600160a01b03166000908152600191909101602052604090205490565b6001600160a01b038216600090815260038401602052604090205460ff1615610382576001600160a01b038216600090815260018401602052604090208190556103e2565b6001600160a01b03821660008181526003850160209081526040808320805460ff19166001908117909155878101835281842086905587546002890184529184208290558101875586835291200180546001600160a01b03191690911790555b505050565b60008260000182815481106103f857fe5b6000918252602090912001546001600160a01b03169392505050565b549056fea2646970667358221220c0ce6de95c2cca0db8476e405ca63e69f79c12b15f989e44b96d107bb44a01a764736f6c634300060c0033",
							"opcodes": "PUSH2 0x44E PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17E142D1 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x4C60DB9C EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x732A2CCF EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xBC2B405C EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xD1AA9E7E EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xDEB3D896 EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x31E JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x33D JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1DC JUMPI POP PUSH1 0x0 NOT PUSH2 0x1F9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x226 JUMPI PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP6 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SLOAD SWAP1 SWAP2 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x277 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x2 DUP10 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 SWAP1 SSTORE SWAP1 DUP8 AND DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP7 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2C0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 SLOAD DUP6 SWAP1 DUP1 PUSH2 0x2F4 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x382 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP8 DUP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP8 SLOAD PUSH1 0x2 DUP10 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP8 SSTORE DUP7 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xCE PUSH14 0xE95C2CCA0DB8476E405CA63E69F7 SWAP13 SLT 0xB1 0x5F SWAP9 SWAP15 DIFFICULTY 0xB9 PUSH14 0x107BB44A01A764736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "57:1572:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806317e142d1146100715780634c60db9c146100af578063732a2ccf146100ea578063bc2b405c14610116578063d1aa9e7e14610155578063deb3d89614610194575b600080fd5b61009d6004803603604081101561008757600080fd5b50803590602001356001600160a01b03166101b1565b60408051918252519081900360200190f35b8180156100bb57600080fd5b506100e8600480360360408110156100d257600080fd5b50803590602001356001600160a01b03166101ff565b005b61009d6004803603604081101561010057600080fd5b50803590602001356001600160a01b031661031e565b81801561012257600080fd5b506100e86004803603606081101561013957600080fd5b508035906001600160a01b03602082013516906040013561033d565b6101786004803603604081101561016b57600080fd5b50803590602001356103e7565b604080516001600160a01b039092168252519081900360200190f35b61009d600480360360208110156101aa57600080fd5b5035610414565b6001600160a01b038116600090815260038301602052604081205460ff166101dc57506000196101f9565b506001600160a01b03811660009081526002830160205260409020545b92915050565b6001600160a01b038116600090815260038301602052604090205460ff166102265761031a565b6001600160a01b03811660009081526003830160209081526040808320805460ff19169055600185018252808320839055600285019091528120548354909160001982019185908390811061027757fe5b60009182526020808320909101546001600160a01b039081168084526002890190925260408084208790559087168352822091909155855490915081908690859081106102c057fe5b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905584548590806102f457fe5b600082815260209020810160001990810180546001600160a01b03191690550190555050505b5050565b6001600160a01b03166000908152600191909101602052604090205490565b6001600160a01b038216600090815260038401602052604090205460ff1615610382576001600160a01b038216600090815260018401602052604090208190556103e2565b6001600160a01b03821660008181526003850160209081526040808320805460ff19166001908117909155878101835281842086905587546002890184529184208290558101875586835291200180546001600160a01b03191690911790555b505050565b60008260000182815481106103f857fe5b6000918252602090912001546001600160a01b03169392505050565b549056fea2646970667358221220c0ce6de95c2cca0db8476e405ca63e69f79c12b15f989e44b96d107bb44a01a764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17E142D1 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x4C60DB9C EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x732A2CCF EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xBC2B405C EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xD1AA9E7E EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xDEB3D896 EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x31E JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x33D JUMP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1DC JUMPI POP PUSH1 0x0 NOT PUSH2 0x1F9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x226 JUMPI PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP6 ADD DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SLOAD SWAP1 SWAP2 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x277 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x2 DUP10 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 SWAP1 SSTORE SWAP1 DUP8 AND DUP4 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 DUP7 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2C0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 SLOAD DUP6 SWAP1 DUP1 PUSH2 0x2F4 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x382 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP8 DUP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP8 SLOAD PUSH1 0x2 DUP10 ADD DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP3 SWAP1 SSTORE DUP2 ADD DUP8 SSTORE DUP7 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xCE PUSH14 0xE95C2CCA0DB8476E405CA63E69F7 SWAP13 SLT 0xB1 0x5F SWAP9 SWAP15 DIFFICULTY 0xB9 PUSH14 0x107BB44A01A764736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "57:1572:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:190;;;;;;;;;;;;;;;;-1:-1:-1;422:190:10;;;;;;-1:-1:-1;;;;;422:190:10;;:::i;:::-;;;;;;;;;;;;;;;;1171:456;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1171:456:10;;;;;;-1:-1:-1;;;;;1171:456:10;;:::i;:::-;;307:109;;;;;;;;;;;;;;;;-1:-1:-1;307:109:10;;;;;;-1:-1:-1;;;;;307:109:10;;:::i;850:315::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:315:10;;;-1:-1:-1;;;;;850:315:10;;;;;;;;;;:::i;618:121::-;;;;;;;;;;;;;;;;-1:-1:-1;618:121:10;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;618:121:10;;;;;;;;;;;;;;747:97;;;;;;;;;;;;;;;;-1:-1:-1;747:97:10;;:::i;422:190::-;-1:-1:-1;;;;;515:17:10;;496:3;515:17;;;:12;;;:17;;;;;;;;511:57;;-1:-1:-1;;;548:9:10;;511:57;-1:-1:-1;;;;;;588:16:10;;;;;;:11;;;:16;;;;;;422:190;;;;;:::o;1171:456::-;-1:-1:-1;;;;;1239:17:10;;;;;;:12;;;:17;;;;;;;;1234:55;;1272:7;;1234:55;-1:-1:-1;;;;;1306:17:10;;;;;;:12;;;:17;;;;;;;;1299:24;;-1:-1:-1;;1299:24:10;;;;1340:10;;:15;;;;;1333:22;;;1379:11;;;:16;;;;;;1422:15;;1379:16;;-1:-1:-1;;1422:19:10;;;1306:3;;1422:19;;1469;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1469:19:10;;;1499:20;;;:11;;;:20;;;;;;;:28;;;1544:16;;;;;;;1537:23;;;;1571:15;;1469:19;;-1:-1:-1;1469:19:10;;1499:3;;1522:5;;1571:15;;;;;;;;;;;;;;;:25;;-1:-1:-1;;;;;;1571:25:10;-1:-1:-1;;;;;1571:25:10;;;;;;;;;;1606:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;1606:14:10;;;;;-1:-1:-1;;;;;;1606:14:10;;;;;;-1:-1:-1;;;1171:456:10;;;:::o;307:109::-;-1:-1:-1;;;;;394:15:10;371:4;394:15;;;:10;;;;;:15;;;;;;;307:109::o;850:315::-;-1:-1:-1;;;;;924:17:10;;;;;;:12;;;:17;;;;;;;;920:239;;;-1:-1:-1;;;;;957:15:10;;;;;;:10;;;:15;;;;;:21;;;920:239;;;-1:-1:-1;;;;;1009:17:10;;;;;;:12;;;:17;;;;;;;;:24;;-1:-1:-1;;1009:24:10;1029:4;1009:24;;;;;;1047:10;;;:15;;;;;:21;;;1101:15;;1082:11;;;:16;;;;;:34;;;1130:18;;;;;;;;;;;;-1:-1:-1;;;;;;1130:18:10;;;;;;920:239;850:315;;;:::o;618:121::-;691:7;717:3;:8;;726:5;717:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;717:15:10;;618:121;-1:-1:-1;;;618:121:10:o;747:97::-;822:15;;747:97::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "220400",
								"executionCost": "288",
								"totalCost": "220688"
							},
							"external": {
								"get(IterableMapping.Map storage,address)": "1175",
								"getIndexOfKey(IterableMapping.Map storage,address)": "2054",
								"getKeyAtIndex(IterableMapping.Map storage,uint256)": "2048",
								"remove(IterableMapping.Map storage,address)": "118415",
								"set(IterableMapping.Map storage,address,uint256)": "103985",
								"size(IterableMapping.Map storage)": "1109"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 57,
									"end": 1629,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0ce6de95c2cca0db8476e405ca63e69f79c12b15f989e44b96d107bb44a01a764736f6c634300060c0033",
									".code": [
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "17E142D1"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "4C60DB9C"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "732A2CCF"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "BC2B405C"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "D1AA9E7E"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "DEB3D896"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 1629,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 422,
											"end": 612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 422,
											"end": 612,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 307,
											"end": 416,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 307,
											"end": 416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 618,
											"end": 739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 747,
											"end": 844,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 515,
											"end": 532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 515,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 515,
											"end": 527,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 515,
											"end": 527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 515,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 515,
											"end": 532,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 511,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 511,
											"end": 568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 548,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 548,
											"end": 557,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 511,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 511,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 588,
											"end": 604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 588,
											"end": 599,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 588,
											"end": 599,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 588,
											"end": 599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 604,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 588,
											"end": 604,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 422,
											"end": 612,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1234,
											"end": 1289,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1272,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1272,
											"end": 1279,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1234,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1234,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1306,
											"end": 1318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1323,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1299,
											"end": 1323,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1323,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1340,
											"end": 1350,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1355,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1355,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1422,
											"end": 1441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1309,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1510,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1499,
											"end": 1510,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1527,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1502,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1627,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 394,
											"end": 409,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 371,
											"end": 375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 394,
											"end": 409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 394,
											"end": 409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 394,
											"end": 404,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 394,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 394,
											"end": 404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 394,
											"end": 404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 394,
											"end": 409,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 394,
											"end": 409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 394,
											"end": 409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 394,
											"end": 409,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 394,
											"end": 409,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 394,
											"end": 409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 924,
											"end": 936,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 924,
											"end": 936,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 924,
											"end": 936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 941,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 924,
											"end": 941,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 924,
											"end": 941,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 957,
											"end": 972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 957,
											"end": 972,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 957,
											"end": 972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 957,
											"end": 972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 957,
											"end": 972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 957,
											"end": 967,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 957,
											"end": 967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 957,
											"end": 967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 957,
											"end": 972,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 957,
											"end": 972,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 957,
											"end": 972,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 957,
											"end": 978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 957,
											"end": 978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 957,
											"end": 978,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1026,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1033,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1033,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1062,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1068,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1068,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1116,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1093,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1082,
											"end": 1093,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1116,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 920,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 850,
											"end": 1165,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 618,
											"end": 739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 717,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 726,
											"end": 731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 618,
											"end": 739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 618,
											"end": 739,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 822,
											"end": 837,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 822,
											"end": 837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 747,
											"end": 844,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get(IterableMapping.Map storage,address)": "732a2ccf",
							"getIndexOfKey(IterableMapping.Map storage,address)": "17e142d1",
							"getKeyAtIndex(IterableMapping.Map storage,uint256)": "d1aa9e7e",
							"remove(IterableMapping.Map storage,address)": "4c60db9c",
							"set(IterableMapping.Map storage,address,uint256)": "bc2b405c",
							"size(IterableMapping.Map storage)": "deb3d896"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IterableMapping.sol\":\"IterableMapping\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IterableMapping.sol\":{\"keccak256\":\"0xffdcad33ea3af6164cb71f6a854ba6fdbda53e8de4e77eeabdd40e2980da5e87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b237054b165465ea874843d178364888e416d0fa421f93ec082f29a0c9208c4\",\"dweb:/ipfs/QmTNGwsazwxBZvkwnib8prPDmjp5gHNQAGNi5YkTkTWcgC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MONEYAVAXDividendTracker.sol": {
				"MONEYAVAXDividendTracker": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "automatic",
									"type": "bool"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								}
							],
							"name": "ClaimWaitUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendsDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ExcludeFromDividends",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CAKE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimWait",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeCAKEDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "dividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "excludedFromDividends",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "index",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "iterationsUntilProcessed",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawableDividends",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDividends",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaimTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nextClaimTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondsUntilAutoClaimAvailable",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getAccountAtIndex",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLastProcessedIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfTokenHolders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastClaimTimes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastProcessedIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumTokenBalanceForDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gas",
									"type": "uint256"
								}
							],
							"name": "process",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "automatic",
									"type": "bool"
								}
							],
							"name": "processAccount",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "setBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDividendsDistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newClaimWait",
									"type": "uint256"
								}
							],
							"name": "updateClaimWait",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDividend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawableDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"accumulativeDividendOf(address)": {
								"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude",
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has earned in total."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"dividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawDividend()": {
								"details": "It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
							},
							"withdrawableDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawnDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has withdrawn."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MONEYAVAXDividendTracker.sol\":319:6790  contract MONEYAVAXDividendTracker is Ownable, DividendPayingToken {... */\n  mstore(0x40, 0xc0)\n    /* \"DividendPayingToken.sol\":1099:1182  address public immutable CAKE = address(0xB6076C93701D6a07266c31066B298AeC6dd65c2d) */\n  mstore(0x80, 0xb6076c93701d6a07266c31066b298aec6dd65c2d000000000000000000000000)\n    /* \"MONEYAVAXDividendTracker.sol\":1030:1248  constructor() public DividendPayingToken(\"MONEYAVAX_Dividen_Tracker\", \"MONEYAVAX_Dividend_Tracker\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DividendPayingToken.sol\":2613:2704  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x19\n  dup2\n  mstore\n  0x4d4f4e4559415641585f4469766964656e5f547261636b657200000000000000\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x1a\n  dup5\n  mstore\n  0x4d4f4e4559415641585f4469766964656e645f547261636b6572000000000000\n  swap1\n  dup5\n  add\n  mstore\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  dup2\n  mload\n    /* \"DividendPayingToken.sol\":2613:2704  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {... */\n  swap2\n  swap3\n  swap2\n  dup4\n  swap2\n  dup4\n  swap2\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  tag_7\n  swap2\n    /* \"ERC20.sol\":2006:2011  _name */\n  0x03\n  swap2\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"ERC20.sol\":2029:2036  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"Ownable.sol\":372:389  address msgSender */\n  0x00\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  tag_11\n    /* \"Ownable.sol\":392:402  _msgSender */\n  shl(0x20, tag_12)\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"Ownable.sol\":414:420  _owner */\n  0x05\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n  pop\n  pop\n    /* \"MONEYAVAXDividendTracker.sol\":1149:1153  3600 */\n  0x0e10\n    /* \"MONEYAVAXDividendTracker.sol\":1137:1146  claimWait */\n  0x11\n    /* \"MONEYAVAXDividendTracker.sol\":1137:1153  claimWait = 3600 */\n  sstore\n  pop\n    /* \"MONEYAVAXDividendTracker.sol\":1197:1214  200000 * (10**18) */\n  0x2a5a058fc295ed000000\n    /* \"MONEYAVAXDividendTracker.sol\":1163:1214  minimumTokenBalanceForDividends = 200000 * (10**18) */\n  0xa0\n  mstore\n    /* \"MONEYAVAXDividendTracker.sol\":319:6790  contract MONEYAVAXDividendTracker is Ownable, DividendPayingToken {... */\n  jump(tag_15)\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"Context.sol\":665:675  msg.sender */\n  caller\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"MONEYAVAXDividendTracker.sol\":319:6790  contract MONEYAVAXDividendTracker is Ownable, DividendPayingToken {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_18:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_19)\ntag_20:\n  pop\n  tag_21\n  swap3\n  swap2\n  pop\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_23)\ntag_15:\n  shr(0x60, mload(0x80))\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0xd188a1da6d6dfc972f5d1614b9a5ea681202f643e26bdaa8898fb08d79dc84fc\")\n  assignImmutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"MONEYAVAXDividendTracker.sol\":319:6790  contract MONEYAVAXDividendTracker is Ownable, DividendPayingToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85a6b3ae\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xbc4c4b37\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xe7841ec0\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xe7841ec0\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe98030c7\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xfbcbc0f1\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xffb2c479\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xbc4c4b37\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xbe10b614\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe30443bc\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xa457c2d7\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa8b9d240\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xaafd847a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xba72a955\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x85a6b3ae\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x91b89fba\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x31e79db0\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x5183d6fd\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x5183d6fd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6a474002\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6f2789ec\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x31e79db0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4ca6ef28\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4e7b827f\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x226cfa3d\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x226cfa3d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x27ce0147\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3009a609\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x09bbedde\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_48:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_48)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_51:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_54\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"MONEYAVAXDividendTracker.sol\":2422:2539  function getNumberOfTokenHolders() external view returns(uint256) {... */\n    tag_5:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_55\n      tag_58\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":659:709  mapping (address => uint256) public lastClaimTimes */\n    tag_7:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_61\n      jump\t// in\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_67\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":558:591  uint256 public lastProcessedIndex */\n    tag_10:\n      tag_55\n      tag_69\n      jump\t// in\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"MONEYAVAXDividendTracker.sol\":1603:1878  function excludeFromDividends(address account) external onlyOwner {... */\n    tag_12:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_77\n      jump\t// in\n        /* \"DividendPayingToken.sol\":1099:1182  address public immutable CAKE = address(0xB6076C93701D6a07266c31066B298AeC6dd65c2d) */\n    tag_14:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"MONEYAVAXDividendTracker.sol\":598:652  mapping (address => bool) public excludedFromDividends */\n    tag_15:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_82\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":4180:4668  function getAccountAtIndex(uint256 index)... */\n    tag_16:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      calldataload\n      tag_85\n      jump\t// in\n    tag_83:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap10\n      and\n      dup10\n      mstore\n      0x20\n      dup10\n      add\n      swap8\n      swap1\n      swap8\n      mstore\n      dup8\n      dup8\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0x60\n      dup8\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x80\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xa0\n      dup6\n      add\n      mstore\n      0xc0\n      dup5\n      add\n      mstore\n      0xe0\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x0100\n      add\n      swap1\n      return\n        /* \"MONEYAVAXDividendTracker.sol\":1407:1597  function withdrawDividend() public override {... */\n    tag_17:\n      tag_72\n      tag_87\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":716:740  uint256 public claimWait */\n    tag_18:\n      tag_55\n      tag_89\n      jump\t// in\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_19:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_92\n      jump\t// in\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      tag_72\n      tag_94\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2568:2608  uint256 public totalDividendsDistributed */\n    tag_21:\n      tag_55\n      tag_96\n      jump\t// in\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_22:\n      tag_78\n      tag_98\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4325:4447  function dividendOf(address _owner) public view override returns(uint256) {... */\n    tag_23:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_101\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_24:\n      tag_46\n      tag_103\n      jump\t// in\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_25:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_110\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4653:4819  function withdrawableDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_26:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_113\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_116\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_28:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_119\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n    tag_29:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      calldataload\n      tag_122\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":6455:6788  function processAccount(address payable account, bool automatic) public onlyOwner returns (bool) {... */\n    tag_30:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_125\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":746:802  uint256 public immutable minimumTokenBalanceForDividends */\n    tag_31:\n      tag_55\n      tag_127\n      jump\t// in\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_32:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_130\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":4893:5338  function setBalance(address payable account, uint256 newBalance) external onlyOwner {... */\n    tag_33:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_133\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":2313:2416  function getLastProcessedIndex() external view returns(uint256) {... */\n    tag_34:\n      tag_55\n      tag_135\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":1884:2307  function updateClaimWait(uint256 newClaimWait) external onlyOwner {... */\n    tag_35:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      calldataload\n      tag_138\n      jump\t// in\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_141\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":2547:4174  function getAccount(address _account)... */\n    tag_37:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_144\n      jump\t// in\n        /* \"MONEYAVAXDividendTracker.sol\":5344:6449  function process(uint256 gas) public returns (uint256, uint256, uint256) {... */\n    tag_38:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      calldataload\n      tag_147\n      jump\t// in\n    tag_145:\n      0x40\n      dup1\n      mload\n      swap4\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      dup3\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_47:\n        /* \"ERC20.sol\":2204:2209  _name */\n      0x03\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2172:2185  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2197:2209  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2204:2209  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2204:2209  _name */\n      dup3\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup3\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_54:\n        /* \"ERC20.sol\":4298:4302  bool */\n      0x00\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      tag_153\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      tag_154\n        /* \"ERC20.sol\":4323:4333  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"ERC20.sol\":4337:4344  spender */\n      dup5\n        /* \"ERC20.sol\":4346:4352  amount */\n      dup5\n        /* \"ERC20.sol\":4314:4322  _approve */\n      tag_156\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_153:\n      pop\n        /* \"ERC20.sol\":4370:4374  true */\n      0x01\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_152:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":2422:2539  function getNumberOfTokenHolders() external view returns(uint256) {... */\n    tag_56:\n        /* \"MONEYAVAXDividendTracker.sol\":2505:2520  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":2505:2532  tokenHoldersMap.keys.length */\n      sload\n        /* \"MONEYAVAXDividendTracker.sol\":2422:2539  function getNumberOfTokenHolders() external view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_58:\n        /* \"ERC20.sol\":3293:3305  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":659:709  mapping (address => uint256) public lastClaimTimes */\n    tag_61:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_64:\n        /* \"ERC20.sol\":4984:4988  bool */\n      0x00\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      tag_160\n        /* \"ERC20.sol\":5010:5016  sender */\n      dup5\n        /* \"ERC20.sol\":5018:5027  recipient */\n      dup5\n        /* \"ERC20.sol\":5029:5035  amount */\n      dup5\n        /* \"ERC20.sol\":5000:5009  _transfer */\n      tag_161\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_160:\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_162\n        /* \"ERC20.sol\":5055:5061  sender */\n      dup5\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      tag_163\n        /* \"ERC20.sol\":5063:5073  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_164\n        /* \"ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5077:5088  _allowances */\n      0x01\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      tag_165\n        /* \"ERC20.sol\":5097:5107  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5077:5110  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5077:5114  _allowances[sender][_msgSender()].sub */\n      tag_166\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_164:\n        /* \"ERC20.sol\":5046:5054  _approve */\n      tag_156\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_162:\n      pop\n        /* \"ERC20.sol\":5184:5188  true */\n      0x01\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":5664:5671  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5761:5789  magnifiedDividendCorrections */\n      0x07\n        /* \"DividendPayingToken.sol\":5761:5797  magnifiedDividendCorrections[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":1492:1498  2**128 */\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5814  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_168\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5798  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_169\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5749  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      tag_170\n        /* \"DividendPayingToken.sol\":5686:5734  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      tag_171\n        /* \"DividendPayingToken.sol\":5716:5733  balanceOf(_owner) */\n      tag_172\n        /* \"DividendPayingToken.sol\":5790:5796  _owner */\n      dup9\n        /* \"DividendPayingToken.sol\":5716:5725  balanceOf */\n      tag_92\n        /* \"DividendPayingToken.sol\":5716:5733  balanceOf(_owner) */\n      jump\t// in\n    tag_172:\n        /* \"DividendPayingToken.sol\":5686:5711  magnifiedDividendPerShare */\n      sload(0x06)\n      swap1\n        /* \"DividendPayingToken.sol\":5686:5715  magnifiedDividendPerShare.mul */\n      tag_173\n        /* \"DividendPayingToken.sol\":5686:5734  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      jump\t// in\n    tag_171:\n        /* \"DividendPayingToken.sol\":5686:5747  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe */\n      tag_174\n        /* \"DividendPayingToken.sol\":5686:5749  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      jump\t// in\n    tag_170:\n        /* \"DividendPayingToken.sol\":5686:5760  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap1\n      tag_175\n        /* \"DividendPayingToken.sol\":5686:5798  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      jump\t// in\n    tag_169:\n        /* \"DividendPayingToken.sol\":5686:5812  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      tag_176\n        /* \"DividendPayingToken.sol\":5686:5814  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      jump\t// in\n    tag_168:\n        /* \"DividendPayingToken.sol\":5686:5826  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      dup2\n      tag_177\n      jumpi\n      invalid\n    tag_177:\n      div\n        /* \"DividendPayingToken.sol\":5679:5826  return magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()... */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":5587:5831  function accumulativeDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_167:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":558:591  uint256 public lastProcessedIndex */\n    tag_69:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_71:\n        /* \"ERC20.sol\":3137:3139  18 */\n      0x12\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":1603:1878  function excludeFromDividends(address account) external onlyOwner {... */\n    tag_74:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_180\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_155\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MONEYAVAXDividendTracker.sol\":1685:1715  excludedFromDividends[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":1685:1706  excludedFromDividends */\n      0x0f\n        /* \"MONEYAVAXDividendTracker.sol\":1685:1715  excludedFromDividends[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MONEYAVAXDividendTracker.sol\":1684:1715  !excludedFromDividends[account] */\n      iszero\n        /* \"MONEYAVAXDividendTracker.sol\":1676:1716  require(!excludedFromDividends[account]) */\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MONEYAVAXDividendTracker.sol\":1723:1753  excludedFromDividends[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":1723:1744  excludedFromDividends */\n      0x0f\n        /* \"MONEYAVAXDividendTracker.sol\":1723:1753  excludedFromDividends[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MONEYAVAXDividendTracker.sol\":1723:1760  excludedFromDividends[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"MONEYAVAXDividendTracker.sol\":1756:1760  true */\n      0x01\n        /* \"MONEYAVAXDividendTracker.sol\":1723:1760  excludedFromDividends[account] = true */\n      or\n      swap1\n      sstore\n        /* \"MONEYAVAXDividendTracker.sol\":1768:1791  _setBalance(account, 0) */\n      tag_184\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":1745:1752  account */\n      dup3\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":1768:1779  _setBalance */\n      tag_185\n        /* \"MONEYAVAXDividendTracker.sol\":1768:1791  _setBalance(account, 0) */\n      jump\t// in\n    tag_184:\n        /* \"MONEYAVAXDividendTracker.sol\":1798:1829  tokenHoldersMap.remove(account) */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x131836e7)\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":1798:1813  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":1798:1829  tokenHoldersMap.remove(account) */\n      0x04\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"MONEYAVAXDividendTracker.sol\":1798:1820  tokenHoldersMap.remove */\n      linkerSymbol(\"b5c84be7e522c98c303ad318c067b85931f000aa9a34df2830aaa4d6a5bd48d3\")\n      swap2\n      0x4c60db9c\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":1798:1829  tokenHoldersMap.remove(account) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n      0x00\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":1798:1820  tokenHoldersMap.remove */\n      dup7\n        /* \"MONEYAVAXDividendTracker.sol\":1798:1829  tokenHoldersMap.remove(account) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":1842:1871  ExcludeFromDividends(account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap3\n      pop\n      0xa878b31040b2e6d0a9a3d3361209db3908ba62014b0dca52adbaee451d128b25\n      swap2\n      pop\n      0x00\n      swap1\n      log2\n        /* \"MONEYAVAXDividendTracker.sol\":1603:1878  function excludeFromDividends(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_77:\n        /* \"ERC20.sol\":5678:5682  bool */\n      0x00\n        /* \"ERC20.sol\":5694:5777  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_153\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      tag_191\n        /* \"ERC20.sol\":5703:5713  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"ERC20.sol\":5717:5724  spender */\n      dup5\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_164\n        /* \"ERC20.sol\":5765:5775  addedValue */\n      dup6\n        /* \"ERC20.sol\":5726:5737  _allowances */\n      0x01\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      tag_193\n        /* \"ERC20.sol\":5738:5748  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      jump\t// in\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5726:5760  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5726:5764  _allowances[_msgSender()][spender].add */\n      tag_194\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":1099:1182  address public immutable CAKE = address(0xB6076C93701D6a07266c31066B298AeC6dd65c2d) */\n    tag_79:\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      dup2\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":598:652  mapping (address => bool) public excludedFromDividends */\n    tag_82:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":4180:4668  function getAccountAtIndex(uint256 index)... */\n    tag_85:\n        /* \"MONEYAVAXDividendTracker.sol\":4264:4271  address */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":4285:4291  int256 */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":4305:4311  int256 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":4325:4332  uint256 */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":4346:4353  uint256 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":4367:4374  uint256 */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":4388:4395  uint256 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":4409:4416  uint256 */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":4437:4452  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":4437:4457  tokenHoldersMap.size */\n      linkerSymbol(\"b5c84be7e522c98c303ad318c067b85931f000aa9a34df2830aaa4d6a5bd48d3\")\n      0xdeb3d896\n      swap1\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":4437:4459  tokenHoldersMap.size() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      mload\n        /* \"MONEYAVAXDividendTracker.sol\":4428:4459  index >= tokenHoldersMap.size() */\n      dup10\n      lt\n        /* \"MONEYAVAXDividendTracker.sol\":4425:4560  if(index >= tokenHoldersMap.size()) {... */\n      tag_200\n      jumpi\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":4483:4525  0x0000000000000000000000000000000000000000 */\n      0x00\n      swap7\n      pop\n      not(0x00)\n        /* \"MONEYAVAXDividendTracker.sol\":4527:4529  -1 */\n      swap6\n      pop\n      dup6\n      swap5\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":4483:4525  0x0000000000000000000000000000000000000000 */\n      dup7\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup3\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":4475:4549  return (0x0000000000000000000000000000000000000000, -1, -1, 0, 0, 0, 0, 0) */\n      jump(tag_195)\n        /* \"MONEYAVAXDividendTracker.sol\":4425:4560  if(index >= tokenHoldersMap.size()) {... */\n    tag_200:\n        /* \"MONEYAVAXDividendTracker.sol\":4570:4585  address account */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":4588:4603  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":4588:4617  tokenHoldersMap.getKeyAtIndex */\n      linkerSymbol(\"b5c84be7e522c98c303ad318c067b85931f000aa9a34df2830aaa4d6a5bd48d3\")\n      0xd1aa9e7e\n      swap1\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":4618:4623  index */\n      dup13\n        /* \"MONEYAVAXDividendTracker.sol\":4588:4624  tokenHoldersMap.getKeyAtIndex(index) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      mload\n      swap1\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":4642:4661  getAccount(account) */\n      tag_205\n        /* \"MONEYAVAXDividendTracker.sol\":4588:4624  tokenHoldersMap.getKeyAtIndex(index) */\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":4642:4652  getAccount */\n      tag_144\n        /* \"MONEYAVAXDividendTracker.sol\":4642:4661  getAccount(account) */\n      jump\t// in\n    tag_205:\n        /* \"MONEYAVAXDividendTracker.sol\":4635:4661  return getAccount(account) */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":4180:4668  function getAccountAtIndex(uint256 index)... */\n    tag_195:\n      swap2\n      swap4\n      swap6\n      swap8\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":1407:1597  function withdrawDividend() public override {... */\n    tag_87:\n        /* \"MONEYAVAXDividendTracker.sol\":1461:1590  require(false, \"MONEYAVAX_Dividend_Tracker: withdrawDividend disabled. Use the 'claim' function on the main MONEYAVAX contract.\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x6f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c615061e29940b7a365b4fa13ab29a516e98be4c6c3d2f44713e16d490a2393f\n      0x6f\n      swap2\n      codecopy\n      0x80\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"MONEYAVAXDividendTracker.sol\":716:740  uint256 public claimWait */\n    tag_89:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      and\n        /* \"ERC20.sol\":3444:3451  uint256 */\n      0x00\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_94:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_210\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_155\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_211\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_211:\n        /* \"Ownable.sol\":1286:1292  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"Ownable.sol\":1302:1303  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1286:1292  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1302:1303  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1315:1321  _owner */\n      0x05\n        /* \"Ownable.sol\":1315:1334  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2568:2608  uint256 public totalDividendsDistributed */\n    tag_96:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_98:\n        /* \"Ownable.sol\":637:643  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"DividendPayingToken.sol\":4325:4447  function dividendOf(address _owner) public view override returns(uint256) {... */\n    tag_101:\n        /* \"DividendPayingToken.sol\":4390:4397  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4412:4442  withdrawableDividendOf(_owner) */\n      tag_152\n        /* \"DividendPayingToken.sol\":4435:4441  _owner */\n      dup3\n        /* \"DividendPayingToken.sol\":4412:4434  withdrawableDividendOf */\n      tag_113\n        /* \"DividendPayingToken.sol\":4412:4442  withdrawableDividendOf(_owner) */\n      jump\t// in\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_103:\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      0x04\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2385:2398  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      dup3\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_110:\n        /* \"ERC20.sol\":6385:6389  bool */\n      0x00\n        /* \"ERC20.sol\":6401:6530  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_153\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      tag_222\n        /* \"ERC20.sol\":6410:6420  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"ERC20.sol\":6424:6431  spender */\n      dup5\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_164\n        /* \"ERC20.sol\":6472:6487  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6433:6444  _allowances */\n      0x01\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      tag_224\n        /* \"ERC20.sol\":6445:6455  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6433:6467  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6433:6471  _allowances[_msgSender()][spender].sub */\n      tag_166\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4653:4819  function withdrawableDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":4730:4737  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":4787:4805  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":4787:4813  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":4752:4814  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      tag_152\n      swap1\n        /* \"DividendPayingToken.sol\":4752:4782  accumulativeDividendOf(_owner) */\n      tag_227\n        /* \"DividendPayingToken.sol\":4806:4812  _owner */\n      dup5\n        /* \"DividendPayingToken.sol\":4752:4774  accumulativeDividendOf */\n      tag_67\n        /* \"DividendPayingToken.sol\":4752:4782  accumulativeDividendOf(_owner) */\n      jump\t// in\n    tag_227:\n        /* \"DividendPayingToken.sol\":4752:4786  accumulativeDividendOf(_owner).sub */\n      swap1\n      tag_228\n        /* \"DividendPayingToken.sol\":4752:4814  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      jump\t// in\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_116:\n        /* \"ERC20.sol\":3784:3788  bool */\n      0x00\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      tag_153\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      tag_231\n        /* \"ERC20.sol\":3810:3820  _msgSender */\n      tag_155\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"ERC20.sol\":3824:3833  recipient */\n      dup5\n        /* \"ERC20.sol\":3835:3841  amount */\n      dup5\n        /* \"ERC20.sol\":3800:3809  _transfer */\n      tag_161\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      and\n        /* \"DividendPayingToken.sol\":5101:5108  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5123:5141  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":5123:5149  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DividendPayingToken.sol\":5027:5154  function withdrawnDividendOf(address _owner) public view override returns(uint256) {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n    tag_122:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_234\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_155\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_235\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_235:\n        /* \"DividendPayingToken.sol\":2804:2805  0 */\n      0x00\n        /* \"DividendPayingToken.sol\":2788:2801  totalSupply() */\n      tag_237\n        /* \"DividendPayingToken.sol\":2788:2799  totalSupply */\n      tag_58\n        /* \"DividendPayingToken.sol\":2788:2801  totalSupply() */\n      jump\t// in\n    tag_237:\n        /* \"DividendPayingToken.sol\":2788:2805  totalSupply() > 0 */\n      gt\n        /* \"DividendPayingToken.sol\":2780:2806  require(totalSupply() > 0) */\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n        /* \"DividendPayingToken.sol\":2817:2827  amount > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":2813:3085  if (amount > 0) {... */\n      tag_239\n      jumpi\n        /* \"DividendPayingToken.sol\":2865:2951  magnifiedDividendPerShare.add(... */\n      tag_240\n        /* \"DividendPayingToken.sol\":2930:2943  totalSupply() */\n      tag_241\n        /* \"DividendPayingToken.sol\":2930:2941  totalSupply */\n      tag_58\n        /* \"DividendPayingToken.sol\":2930:2943  totalSupply() */\n      jump\t// in\n    tag_241:\n        /* \"DividendPayingToken.sol\":2904:2927  (amount).mul(magnitude) */\n      tag_242\n        /* \"DividendPayingToken.sol\":2905:2911  amount */\n      dup4\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":2904:2916  (amount).mul */\n      tag_173\n        /* \"DividendPayingToken.sol\":2904:2927  (amount).mul(magnitude) */\n      jump\t// in\n    tag_242:\n        /* \"DividendPayingToken.sol\":2904:2943  (amount).mul(magnitude) / totalSupply() */\n      dup2\n      tag_243\n      jumpi\n      invalid\n    tag_243:\n        /* \"DividendPayingToken.sol\":2865:2890  magnifiedDividendPerShare */\n      sload(0x06)\n      swap2\n        /* \"DividendPayingToken.sol\":2904:2943  (amount).mul(magnitude) / totalSupply() */\n      swap1\n      div\n        /* \"DividendPayingToken.sol\":2865:2894  magnifiedDividendPerShare.add */\n      tag_194\n        /* \"DividendPayingToken.sol\":2865:2951  magnifiedDividendPerShare.add(... */\n      jump\t// in\n    tag_240:\n        /* \"DividendPayingToken.sol\":2837:2862  magnifiedDividendPerShare */\n      0x06\n        /* \"DividendPayingToken.sol\":2837:2951  magnifiedDividendPerShare = magnifiedDividendPerShare.add(... */\n      sstore\n        /* \"DividendPayingToken.sol\":2964:3004  DividendsDistributed(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":2985:2995  msg.sender */\n      caller\n      swap2\n        /* \"DividendPayingToken.sol\":2964:3004  DividendsDistributed(msg.sender, amount) */\n      0xa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":3041:3066  totalDividendsDistributed */\n      sload(0x09)\n        /* \"DividendPayingToken.sol\":3041:3078  totalDividendsDistributed.add(amount) */\n      tag_244\n      swap1\n        /* \"DividendPayingToken.sol\":3071:3077  amount */\n      dup3\n        /* \"DividendPayingToken.sol\":3041:3070  totalDividendsDistributed.add */\n      tag_194\n        /* \"DividendPayingToken.sol\":3041:3078  totalDividendsDistributed.add(amount) */\n      jump\t// in\n    tag_244:\n        /* \"DividendPayingToken.sol\":3013:3038  totalDividendsDistributed */\n      0x09\n        /* \"DividendPayingToken.sol\":3013:3078  totalDividendsDistributed = totalDividendsDistributed.add(amount) */\n      sstore\n        /* \"DividendPayingToken.sol\":2813:3085  if (amount > 0) {... */\n    tag_239:\n        /* \"DividendPayingToken.sol\":2709:3089  function distributeCAKEDividends(uint256 amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":6455:6788  function processAccount(address payable account, bool automatic) public onlyOwner returns (bool) {... */\n    tag_125:\n        /* \"MONEYAVAXDividendTracker.sol\":6546:6550  bool */\n      0x00\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_246\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_155\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_247\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_247:\n        /* \"MONEYAVAXDividendTracker.sol\":6562:6576  uint256 amount */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":6579:6611  _withdrawDividendOfUser(account) */\n      tag_249\n        /* \"MONEYAVAXDividendTracker.sol\":6603:6610  account */\n      dup5\n        /* \"MONEYAVAXDividendTracker.sol\":6579:6602  _withdrawDividendOfUser */\n      tag_250\n        /* \"MONEYAVAXDividendTracker.sol\":6579:6611  _withdrawDividendOfUser(account) */\n      jump\t// in\n    tag_249:\n        /* \"MONEYAVAXDividendTracker.sol\":6562:6611  uint256 amount = _withdrawDividendOfUser(account) */\n      swap1\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":6622:6632  amount > 0 */\n      dup1\n      iszero\n        /* \"MONEYAVAXDividendTracker.sol\":6619:6762  if(amount > 0) {... */\n      tag_251\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MONEYAVAXDividendTracker.sol\":6642:6665  lastClaimTimes[account] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":6642:6656  lastClaimTimes */\n      0x10\n        /* \"MONEYAVAXDividendTracker.sol\":6642:6665  lastClaimTimes[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"MONEYAVAXDividendTracker.sol\":6668:6683  block.timestamp */\n      timestamp\n        /* \"MONEYAVAXDividendTracker.sol\":6642:6683  lastClaimTimes[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"MONEYAVAXDividendTracker.sol\":6702:6735  Claim(account, amount, automatic) */\n      dup2\n      mload\n      dup5\n      dup2\n      mstore\n      swap2\n      mload\n      dup7\n      iszero\n      iszero\n      swap4\n        /* \"MONEYAVAXDividendTracker.sol\":6642:6665  lastClaimTimes[account] */\n      swap3\n        /* \"MONEYAVAXDividendTracker.sol\":6702:6735  Claim(account, amount, automatic) */\n      0xa2c38e2d2fb7e3e1912d937fd1ca11ed6d51864dee4cfa7a7bf02becd7acf092\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"MONEYAVAXDividendTracker.sol\":6750:6754  true */\n      0x01\n        /* \"MONEYAVAXDividendTracker.sol\":6743:6754  return true */\n      swap2\n      pop\n      pop\n      jump(tag_152)\n        /* \"MONEYAVAXDividendTracker.sol\":6619:6762  if(amount > 0) {... */\n    tag_251:\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":6776:6781  false */\n      0x00\n      swap4\n        /* \"MONEYAVAXDividendTracker.sol\":6455:6788  function processAccount(address payable account, bool automatic) public onlyOwner returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":746:802  uint256 public immutable minimumTokenBalanceForDividends */\n    tag_127:\n      immutable(\"0xd188a1da6d6dfc972f5d1614b9a5ea681202f643e26bdaa8898fb08d79dc84fc\")\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4017:4024  uint256 */\n      0x00\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4043:4054  _allowances */\n      0x01\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4043:4070  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":4893:5338  function setBalance(address payable account, uint256 newBalance) external onlyOwner {... */\n    tag_133:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_254\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_155\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_255\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MONEYAVAXDividendTracker.sol\":4987:5017  excludedFromDividends[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":4987:5008  excludedFromDividends */\n      0x0f\n        /* \"MONEYAVAXDividendTracker.sol\":4987:5017  excludedFromDividends[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MONEYAVAXDividendTracker.sol\":4984:5041  if(excludedFromDividends[account]) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":5027:5034  return; */\n      jump(tag_256)\n        /* \"MONEYAVAXDividendTracker.sol\":4984:5041  if(excludedFromDividends[account]) {... */\n    tag_257:\n        /* \"MONEYAVAXDividendTracker.sol\":5065:5096  minimumTokenBalanceForDividends */\n      immutable(\"0xd188a1da6d6dfc972f5d1614b9a5ea681202f643e26bdaa8898fb08d79dc84fc\")\n        /* \"MONEYAVAXDividendTracker.sol\":5051:5061  newBalance */\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":5051:5096  newBalance >= minimumTokenBalanceForDividends */\n      lt\n        /* \"MONEYAVAXDividendTracker.sol\":5048:5295  if(newBalance >= minimumTokenBalanceForDividends) {... */\n      tag_258\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":5112:5144  _setBalance(account, newBalance) */\n      tag_259\n        /* \"MONEYAVAXDividendTracker.sol\":5124:5131  account */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":5133:5143  newBalance */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":5112:5123  _setBalance */\n      tag_185\n        /* \"MONEYAVAXDividendTracker.sol\":5112:5144  _setBalance(account, newBalance) */\n      jump\t// in\n    tag_259:\n        /* \"MONEYAVAXDividendTracker.sol\":5152:5192  tokenHoldersMap.set(account, newBalance) */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x2f0ad017)\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":5152:5167  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":5152:5192  tokenHoldersMap.set(account, newBalance) */\n      0x04\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"MONEYAVAXDividendTracker.sol\":5152:5171  tokenHoldersMap.set */\n      linkerSymbol(\"b5c84be7e522c98c303ad318c067b85931f000aa9a34df2830aaa4d6a5bd48d3\")\n      swap2\n      0xbc2b405c\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":5152:5192  tokenHoldersMap.set(account, newBalance) */\n      0x64\n      dup1\n      dup4\n      add\n      swap3\n      0x00\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":5152:5171  tokenHoldersMap.set */\n      dup7\n        /* \"MONEYAVAXDividendTracker.sol\":5152:5192  tokenHoldersMap.set(account, newBalance) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5048:5295  if(newBalance >= minimumTokenBalanceForDividends) {... */\n      jump(tag_263)\n    tag_258:\n        /* \"MONEYAVAXDividendTracker.sol\":5225:5248  _setBalance(account, 0) */\n      tag_264\n        /* \"MONEYAVAXDividendTracker.sol\":5237:5244  account */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":5246:5247  0 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":5225:5236  _setBalance */\n      tag_185\n        /* \"MONEYAVAXDividendTracker.sol\":5225:5248  _setBalance(account, 0) */\n      jump\t// in\n    tag_264:\n        /* \"MONEYAVAXDividendTracker.sol\":5256:5287  tokenHoldersMap.remove(account) */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x131836e7)\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":5256:5271  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":5256:5287  tokenHoldersMap.remove(account) */\n      0x04\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"MONEYAVAXDividendTracker.sol\":5256:5278  tokenHoldersMap.remove */\n      linkerSymbol(\"b5c84be7e522c98c303ad318c067b85931f000aa9a34df2830aaa4d6a5bd48d3\")\n      swap2\n      0x4c60db9c\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":5256:5287  tokenHoldersMap.remove(account) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n      0x00\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":5256:5278  tokenHoldersMap.remove */\n      dup7\n        /* \"MONEYAVAXDividendTracker.sol\":5256:5287  tokenHoldersMap.remove(account) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5048:5295  if(newBalance >= minimumTokenBalanceForDividends) {... */\n    tag_263:\n        /* \"MONEYAVAXDividendTracker.sol\":5302:5331  processAccount(account, true) */\n      tag_268\n        /* \"MONEYAVAXDividendTracker.sol\":5317:5324  account */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":5326:5330  true */\n      0x01\n        /* \"MONEYAVAXDividendTracker.sol\":5302:5316  processAccount */\n      tag_125\n        /* \"MONEYAVAXDividendTracker.sol\":5302:5331  processAccount(account, true) */\n      jump\t// in\n    tag_268:\n      pop\n        /* \"Ownable.sol\":846:847  _ */\n    tag_256:\n        /* \"MONEYAVAXDividendTracker.sol\":4893:5338  function setBalance(address payable account, uint256 newBalance) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":2313:2416  function getLastProcessedIndex() external view returns(uint256) {... */\n    tag_135:\n        /* \"MONEYAVAXDividendTracker.sol\":2391:2409  lastProcessedIndex */\n      sload(0x0e)\n        /* \"MONEYAVAXDividendTracker.sol\":2313:2416  function getLastProcessedIndex() external view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":1884:2307  function updateClaimWait(uint256 newClaimWait) external onlyOwner {... */\n    tag_138:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_271\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_155\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_272\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_272:\n        /* \"MONEYAVAXDividendTracker.sol\":1984:1988  3600 */\n      0x0e10\n        /* \"MONEYAVAXDividendTracker.sol\":1968:1980  newClaimWait */\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":1968:1988  newClaimWait >= 3600 */\n      lt\n      iszero\n        /* \"MONEYAVAXDividendTracker.sol\":1968:2013  newClaimWait >= 3600 && newClaimWait <= 86400 */\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":2008:2013  86400 */\n      0x015180\n        /* \"MONEYAVAXDividendTracker.sol\":1992:2004  newClaimWait */\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":1992:2013  newClaimWait <= 86400 */\n      gt\n      iszero\n        /* \"MONEYAVAXDividendTracker.sol\":1968:2013  newClaimWait >= 3600 && newClaimWait <= 86400 */\n    tag_274:\n        /* \"MONEYAVAXDividendTracker.sol\":1960:2097  require(newClaimWait >= 3600 && newClaimWait <= 86400, \"MONEYAVAX_Dividend_Tracker: claimWait must be updated to between 1 and 24 hours\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x4f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4d2f405a35ca6c83b74bbde3a75785f77c58df6f366c6c72c07716bd11b48b44\n      0x4f\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"MONEYAVAXDividendTracker.sol\":2131:2140  claimWait */\n      sload(0x11)\n        /* \"MONEYAVAXDividendTracker.sol\":2115:2127  newClaimWait */\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":2115:2140  newClaimWait != claimWait */\n      eq\n      iszero\n        /* \"MONEYAVAXDividendTracker.sol\":2107:2210  require(newClaimWait != claimWait, \"MONEYAVAX_Dividend_Tracker: Cannot update claimWait to same value\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x41\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_942c29fdcdc1c6c74273047a896f52dec5ef9bd1fdd2acaf85c319d066f5abc6\n      0x41\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"MONEYAVAXDividendTracker.sol\":2256:2265  claimWait */\n      sload(0x11)\n        /* \"MONEYAVAXDividendTracker.sol\":2225:2266  ClaimWaitUpdated(newClaimWait, claimWait) */\n      mload(0x40)\n        /* \"MONEYAVAXDividendTracker.sol\":2242:2254  newClaimWait */\n      dup3\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":2225:2266  ClaimWaitUpdated(newClaimWait, claimWait) */\n      0x474ea64804364a1e29a4487ddb63c3342a2dd826ccd8acf48825e680a0e6f20f\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"MONEYAVAXDividendTracker.sol\":2276:2285  claimWait */\n      0x11\n        /* \"MONEYAVAXDividendTracker.sol\":2276:2300  claimWait = newClaimWait */\n      sstore\n        /* \"MONEYAVAXDividendTracker.sol\":1884:2307  function updateClaimWait(uint256 newClaimWait) external onlyOwner {... */\n      jump\t// out\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_141:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_278\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_155\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_279\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1578:1600  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":1570:1643  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"Ownable.sol\":1679:1685  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"Ownable.sol\":1679:1685  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1679:1685  _owner */\n      0x00\n      swap1\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"Ownable.sol\":1706:1712  _owner */\n      0x05\n        /* \"Ownable.sol\":1706:1723  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":2547:4174  function getAccount(address _account)... */\n    tag_144:\n        /* \"MONEYAVAXDividendTracker.sol\":2627:2642  address account */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":2656:2668  int256 index */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":2682:2713  int256 iterationsUntilProcessed */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":2727:2756  uint256 withdrawableDividends */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":2770:2792  uint256 totalDividends */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":2806:2827  uint256 lastClaimTime */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":2841:2862  uint256 nextClaimTime */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":2876:2914  uint256 secondsUntilAutoClaimAvailable */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":2936:2944  _account */\n      dup9\n        /* \"MONEYAVAXDividendTracker.sol\":2926:2944  account = _account */\n      swap8\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":2963:2978  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":2963:2992  tokenHoldersMap.getIndexOfKey */\n      linkerSymbol(\"b5c84be7e522c98c303ad318c067b85931f000aa9a34df2830aaa4d6a5bd48d3\")\n      0x17e142d1\n      swap1\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":2993:3000  account */\n      dup11\n        /* \"MONEYAVAXDividendTracker.sol\":2963:3001  tokenHoldersMap.getIndexOfKey(account) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      pop\n      mload\n      swap7\n      pop\n      not(0x00)\n        /* \"MONEYAVAXDividendTracker.sol\":3039:3041  -1 */\n      swap6\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":3064:3065  0 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":3055:3065  index >= 0 */\n      dup8\n      slt\n        /* \"MONEYAVAXDividendTracker.sol\":3052:3622  if(index >= 0) {... */\n      tag_291\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":3101:3119  lastProcessedIndex */\n      sload(0x0e)\n        /* \"MONEYAVAXDividendTracker.sol\":3092:3097  index */\n      dup8\n        /* \"MONEYAVAXDividendTracker.sol\":3084:3119  uint256(index) > lastProcessedIndex */\n      gt\n        /* \"MONEYAVAXDividendTracker.sol\":3081:3612  if(uint256(index) > lastProcessedIndex) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":3183:3201  lastProcessedIndex */\n      sload(0x0e)\n        /* \"MONEYAVAXDividendTracker.sol\":3166:3203  index.sub(int256(lastProcessedIndex)) */\n      tag_289\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":3166:3171  index */\n      dup9\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":3166:3175  index.sub */\n      tag_290\n        /* \"MONEYAVAXDividendTracker.sol\":3166:3203  index.sub(int256(lastProcessedIndex)) */\n      jump\t// in\n    tag_289:\n        /* \"MONEYAVAXDividendTracker.sol\":3139:3203  iterationsUntilProcessed = index.sub(int256(lastProcessedIndex)) */\n      swap6\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":3081:3612  if(uint256(index) > lastProcessedIndex) {... */\n      jump(tag_291)\n    tag_288:\n        /* \"MONEYAVAXDividendTracker.sol\":3319:3337  lastProcessedIndex */\n      sload(0x0e)\n        /* \"MONEYAVAXDividendTracker.sol\":3289:3304  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":3289:3316  tokenHoldersMap.keys.length */\n      sload\n        /* \"MONEYAVAXDividendTracker.sol\":3254:3286  uint256 processesUntilEndOfArray */\n      0x00\n      swap2\n      lt\n        /* \"MONEYAVAXDividendTracker.sol\":3289:3507  tokenHoldersMap.keys.length > lastProcessedIndex ?... */\n      tag_292\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":3506:3507  0 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":3289:3507  tokenHoldersMap.keys.length > lastProcessedIndex ?... */\n      jump(tag_294)\n    tag_292:\n        /* \"MONEYAVAXDividendTracker.sol\":3428:3446  lastProcessedIndex */\n      sload(0x0e)\n        /* \"MONEYAVAXDividendTracker.sol\":3396:3411  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":3396:3423  tokenHoldersMap.keys.length */\n      sload\n        /* \"MONEYAVAXDividendTracker.sol\":3396:3447  tokenHoldersMap.keys.length.sub(lastProcessedIndex) */\n      tag_294\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":3396:3427  tokenHoldersMap.keys.length.sub */\n      tag_228\n        /* \"MONEYAVAXDividendTracker.sol\":3396:3447  tokenHoldersMap.keys.length.sub(lastProcessedIndex) */\n      jump\t// in\n    tag_294:\n        /* \"MONEYAVAXDividendTracker.sol\":3254:3507  uint256 processesUntilEndOfArray = tokenHoldersMap.keys.length > lastProcessedIndex ?... */\n      swap1\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":3554:3597  index.add(int256(processesUntilEndOfArray)) */\n      tag_295\n        /* \"MONEYAVAXDividendTracker.sol\":3554:3559  index */\n      dup9\n        /* \"MONEYAVAXDividendTracker.sol\":3254:3507  uint256 processesUntilEndOfArray = tokenHoldersMap.keys.length > lastProcessedIndex ?... */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":3554:3563  index.add */\n      tag_175\n        /* \"MONEYAVAXDividendTracker.sol\":3554:3597  index.add(int256(processesUntilEndOfArray)) */\n      jump\t// in\n    tag_295:\n        /* \"MONEYAVAXDividendTracker.sol\":3527:3597  iterationsUntilProcessed = index.add(int256(processesUntilEndOfArray)) */\n      swap7\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":3081:3612  if(uint256(index) > lastProcessedIndex) {... */\n      pop\n    tag_291:\n        /* \"MONEYAVAXDividendTracker.sol\":3657:3688  withdrawableDividendOf(account) */\n      tag_296\n        /* \"MONEYAVAXDividendTracker.sol\":3680:3687  account */\n      dup9\n        /* \"MONEYAVAXDividendTracker.sol\":3657:3679  withdrawableDividendOf */\n      tag_113\n        /* \"MONEYAVAXDividendTracker.sol\":3657:3688  withdrawableDividendOf(account) */\n      jump\t// in\n    tag_296:\n        /* \"MONEYAVAXDividendTracker.sol\":3633:3688  withdrawableDividends = withdrawableDividendOf(account) */\n      swap5\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":3715:3746  accumulativeDividendOf(account) */\n      tag_297\n        /* \"MONEYAVAXDividendTracker.sol\":3738:3745  account */\n      dup9\n        /* \"MONEYAVAXDividendTracker.sol\":3715:3737  accumulativeDividendOf */\n      tag_67\n        /* \"MONEYAVAXDividendTracker.sol\":3715:3746  accumulativeDividendOf(account) */\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MONEYAVAXDividendTracker.sol\":3773:3796  lastClaimTimes[account] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":3773:3787  lastClaimTimes */\n      0x10\n        /* \"MONEYAVAXDividendTracker.sol\":3773:3796  lastClaimTimes[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"MONEYAVAXDividendTracker.sol\":3698:3746  totalDividends = accumulativeDividendOf(account) */\n      swap1\n      swap5\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":3773:3796  lastClaimTimes[account] */\n      swap3\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":3823:3840  lastClaimTime > 0 */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":3823:3947  lastClaimTime > 0 ?... */\n      tag_298\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":3946:3947  0 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":3823:3947  lastClaimTime > 0 ?... */\n      jump(tag_300)\n    tag_298:\n        /* \"MONEYAVAXDividendTracker.sol\":3897:3906  claimWait */\n      sload(0x11)\n        /* \"MONEYAVAXDividendTracker.sol\":3879:3907  lastClaimTime.add(claimWait) */\n      tag_300\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":3879:3892  lastClaimTime */\n      dup5\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":3879:3896  lastClaimTime.add */\n      tag_194\n        /* \"MONEYAVAXDividendTracker.sol\":3879:3907  lastClaimTime.add(claimWait) */\n      jump\t// in\n    tag_300:\n        /* \"MONEYAVAXDividendTracker.sol\":3807:3947  nextClaimTime = lastClaimTime > 0 ?... */\n      swap2\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":4007:4022  block.timestamp */\n      timestamp\n        /* \"MONEYAVAXDividendTracker.sol\":3991:4004  nextClaimTime */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":3991:4022  nextClaimTime > block.timestamp */\n      gt\n        /* \"MONEYAVAXDividendTracker.sol\":3991:4167  nextClaimTime > block.timestamp ?... */\n      tag_301\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":4166:4167  0 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":3991:4167  nextClaimTime > block.timestamp ?... */\n      jump(tag_303)\n    tag_301:\n        /* \"MONEYAVAXDividendTracker.sol\":4077:4111  nextClaimTime.sub(block.timestamp) */\n      tag_303\n        /* \"MONEYAVAXDividendTracker.sol\":4077:4090  nextClaimTime */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":4095:4110  block.timestamp */\n      timestamp\n        /* \"MONEYAVAXDividendTracker.sol\":4077:4094  nextClaimTime.sub */\n      tag_228\n        /* \"MONEYAVAXDividendTracker.sol\":4077:4111  nextClaimTime.sub(block.timestamp) */\n      jump\t// in\n    tag_303:\n        /* \"MONEYAVAXDividendTracker.sol\":3958:4167  secondsUntilAutoClaimAvailable = nextClaimTime > block.timestamp ?... */\n      swap1\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":2547:4174  function getAccount(address _account)... */\n      swap2\n      swap4\n      swap6\n      swap8\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":5344:6449  function process(uint256 gas) public returns (uint256, uint256, uint256) {... */\n    tag_147:\n        /* \"MONEYAVAXDividendTracker.sol\":5455:5470  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":5455:5482  tokenHoldersMap.keys.length */\n      sload\n        /* \"MONEYAVAXDividendTracker.sol\":5390:5397  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":5493:5518  numberOfTokenHolders == 0 */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":5490:5569  if(numberOfTokenHolders == 0) {... */\n      tag_305\n      jumpi\n      pop\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5542:5560  lastProcessedIndex */\n      sload(0x0e)\n        /* \"MONEYAVAXDividendTracker.sol\":5536:5537  0 */\n      0x00\n      swap3\n      pop\n      dup3\n      swap2\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5528:5561  return (0, 0, lastProcessedIndex) */\n      jump(tag_304)\n        /* \"MONEYAVAXDividendTracker.sol\":5490:5569  if(numberOfTokenHolders == 0) {... */\n    tag_305:\n        /* \"MONEYAVAXDividendTracker.sol\":5606:5624  lastProcessedIndex */\n      sload(0x0e)\n        /* \"MONEYAVAXDividendTracker.sol\":5576:5603  uint256 _lastProcessedIndex */\n      0x00\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":5677:5686  gasleft() */\n      gas\n        /* \"MONEYAVAXDividendTracker.sol\":5659:5686  uint256 gasLeft = gasleft() */\n      swap1\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5694:5712  uint256 iterations */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":5723:5737  uint256 claims */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":5749:6340  while(gasUsed < gas && iterations < numberOfTokenHolders) {... */\n    tag_306:\n        /* \"MONEYAVAXDividendTracker.sol\":5765:5768  gas */\n      dup10\n        /* \"MONEYAVAXDividendTracker.sol\":5755:5762  gasUsed */\n      dup5\n        /* \"MONEYAVAXDividendTracker.sol\":5755:5768  gasUsed < gas */\n      lt\n        /* \"MONEYAVAXDividendTracker.sol\":5755:5805  gasUsed < gas && iterations < numberOfTokenHolders */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5785:5805  numberOfTokenHolders */\n      dup6\n        /* \"MONEYAVAXDividendTracker.sol\":5772:5782  iterations */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":5772:5805  iterations < numberOfTokenHolders */\n      lt\n        /* \"MONEYAVAXDividendTracker.sol\":5755:5805  gasUsed < gas && iterations < numberOfTokenHolders */\n    tag_308:\n        /* \"MONEYAVAXDividendTracker.sol\":5749:6340  while(gasUsed < gas && iterations < numberOfTokenHolders) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":5871:5886  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":5871:5898  tokenHoldersMap.keys.length */\n      sload\n        /* \"MONEYAVAXDividendTracker.sol\":5815:5836  _lastProcessedIndex++ */\n      0x01\n      swap1\n      swap6\n      add\n      swap5\n        /* \"MONEYAVAXDividendTracker.sol\":5848:5898  _lastProcessedIndex >= tokenHoldersMap.keys.length */\n      dup6\n      lt\n        /* \"MONEYAVAXDividendTracker.sol\":5845:5941  if(_lastProcessedIndex >= tokenHoldersMap.keys.length) {... */\n      tag_309\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":5931:5932  0 */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":5909:5932  _lastProcessedIndex = 0 */\n      swap5\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5845:5941  if(_lastProcessedIndex >= tokenHoldersMap.keys.length) {... */\n    tag_309:\n        /* \"MONEYAVAXDividendTracker.sol\":5949:5964  address account */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":5967:5982  tokenHoldersMap */\n      0x0a\n        /* \"MONEYAVAXDividendTracker.sol\":5967:5987  tokenHoldersMap.keys */\n      0x00\n      add\n        /* \"MONEYAVAXDividendTracker.sol\":5988:6007  _lastProcessedIndex */\n      dup7\n        /* \"MONEYAVAXDividendTracker.sol\":5967:6008  tokenHoldersMap.keys[_lastProcessedIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_310\n      jumpi\n      invalid\n    tag_310:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MONEYAVAXDividendTracker.sol\":6033:6056  lastClaimTimes[account] */\n      dup1\n      dup4\n      mstore\n        /* \"MONEYAVAXDividendTracker.sol\":6033:6047  lastClaimTimes */\n      0x10\n        /* \"MONEYAVAXDividendTracker.sol\":6033:6056  lastClaimTimes[account] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"MONEYAVAXDividendTracker.sol\":5967:6008  tokenHoldersMap.keys[_lastProcessedIndex] */\n      swap1\n      swap2\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":6020:6057  canAutoClaim(lastClaimTimes[account]) */\n      tag_312\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":6020:6032  canAutoClaim */\n      tag_313\n        /* \"MONEYAVAXDividendTracker.sol\":6020:6057  canAutoClaim(lastClaimTimes[account]) */\n      jump\t// in\n    tag_312:\n        /* \"MONEYAVAXDividendTracker.sol\":6017:6147  if(canAutoClaim(lastClaimTimes[account])) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":6071:6109  processAccount(payable(account), true) */\n      tag_315\n        /* \"MONEYAVAXDividendTracker.sol\":6094:6101  account */\n      dup2\n        /* \"MONEYAVAXDividendTracker.sol\":6104:6108  true */\n      0x01\n        /* \"MONEYAVAXDividendTracker.sol\":6071:6085  processAccount */\n      tag_125\n        /* \"MONEYAVAXDividendTracker.sol\":6071:6109  processAccount(payable(account), true) */\n      jump\t// in\n    tag_315:\n        /* \"MONEYAVAXDividendTracker.sol\":6068:6139  if(processAccount(payable(account), true)) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":6121:6129  claims++ */\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":6068:6139  if(processAccount(payable(account), true)) {... */\n    tag_316:\n        /* \"MONEYAVAXDividendTracker.sol\":6155:6167  iterations++ */\n      0x01\n      swap1\n      swap3\n      add\n      swap2\n        /* \"MONEYAVAXDividendTracker.sol\":6176:6194  uint256 newGasLeft */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":6197:6206  gasleft() */\n      gas\n        /* \"MONEYAVAXDividendTracker.sol\":6176:6206  uint256 newGasLeft = gasleft() */\n      swap1\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":6228:6238  newGasLeft */\n      dup1\n        /* \"MONEYAVAXDividendTracker.sol\":6218:6225  gasLeft */\n      dup6\n        /* \"MONEYAVAXDividendTracker.sol\":6218:6238  gasLeft > newGasLeft */\n      gt\n        /* \"MONEYAVAXDividendTracker.sol\":6215:6304  if(gasLeft > newGasLeft) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"MONEYAVAXDividendTracker.sol\":6259:6295  gasUsed.add(gasLeft.sub(newGasLeft)) */\n      tag_318\n        /* \"MONEYAVAXDividendTracker.sol\":6271:6294  gasLeft.sub(newGasLeft) */\n      tag_319\n        /* \"MONEYAVAXDividendTracker.sol\":6271:6278  gasLeft */\n      dup7\n        /* \"MONEYAVAXDividendTracker.sol\":6283:6293  newGasLeft */\n      dup4\n        /* \"MONEYAVAXDividendTracker.sol\":6271:6282  gasLeft.sub */\n      tag_228\n        /* \"MONEYAVAXDividendTracker.sol\":6271:6294  gasLeft.sub(newGasLeft) */\n      jump\t// in\n    tag_319:\n        /* \"MONEYAVAXDividendTracker.sol\":6259:6266  gasUsed */\n      dup8\n      swap1\n        /* \"MONEYAVAXDividendTracker.sol\":6259:6270  gasUsed.add */\n      tag_194\n        /* \"MONEYAVAXDividendTracker.sol\":6259:6295  gasUsed.add(gasLeft.sub(newGasLeft)) */\n      jump\t// in\n    tag_318:\n        /* \"MONEYAVAXDividendTracker.sol\":6249:6295  gasUsed = gasUsed.add(gasLeft.sub(newGasLeft)) */\n      swap6\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":6215:6304  if(gasLeft > newGasLeft) {... */\n    tag_317:\n        /* \"MONEYAVAXDividendTracker.sol\":6322:6332  newGasLeft */\n      swap4\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5749:6340  while(gasUsed < gas && iterations < numberOfTokenHolders) {... */\n      tag_306\n      swap1\n      pop\n      jump\n    tag_307:\n        /* \"MONEYAVAXDividendTracker.sol\":6347:6365  lastProcessedIndex */\n      0x0e\n        /* \"MONEYAVAXDividendTracker.sol\":6347:6387  lastProcessedIndex = _lastProcessedIndex */\n      dup6\n      swap1\n      sstore\n        /* \"MONEYAVAXDividendTracker.sol\":6403:6413  iterations */\n      swap1\n      swap8\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":6415:6421  claims */\n      swap6\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":6368:6387  _lastProcessedIndex */\n      swap2\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":5344:6449  function process(uint256 gas) public returns (uint256, uint256, uint256) {... */\n    tag_304:\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_155:\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9522:9541  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9514:9582  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9600:9621  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9592:9660  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9671:9682  _allowances */\n      0x01\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9671:9698  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9671:9707  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MONEYAVAXDividendTracker.sol\":1254:1401  function _transfer(address, address, uint256) internal override {... */\n    tag_161:\n        /* \"MONEYAVAXDividendTracker.sol\":1328:1394  require(false, \"MONEYAVAX_Dividend_Tracker: No transfers allowed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e72b312e2e60f004feaa3159509b718300b3b0fca2c157bbc01115b4b8030bc3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_166:\n        /* \"SafeMath.sol\":1268:1275  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1303:1315  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1295:1301  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1287:1316  require(b <= a, errorMessage) */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_328:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_330\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_328)\n    tag_330:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_331\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_331:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1338:1343  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"SafeMath.sol\":1616:2075  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_173:\n        /* \"SafeMath.sol\":1674:1681  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1915:1921  a == 0 */\n      dup3\n        /* \"SafeMath.sol\":1911:1956  if (a == 0) {... */\n      tag_333\n      jumpi\n      pop\n        /* \"SafeMath.sol\":1944:1945  0 */\n      0x00\n        /* \"SafeMath.sol\":1937:1945  return 0 */\n      jump(tag_152)\n        /* \"SafeMath.sol\":1911:1956  if (a == 0) {... */\n    tag_333:\n        /* \"SafeMath.sol\":1978:1983  a * b */\n      dup3\n      dup3\n      mul\n        /* \"SafeMath.sol\":1982:1983  b */\n      dup3\n        /* \"SafeMath.sol\":1978:1979  a */\n      dup5\n        /* \"SafeMath.sol\":1978:1983  a * b */\n      dup3\n        /* \"SafeMath.sol\":1978:1979  a */\n      dup2\n        /* \"SafeMath.sol\":2001:2006  c / a */\n      tag_334\n      jumpi\n      invalid\n    tag_334:\n      div\n        /* \"SafeMath.sol\":2001:2011  c / a == b */\n      eq\n        /* \"SafeMath.sol\":1993:2049  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"SafeMath.sol\":2067:2068  c */\n      swap4\n        /* \"SafeMath.sol\":1616:2075  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMathUint.sol\":178:308  function toInt256Safe(uint256 a) internal pure returns (int256) {... */\n    tag_174:\n        /* \"SafeMathUint.sol\":234:240  int256 */\n      0x00\n        /* \"SafeMathUint.sol\":266:267  a */\n      dup2\n        /* \"SafeMathUint.sol\":282:288  b >= 0 */\n      dup2\n      dup2\n      slt\n      iszero\n        /* \"SafeMathUint.sol\":274:289  require(b >= 0) */\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2478:2650  function add(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_175:\n        /* \"SafeMathInt.sol\":2534:2540  int256 */\n      0x00\n        /* \"SafeMathInt.sol\":2563:2568  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMathInt.sol\":2587:2593  b >= 0 */\n      dup2\n      dup4\n      slt\n      dup1\n      iszero\n      swap1\n        /* \"SafeMathInt.sol\":2587:2603  b >= 0 && c >= a */\n      tag_339\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2602:2603  a */\n      dup4\n        /* \"SafeMathInt.sol\":2597:2598  c */\n      dup2\n        /* \"SafeMathInt.sol\":2597:2603  c >= a */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":2587:2603  b >= 0 && c >= a */\n    tag_339:\n        /* \"SafeMathInt.sol\":2586:2624  (b >= 0 && c >= a) || (b < 0 && c < a) */\n      dup1\n      tag_341\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2613:2614  0 */\n      0x00\n        /* \"SafeMathInt.sol\":2609:2610  b */\n      dup4\n        /* \"SafeMathInt.sol\":2609:2614  b < 0 */\n      slt\n        /* \"SafeMathInt.sol\":2609:2623  b < 0 && c < a */\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2622:2623  a */\n      dup4\n        /* \"SafeMathInt.sol\":2618:2619  c */\n      dup2\n        /* \"SafeMathInt.sol\":2618:2623  c < a */\n      slt\n        /* \"SafeMathInt.sol\":2609:2623  b < 0 && c < a */\n    tag_341:\n        /* \"SafeMathInt.sol\":2578:2625  require((b >= 0 && c >= a) || (b < 0 && c < a)) */\n      tag_335\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2868:2992  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n    tag_176:\n        /* \"SafeMathInt.sol\":2924:2931  uint256 */\n      0x00\n        /* \"SafeMathInt.sol\":2956:2957  0 */\n      dup1\n        /* \"SafeMathInt.sol\":2951:2952  a */\n      dup3\n        /* \"SafeMathInt.sol\":2951:2957  a >= 0 */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":2943:2958  require(a >= 0) */\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      pop\n        /* \"SafeMathInt.sol\":2983:2984  a */\n      swap1\n        /* \"SafeMathInt.sol\":2868:2992  function toUint256Safe(int256 a) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":7552:7949  function _setBalance(address account, uint256 newBalance) internal {... */\n    tag_185:\n        /* \"DividendPayingToken.sol\":7625:7647  uint256 currentBalance */\n      0x00\n        /* \"DividendPayingToken.sol\":7650:7668  balanceOf(account) */\n      tag_346\n        /* \"DividendPayingToken.sol\":7660:7667  account */\n      dup4\n        /* \"DividendPayingToken.sol\":7650:7659  balanceOf */\n      tag_92\n        /* \"DividendPayingToken.sol\":7650:7668  balanceOf(account) */\n      jump\t// in\n    tag_346:\n        /* \"DividendPayingToken.sol\":7625:7668  uint256 currentBalance = balanceOf(account) */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":7691:7705  currentBalance */\n      dup1\n        /* \"DividendPayingToken.sol\":7678:7688  newBalance */\n      dup3\n        /* \"DividendPayingToken.sol\":7678:7705  newBalance > currentBalance */\n      gt\n        /* \"DividendPayingToken.sol\":7675:7945  if(newBalance > currentBalance) {... */\n      iszero\n      tag_347\n      jumpi\n        /* \"DividendPayingToken.sol\":7715:7733  uint256 mintAmount */\n      0x00\n        /* \"DividendPayingToken.sol\":7736:7766  newBalance.sub(currentBalance) */\n      tag_348\n        /* \"DividendPayingToken.sol\":7736:7746  newBalance */\n      dup4\n        /* \"DividendPayingToken.sol\":7751:7765  currentBalance */\n      dup4\n        /* \"DividendPayingToken.sol\":7736:7750  newBalance.sub */\n      tag_228\n        /* \"DividendPayingToken.sol\":7736:7766  newBalance.sub(currentBalance) */\n      jump\t// in\n    tag_348:\n        /* \"DividendPayingToken.sol\":7715:7766  uint256 mintAmount = newBalance.sub(currentBalance) */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":7774:7800  _mint(account, mintAmount) */\n      tag_349\n        /* \"DividendPayingToken.sol\":7780:7787  account */\n      dup5\n        /* \"DividendPayingToken.sol\":7789:7799  mintAmount */\n      dup3\n        /* \"DividendPayingToken.sol\":7774:7779  _mint */\n      tag_350\n        /* \"DividendPayingToken.sol\":7774:7800  _mint(account, mintAmount) */\n      jump\t// in\n    tag_349:\n        /* \"DividendPayingToken.sol\":7675:7945  if(newBalance > currentBalance) {... */\n      pop\n      jump(tag_268)\n    tag_347:\n        /* \"DividendPayingToken.sol\":7829:7843  currentBalance */\n      dup1\n        /* \"DividendPayingToken.sol\":7816:7826  newBalance */\n      dup3\n        /* \"DividendPayingToken.sol\":7816:7843  newBalance < currentBalance */\n      lt\n        /* \"DividendPayingToken.sol\":7813:7945  if(newBalance < currentBalance) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"DividendPayingToken.sol\":7853:7871  uint256 burnAmount */\n      0x00\n        /* \"DividendPayingToken.sol\":7874:7904  currentBalance.sub(newBalance) */\n      tag_353\n        /* \"DividendPayingToken.sol\":7874:7888  currentBalance */\n      dup3\n        /* \"DividendPayingToken.sol\":7893:7903  newBalance */\n      dup5\n        /* \"DividendPayingToken.sol\":7874:7892  currentBalance.sub */\n      tag_228\n        /* \"DividendPayingToken.sol\":7874:7904  currentBalance.sub(newBalance) */\n      jump\t// in\n    tag_353:\n        /* \"DividendPayingToken.sol\":7853:7904  uint256 burnAmount = currentBalance.sub(newBalance) */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":7912:7938  _burn(account, burnAmount) */\n      tag_354\n        /* \"DividendPayingToken.sol\":7918:7925  account */\n      dup5\n        /* \"DividendPayingToken.sol\":7927:7937  burnAmount */\n      dup3\n        /* \"DividendPayingToken.sol\":7912:7917  _burn */\n      tag_355\n        /* \"DividendPayingToken.sol\":7912:7938  _burn(account, burnAmount) */\n      jump\t// in\n    tag_354:\n        /* \"DividendPayingToken.sol\":7813:7945  if(newBalance < currentBalance) {... */\n      pop\n        /* \"DividendPayingToken.sol\":7552:7949  function _setBalance(address account, uint256 newBalance) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_194:\n        /* \"SafeMath.sol\":368:375  uint256 */\n      0x00\n        /* \"SafeMath.sol\":399:404  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":422:428  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":414:460  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_335\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"SafeMath.sol\":757:891  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_228:\n        /* \"SafeMath.sol\":815:822  uint256 */\n      0x00\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_335\n        /* \"SafeMath.sol\":845:846  a */\n      dup4\n        /* \"SafeMath.sol\":848:849  b */\n      dup4\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"SafeMath.sol\":841:844  sub */\n      tag_166\n        /* \"SafeMath.sol\":841:884  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":3516:4118  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {... */\n    tag_250:\n        /* \"DividendPayingToken.sol\":3589:3596  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":3604:3633  uint256 _withdrawableDividend */\n      dup1\n        /* \"DividendPayingToken.sol\":3636:3664  withdrawableDividendOf(user) */\n      tag_361\n        /* \"DividendPayingToken.sol\":3659:3663  user */\n      dup4\n        /* \"DividendPayingToken.sol\":3636:3658  withdrawableDividendOf */\n      tag_113\n        /* \"DividendPayingToken.sol\":3636:3664  withdrawableDividendOf(user) */\n      jump\t// in\n    tag_361:\n        /* \"DividendPayingToken.sol\":3604:3664  uint256 _withdrawableDividend = withdrawableDividendOf(user) */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":3674:3699  _withdrawableDividend > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":3670:4099  if (_withdrawableDividend > 0) {... */\n      tag_362\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3736:3760  withdrawnDividends[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3736:3754  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3736:3760  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3736:3787  withdrawnDividends[user].add(_withdrawableDividend) */\n      tag_363\n      swap1\n        /* \"DividendPayingToken.sol\":3765:3786  _withdrawableDividend */\n      dup3\n        /* \"DividendPayingToken.sol\":3736:3764  withdrawnDividends[user].add */\n      tag_194\n        /* \"DividendPayingToken.sol\":3736:3787  withdrawnDividends[user].add(_withdrawableDividend) */\n      jump\t// in\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3709:3727  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DividendPayingToken.sol\":3709:3787  withdrawnDividends[user] = withdrawnDividends[user].add(_withdrawableDividend) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"DividendPayingToken.sol\":3800:3846  DividendWithdrawn(user, _withdrawableDividend) */\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":3709:3733  withdrawnDividends[user] */\n      swap2\n      swap3\n        /* \"DividendPayingToken.sol\":3800:3846  DividendWithdrawn(user, _withdrawableDividend) */\n      0xee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":3854:3866  bool success */\n      0x00\n        /* \"DividendPayingToken.sol\":3876:3880  CAKE */\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3869:3890  IERC20(CAKE).transfer */\n      and\n      0xa9059cbb\n        /* \"DividendPayingToken.sol\":3891:3895  user */\n      dup6\n        /* \"DividendPayingToken.sol\":3897:3918  _withdrawableDividend */\n      dup5\n        /* \"DividendPayingToken.sol\":3869:3919  IERC20(CAKE).transfer(user, _withdrawableDividend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_364:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_366\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_366:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_367\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_367:\n      pop\n      mload\n      swap1\n      pop\n      dup1\n        /* \"DividendPayingToken.sol\":3928:4056  if(!success) {... */\n      tag_368\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3978:4002  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3978:3996  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3978:4002  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3978:4029  withdrawnDividends[user].sub(_withdrawableDividend) */\n      tag_369\n      swap1\n        /* \"DividendPayingToken.sol\":4007:4028  _withdrawableDividend */\n      dup4\n        /* \"DividendPayingToken.sol\":3978:4006  withdrawnDividends[user].sub */\n      tag_228\n        /* \"DividendPayingToken.sol\":3978:4029  withdrawnDividends[user].sub(_withdrawableDividend) */\n      jump\t// in\n    tag_369:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3951:3969  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DividendPayingToken.sol\":3951:4029  withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DividendPayingToken.sol\":3951:3975  withdrawnDividends[user] */\n      swap3\n      pop\n        /* \"DividendPayingToken.sol\":4039:4047  return 0 */\n      tag_167\n      swap2\n      pop\n      pop\n      jump\n        /* \"DividendPayingToken.sol\":3928:4056  if(!success) {... */\n    tag_368:\n      pop\n        /* \"DividendPayingToken.sol\":4071:4092  _withdrawableDividend */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":4064:4092  return _withdrawableDividend */\n      jump(tag_167)\n        /* \"DividendPayingToken.sol\":3670:4099  if (_withdrawableDividend > 0) {... */\n    tag_362:\n      pop\n        /* \"DividendPayingToken.sol\":4112:4113  0 */\n      0x00\n      swap3\n        /* \"DividendPayingToken.sol\":3516:4118  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMathInt.sol\":2223:2395  function sub(int256 a, int256 b) internal pure returns (int256) {... */\n    tag_290:\n        /* \"SafeMathInt.sol\":2279:2285  int256 */\n      0x00\n        /* \"SafeMathInt.sol\":2308:2313  a - b */\n      dup2\n      dup4\n      sub\n        /* \"SafeMathInt.sol\":2332:2338  b >= 0 */\n      dup2\n      dup4\n      slt\n      dup1\n      iszero\n      swap1\n        /* \"SafeMathInt.sol\":2332:2348  b >= 0 && c <= a */\n      tag_371\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2347:2348  a */\n      dup4\n        /* \"SafeMathInt.sol\":2342:2343  c */\n      dup2\n        /* \"SafeMathInt.sol\":2342:2348  c <= a */\n      sgt\n      iszero\n        /* \"SafeMathInt.sol\":2332:2348  b >= 0 && c <= a */\n    tag_371:\n        /* \"SafeMathInt.sol\":2331:2369  (b >= 0 && c <= a) || (b < 0 && c > a) */\n      dup1\n      tag_341\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2358:2359  0 */\n      0x00\n        /* \"SafeMathInt.sol\":2354:2355  b */\n      dup4\n        /* \"SafeMathInt.sol\":2354:2359  b < 0 */\n      slt\n        /* \"SafeMathInt.sol\":2354:2368  b < 0 && c > a */\n      dup1\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2367:2368  a */\n      dup4\n        /* \"SafeMathInt.sol\":2363:2364  c */\n      dup2\n        /* \"SafeMathInt.sol\":2363:2368  c > a */\n      sgt\n        /* \"SafeMathInt.sol\":2323:2370  require((b >= 0 && c <= a) || (b < 0 && c > a)) */\n      tag_335\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"MONEYAVAXDividendTracker.sol\":4674:4887  function canAutoClaim(uint256 lastClaimTime) private view returns (bool) {... */\n    tag_313:\n        /* \"MONEYAVAXDividendTracker.sol\":4741:4745  bool */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":4773:4788  block.timestamp */\n      timestamp\n        /* \"MONEYAVAXDividendTracker.sol\":4757:4770  lastClaimTime */\n      dup3\n        /* \"MONEYAVAXDividendTracker.sol\":4757:4788  lastClaimTime > block.timestamp */\n      gt\n        /* \"MONEYAVAXDividendTracker.sol\":4754:4819  if(lastClaimTime > block.timestamp)  {... */\n      iszero\n      tag_376\n      jumpi\n      pop\n        /* \"MONEYAVAXDividendTracker.sol\":4806:4811  false */\n      0x00\n        /* \"MONEYAVAXDividendTracker.sol\":4799:4811  return false */\n      jump(tag_167)\n        /* \"MONEYAVAXDividendTracker.sol\":4754:4819  if(lastClaimTime > block.timestamp)  {... */\n    tag_376:\n        /* \"MONEYAVAXDividendTracker.sol\":4871:4880  claimWait */\n      sload(0x11)\n        /* \"MONEYAVAXDividendTracker.sol\":4833:4867  block.timestamp.sub(lastClaimTime) */\n      tag_377\n        /* \"MONEYAVAXDividendTracker.sol\":4833:4848  block.timestamp */\n      timestamp\n        /* \"MONEYAVAXDividendTracker.sol\":4853:4866  lastClaimTime */\n      dup5\n        /* \"MONEYAVAXDividendTracker.sol\":4833:4852  block.timestamp.sub */\n      tag_228\n        /* \"MONEYAVAXDividendTracker.sol\":4833:4867  block.timestamp.sub(lastClaimTime) */\n      jump\t// in\n    tag_377:\n        /* \"MONEYAVAXDividendTracker.sol\":4833:4880  block.timestamp.sub(lastClaimTime) >= claimWait */\n      lt\n      iszero\n      swap3\n        /* \"MONEYAVAXDividendTracker.sol\":4674:4887  function canAutoClaim(uint256 lastClaimTime) private view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DividendPayingToken.sol\":6769:7024  function _mint(address account, uint256 value) internal override {... */\n    tag_350:\n        /* \"DividendPayingToken.sol\":6840:6867  super._mint(account, value) */\n      tag_379\n        /* \"DividendPayingToken.sol\":6852:6859  account */\n      dup3\n        /* \"DividendPayingToken.sol\":6861:6866  value */\n      dup3\n        /* \"DividendPayingToken.sol\":6840:6851  super._mint */\n      tag_380\n        /* \"DividendPayingToken.sol\":6840:6867  super._mint(account, value) */\n      jump\t// in\n    tag_379:\n        /* \"DividendPayingToken.sol\":6914:7019  magnifiedDividendCorrections[account]... */\n      tag_381\n        /* \"DividendPayingToken.sol\":6964:7017  (magnifiedDividendPerShare.mul(value)).toInt256Safe() */\n      tag_382\n        /* \"DividendPayingToken.sol\":6965:7001  magnifiedDividendPerShare.mul(value) */\n      tag_171\n        /* \"DividendPayingToken.sol\":6995:7000  value */\n      dup4\n        /* \"DividendPayingToken.sol\":6965:6990  magnifiedDividendPerShare */\n      sload(0x06)\n        /* \"DividendPayingToken.sol\":6965:6994  magnifiedDividendPerShare.mul */\n      tag_173\n      swap1\n        /* \"DividendPayingToken.sol\":6965:7001  magnifiedDividendPerShare.mul(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"DividendPayingToken.sol\":6964:7017  (magnifiedDividendPerShare.mul(value)).toInt256Safe() */\n    tag_382:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":6914:6951  magnifiedDividendCorrections[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":6914:6942  magnifiedDividendCorrections */\n      0x07\n        /* \"DividendPayingToken.sol\":6914:6951  magnifiedDividendCorrections[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DividendPayingToken.sol\":6914:6962  magnifiedDividendCorrections[account]... */\n      tag_290\n        /* \"DividendPayingToken.sol\":6914:7019  magnifiedDividendCorrections[account]... */\n      jump\t// in\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":6874:6911  magnifiedDividendCorrections[account] */\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":6874:6902  magnifiedDividendCorrections */\n      0x07\n        /* \"DividendPayingToken.sol\":6874:6911  magnifiedDividendCorrections[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DividendPayingToken.sol\":6874:7019  magnifiedDividendCorrections[account] = magnifiedDividendCorrections[account]... */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DividendPayingToken.sol\":6769:7024  function _mint(address account, uint256 value) internal override {... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":7293:7548  function _burn(address account, uint256 value) internal override {... */\n    tag_355:\n        /* \"DividendPayingToken.sol\":7364:7391  super._burn(account, value) */\n      tag_385\n        /* \"DividendPayingToken.sol\":7376:7383  account */\n      dup3\n        /* \"DividendPayingToken.sol\":7385:7390  value */\n      dup3\n        /* \"DividendPayingToken.sol\":7364:7375  super._burn */\n      tag_386\n        /* \"DividendPayingToken.sol\":7364:7391  super._burn(account, value) */\n      jump\t// in\n    tag_385:\n        /* \"DividendPayingToken.sol\":7438:7543  magnifiedDividendCorrections[account]... */\n      tag_381\n        /* \"DividendPayingToken.sol\":7488:7541  (magnifiedDividendPerShare.mul(value)).toInt256Safe() */\n      tag_388\n        /* \"DividendPayingToken.sol\":7489:7525  magnifiedDividendPerShare.mul(value) */\n      tag_171\n        /* \"DividendPayingToken.sol\":7519:7524  value */\n      dup4\n        /* \"DividendPayingToken.sol\":7489:7514  magnifiedDividendPerShare */\n      sload(0x06)\n        /* \"DividendPayingToken.sol\":7489:7518  magnifiedDividendPerShare.mul */\n      tag_173\n      swap1\n        /* \"DividendPayingToken.sol\":7489:7525  magnifiedDividendPerShare.mul(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"DividendPayingToken.sol\":7488:7541  (magnifiedDividendPerShare.mul(value)).toInt256Safe() */\n    tag_388:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":7438:7475  magnifiedDividendCorrections[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":7438:7466  magnifiedDividendCorrections */\n      0x07\n        /* \"DividendPayingToken.sol\":7438:7475  magnifiedDividendCorrections[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DividendPayingToken.sol\":7438:7486  magnifiedDividendCorrections[account]... */\n      tag_175\n        /* \"DividendPayingToken.sol\":7438:7543  magnifiedDividendCorrections[account]... */\n      jump\t// in\n        /* \"ERC20.sol\":7868:8238  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7951:7972  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7943:8008  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_391\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_391:\n        /* \"ERC20.sol\":8019:8068  _beforeTokenTransfer(address(0), account, amount) */\n      tag_392\n        /* \"ERC20.sol\":8048:8049  0 */\n      0x00\n        /* \"ERC20.sol\":8052:8059  account */\n      dup4\n        /* \"ERC20.sol\":8061:8067  amount */\n      dup4\n        /* \"ERC20.sol\":8019:8039  _beforeTokenTransfer */\n      tag_268\n        /* \"ERC20.sol\":8019:8068  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_392:\n        /* \"ERC20.sol\":8094:8106  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":8094:8118  _totalSupply.add(amount) */\n      tag_394\n      swap1\n        /* \"ERC20.sol\":8111:8117  amount */\n      dup3\n        /* \"ERC20.sol\":8094:8110  _totalSupply.add */\n      tag_194\n        /* \"ERC20.sol\":8094:8118  _totalSupply.add(amount) */\n      jump\t// in\n    tag_394:\n        /* \"ERC20.sol\":8079:8091  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":8079:8118  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8149:8167  _balances[account] */\n      dup3\n      and\n        /* \"ERC20.sol\":8149:8158  _balances */\n      0x00\n        /* \"ERC20.sol\":8149:8167  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20.sol\":8149:8179  _balances[account].add(amount) */\n      tag_395\n      swap1\n        /* \"ERC20.sol\":8172:8178  amount */\n      dup3\n        /* \"ERC20.sol\":8149:8171  _balances[account].add */\n      tag_194\n        /* \"ERC20.sol\":8149:8179  _balances[account].add(amount) */\n      jump\t// in\n    tag_395:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8128:8146  _balances[account] */\n      dup4\n      and\n        /* \"ERC20.sol\":8128:8137  _balances */\n      0x00\n        /* \"ERC20.sol\":8128:8146  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":8128:8179  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":8194:8231  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ERC20.sol\":8128:8146  _balances[account] */\n      swap3\n      swap4\n        /* \"ERC20.sol\":8128:8137  _balances */\n      swap2\n      swap3\n        /* \"ERC20.sol\":8194:8231  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":7868:8238  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":8558:8968  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8641:8662  account != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":8633:8700  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_397\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_397:\n        /* \"ERC20.sol\":8711:8760  _beforeTokenTransfer(account, address(0), amount) */\n      tag_398\n        /* \"ERC20.sol\":8732:8739  account */\n      dup3\n        /* \"ERC20.sol\":8749:8750  0 */\n      0x00\n        /* \"ERC20.sol\":8753:8759  amount */\n      dup4\n        /* \"ERC20.sol\":8711:8731  _beforeTokenTransfer */\n      tag_268\n        /* \"ERC20.sol\":8711:8760  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_398:\n        /* \"ERC20.sol\":8792:8860  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_399\n        /* \"ERC20.sol\":8815:8821  amount */\n      dup2\n        /* \"ERC20.sol\":8792:8860  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8792:8810  _balances[account] */\n      dup6\n      and\n        /* \"ERC20.sol\":8792:8801  _balances */\n      0x00\n        /* \"ERC20.sol\":8792:8810  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":8792:8860  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap1\n        /* \"ERC20.sol\":8792:8814  _balances[account].sub */\n      tag_166\n        /* \"ERC20.sol\":8792:8860  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8771:8789  _balances[account] */\n      dup4\n      and\n        /* \"ERC20.sol\":8771:8780  _balances */\n      0x00\n        /* \"ERC20.sol\":8771:8789  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ERC20.sol\":8771:8860  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      sstore\n        /* \"ERC20.sol\":8885:8897  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":8885:8909  _totalSupply.sub(amount) */\n      tag_400\n      swap1\n        /* \"ERC20.sol\":8902:8908  amount */\n      dup3\n        /* \"ERC20.sol\":8885:8901  _totalSupply.sub */\n      tag_228\n        /* \"ERC20.sol\":8885:8909  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_400:\n        /* \"ERC20.sol\":8870:8882  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":8870:8909  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"ERC20.sol\":8924:8961  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":8950:8951  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":8924:8961  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":8558:8968  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n    stop\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4d2f405a35ca6c83b74bbde3a75785f77c58df6f366c6c72c07716bd11b48b44 4d4f4e4559415641585f4469766964656e645f547261636b65723a20636c61696d57616974206d757374206265207570646174656420746f206265747765656e203120616e6420323420686f757273\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_942c29fdcdc1c6c74273047a896f52dec5ef9bd1fdd2acaf85c319d066f5abc6 4d4f4e4559415641585f4469766964656e645f547261636b65723a2043616e6e6f742075706461746520636c61696d5761697420746f2073616d652076616c7565\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_c615061e29940b7a365b4fa13ab29a516e98be4c6c3d2f44713e16d490a2393f 4d4f4e4559415641585f4469766964656e645f547261636b65723a2077697468647261774469766964656e642064697361626c65642e20557365207468652027636c61696d272066756e6374696f6e206f6e20746865206d61696e204d4f4e45594156415820636f6e74726163742e\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_e72b312e2e60f004feaa3159509b718300b3b0fca2c157bbc01115b4b8030bc3 4d4f4e4559415641585f4469766964656e645f547261636b65723a204e6f207472616e736665727320616c6c6f776564\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c8a571dbf0b3795b30604026379bf037a831e3cac31721d0856c2dd3b5b9f8e264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {
								"IterableMapping.sol": {
									"IterableMapping": [
										{
											"length": 20,
											"start": 3032
										},
										{
											"length": 20,
											"start": 3319
										},
										{
											"length": 20,
											"start": 3484
										},
										{
											"length": 20,
											"start": 4976
										},
										{
											"length": 20,
											"start": 5113
										},
										{
											"length": 20,
											"start": 5770
										}
									]
								}
							},
							"object": "60c06040527fb6076c93701d6a07266c31066b298aec6dd65c2d0000000000000000000000006080523480156200003557600080fd5b50604080518082018252601981527f4d4f4e4559415641585f4469766964656e5f547261636b65720000000000000060208083019182528351808501909452601a84527f4d4f4e4559415641585f4469766964656e645f547261636b657200000000000090840152815191929183918391620000b4916003916200014d565b508051620000ca9060049060208401906200014d565b5050506000620000df6200014960201b60201c565b600580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050610e1060115550692a5a058fc295ed00000060a052620001e9565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200019057805160ff1916838001178555620001c0565b82800160010185558215620001c0579182015b82811115620001c0578251825591602001919060010190620001a3565b50620001ce929150620001d2565b5090565b5b80821115620001ce5760008155600101620001d3565b60805160601c60a0516121556200021a6000398061102b52806110f8525080610a965280611ac452506121556000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c806385a6b3ae11610125578063bc4c4b37116100ad578063e7841ec01161007c578063e7841ec01461067b578063e98030c714610683578063f2fde38b146106a0578063fbcbc0f1146106c6578063ffb2c479146106ec5761021c565b8063bc4c4b37146105eb578063be10b61414610619578063dd62ed3e14610621578063e30443bc1461064f5761021c565b8063a457c2d7116100f4578063a457c2d71461052a578063a8b9d24014610556578063a9059cbb1461057c578063aafd847a146105a8578063ba72a955146105ce5761021c565b806385a6b3ae146104ec5780638da5cb5b146104f457806391b89fba146104fc57806395d89b41146105225761021c565b806331e79db0116101a85780635183d6fd116101775780635183d6fd146104465780636a474002146104ae5780636f2789ec146104b657806370a08231146104be578063715018a6146104e45761021c565b806331e79db0146103a857806339509351146103d05780634ca6ef28146103fc5780634e7b827f146104205761021c565b8063226cfa3d116101ef578063226cfa3d1461030057806323b872dd1461032657806327ce01471461035c5780633009a60914610382578063313ce5671461038a5761021c565b806306fdde0314610221578063095ea7b31461029e57806309bbedde146102de57806318160ddd146102f8575b600080fd5b610229610727565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561026357818101518382015260200161024b565b50505050905090810190601f1680156102905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ca600480360360408110156102b457600080fd5b506001600160a01b0381351690602001356107bd565b604080519115158252519081900360200190f35b6102e66107db565b60408051918252519081900360200190f35b6102e66107e1565b6102e66004803603602081101561031657600080fd5b50356001600160a01b03166107e7565b6102ca6004803603606081101561033c57600080fd5b506001600160a01b038135811691602081013590911690604001356107f9565b6102e66004803603602081101561037257600080fd5b50356001600160a01b0316610880565b6102e66108df565b6103926108e5565b6040805160ff9092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b03166108ea565b005b6102ca600480360360408110156103e657600080fd5b506001600160a01b038135169060200135610a46565b610404610a94565b604080516001600160a01b039092168252519081900360200190f35b6102ca6004803603602081101561043657600080fd5b50356001600160a01b0316610ab8565b6104636004803603602081101561045c57600080fd5b5035610acd565b604080516001600160a01b0390991689526020890197909752878701959095526060870193909352608086019190915260a085015260c084015260e083015251908190036101000190f35b6103ce610c2c565b6102e6610c63565b6102e6600480360360208110156104d457600080fd5b50356001600160a01b0316610c69565b6103ce610c84565b6102e6610d26565b610404610d2c565b6102e66004803603602081101561051257600080fd5b50356001600160a01b0316610d3b565b610229610d46565b6102ca6004803603604081101561054057600080fd5b506001600160a01b038135169060200135610da7565b6102e66004803603602081101561056c57600080fd5b50356001600160a01b0316610e0f565b6102ca6004803603604081101561059257600080fd5b506001600160a01b038135169060200135610e3b565b6102e6600480360360208110156105be57600080fd5b50356001600160a01b0316610e4f565b6103ce600480360360208110156105e457600080fd5b5035610e6a565b6102ca6004803603604081101561060157600080fd5b506001600160a01b0381351690602001351515610f54565b6102e6611029565b6102e66004803603604081101561063757600080fd5b506001600160a01b038135811691602001351661104d565b6103ce6004803603604081101561066557600080fd5b506001600160a01b038135169060200135611078565b6102e6611242565b6103ce6004803603602081101561069957600080fd5b5035611248565b6103ce600480360360208110156106b657600080fd5b50356001600160a01b0316611364565b610463600480360360208110156106dc57600080fd5b50356001600160a01b031661145d565b6107096004803603602081101561070257600080fd5b50356115d0565b60408051938452602084019290925282820152519081900360600190f35b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107b35780601f10610788576101008083540402835291602001916107b3565b820191906000526020600020905b81548152906001019060200180831161079657829003601f168201915b5050505050905090565b60006107d16107ca6116ce565b84846116d2565b5060015b92915050565b600a5490565b60025490565b60106020526000908152604090205481565b60006108068484846117be565b610876846108126116ce565b61087185604051806060016040528060288152602001611fcf602891396001600160a01b038a166000908152600160205260408120906108506116ce565b6001600160a01b0316815260208101919091526040016000205491906117f5565b6116d2565b5060019392505050565b6001600160a01b038116600090815260076020526040812054600160801b906108cf906108ca906108c46108bf6108b688610c69565b6006549061188c565b6118ec565b906118fc565b61192f565b816108d657fe5b0490505b919050565b600e5481565b601290565b6108f26116ce565b6005546001600160a01b03908116911614610942576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6001600160a01b0381166000908152600f602052604090205460ff161561096857600080fd5b6001600160a01b0381166000908152600f60205260408120805460ff19166001179055610996908290611942565b6040805163131836e760e21b8152600a60048201526001600160a01b0383166024820152905173__$b5c84be7e522c98c303ad318c067b85931$__91634c60db9c916044808301926000929190829003018186803b1580156109f757600080fd5b505af4158015610a0b573d6000803e3d6000fd5b50506040516001600160a01b03841692507fa878b31040b2e6d0a9a3d3361209db3908ba62014b0dca52adbaee451d128b259150600090a250565b60006107d1610a536116ce565b846108718560016000610a646116ce565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061199b565b7f000000000000000000000000000000000000000000000000000000000000000081565b600f6020526000908152604090205460ff1681565b600080600080600080600080600a73__$b5c84be7e522c98c303ad318c067b85931$__63deb3d89690916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610b2b57600080fd5b505af4158015610b3f573d6000803e3d6000fd5b505050506040513d6020811015610b5557600080fd5b50518910610b7c575060009650600019955085945086935083925082915081905080610c21565b6000600a73__$b5c84be7e522c98c303ad318c067b85931$__63d1aa9e7e90918c6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610bd857600080fd5b505af4158015610bec573d6000803e3d6000fd5b505050506040513d6020811015610c0257600080fd5b50519050610c0f8161145d565b98509850985098509850985098509850505b919395975091939597565b60405162461bcd60e51b815260040180806020018281038252606f815260200180612038606f913960800191505060405180910390fd5b60115481565b6001600160a01b031660009081526020819052604090205490565b610c8c6116ce565b6005546001600160a01b03908116911614610cdc576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b60095481565b6005546001600160a01b031690565b60006107d582610e0f565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107b35780601f10610788576101008083540402835291602001916107b3565b60006107d1610db46116ce565b84610871856040518060600160405280602581526020016120fb6025913960016000610dde6116ce565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906117f5565b6001600160a01b0381166000908152600860205260408120546107d590610e3584610880565b906119f5565b60006107d1610e486116ce565b84846117be565b6001600160a01b031660009081526008602052604090205490565b610e726116ce565b6005546001600160a01b03908116911614610ec2576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6000610ecc6107e1565b11610ed657600080fd5b8015610f5157610f07610ee76107e1565b610ef583600160801b61188c565b81610efc57fe5b60065491900461199b565b60065560408051828152905133917fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511919081900360200190a2600954610f4d908261199b565b6009555b50565b6000610f5e6116ce565b6005546001600160a01b03908116911614610fae576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6000610fb984611a37565b9050801561101f576001600160a01b0384166000818152601060209081526040918290204290558151848152915186151593927fa2c38e2d2fb7e3e1912d937fd1ca11ed6d51864dee4cfa7a7bf02becd7acf09292908290030190a360019150506107d5565b5060009392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6110806116ce565b6005546001600160a01b039081169116146110d0576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6001600160a01b0382166000908152600f602052604090205460ff16156110f65761123e565b7f000000000000000000000000000000000000000000000000000000000000000081106111ac576111278282611942565b60408051632f0ad01760e21b8152600a60048201526001600160a01b038416602482015260448101839052905173__$b5c84be7e522c98c303ad318c067b85931$__9163bc2b405c916064808301926000929190829003018186803b15801561118f57600080fd5b505af41580156111a3573d6000803e3d6000fd5b50505050611231565b6111b7826000611942565b6040805163131836e760e21b8152600a60048201526001600160a01b0384166024820152905173__$b5c84be7e522c98c303ad318c067b85931$__91634c60db9c916044808301926000929190829003018186803b15801561121857600080fd5b505af415801561122c573d6000803e3d6000fd5b505050505b61123c826001610f54565b505b5050565b600e5490565b6112506116ce565b6005546001600160a01b039081169116146112a0576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b610e1081101580156112b55750620151808111155b6112f05760405162461bcd60e51b815260040180806020018281038252604f815260200180611f1e604f913960600191505060405180910390fd5b6011548114156113315760405162461bcd60e51b8152600401808060200182810382526041815260200180611f8e6041913960600191505060405180910390fd5b60115460405182907f474ea64804364a1e29a4487ddb63c3342a2dd826ccd8acf48825e680a0e6f20f90600090a3601155565b61136c6116ce565b6005546001600160a01b039081169116146113bc576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6001600160a01b0381166114015760405162461bcd60e51b8152600401808060200182810382526026815260200180611ed66026913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b600080600080600080600080889750600a73__$b5c84be7e522c98c303ad318c067b85931$__6317e142d190918a6040518363ffffffff1660e01b815260040180838152602001826001600160a01b031681526020019250505060206040518083038186803b1580156114cf57600080fd5b505af41580156114e3573d6000803e3d6000fd5b505050506040513d60208110156114f957600080fd5b5051965060001995506000871261155d57600e5487111561152957600e54611522908890611bc6565b955061155d565b600e54600a546000911061153e57600061154d565b600e54600a5461154d916119f5565b905061155988826118fc565b9650505b61156688610e0f565b945061157188610880565b6001600160a01b03891660009081526010602052604090205490945092508261159b5760006115a9565b6011546115a990849061199b565b91504282116115b95760006115c3565b6115c382426119f5565b9050919395975091939597565b600a5460009081908190806115f0575050600e54600092508291506116c7565b600e546000805a90506000805b898410801561160b57508582105b156116b657600a54600190950194851061162457600094505b6000600a600001868154811061163657fe5b60009182526020808320909101546001600160a01b0316808352601090915260409091205490915061166790611bf8565b1561168357611677816001610f54565b15611683576001909101905b60019092019160005a9050808511156116ad576116aa6116a386836119f5565b879061199b565b95505b93506115fd9050565b600e85905590975095509193505050505b9193909250565b3390565b6001600160a01b0383166117175760405162461bcd60e51b81526004018080602001828103825260248152602001806120a76024913960400191505060405180910390fd5b6001600160a01b03821661175c5760405162461bcd60e51b8152600401808060200182810382526022815260200180611efc6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60405162461bcd60e51b81526004018080602001828103825260308152602001806120cb6030913960400191505060405180910390fd5b600081848411156118845760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611849578181015183820152602001611831565b50505050905090810190601f1680156118765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008261189b575060006107d5565b828202828482816118a857fe5b04146118e55760405162461bcd60e51b8152600401808060200182810382526021815260200180611f6d6021913960400191505060405180910390fd5b9392505050565b600081818112156107d557600080fd5b60008282018183128015906119115750838112155b80611926575060008312801561192657508381125b6118e557600080fd5b60008082121561193e57600080fd5b5090565b600061194d83610c69565b90508082111561197557600061196383836119f5565b905061196f8482611c1f565b5061123c565b8082101561123c57600061198982846119f5565b90506119958482611c83565b50505050565b6000828201838110156118e5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006118e583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117f5565b600080611a4383610e0f565b90508015611bbd576001600160a01b038316600090815260086020526040902054611a6e908261199b565b6001600160a01b038416600081815260086020908152604091829020939093558051848152905191927fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d92918290030190a260007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015611b3957600080fd5b505af1158015611b4d573d6000803e3d6000fd5b505050506040513d6020811015611b6357600080fd5b5051905080611bb5576001600160a01b038416600090815260086020526040902054611b8f90836119f5565b6001600160a01b03851660009081526008602052604081209190915592506108da915050565b5090506108da565b50600092915050565b6000818303818312801590611bdb5750838113155b80611926575060008312801561192657508381136118e557600080fd5b600042821115611c0a575060006108da565b601154611c1742846119f5565b101592915050565b611c298282611cc7565b611c63611c446108bf8360065461188c90919063ffffffff16565b6001600160a01b03841660009081526007602052604090205490611bc6565b6001600160a01b0390921660009081526007602052604090209190915550565b611c8d8282611db7565b611c63611ca86108bf8360065461188c90919063ffffffff16565b6001600160a01b038416600090815260076020526040902054906118fc565b6001600160a01b038216611d22576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611d2e6000838361123c565b600254611d3b908261199b565b6002556001600160a01b038216600090815260208190526040902054611d61908261199b565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611dfc5760405162461bcd60e51b81526004018080602001828103825260218152602001806120176021913960400191505060405180910390fd5b611e088260008361123c565b611e4581604051806060016040528060228152602001611eb4602291396001600160a01b03851660009081526020819052604090205491906117f5565b6001600160a01b038316600090815260208190526040902055600254611e6b90826119f5565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d4f4e4559415641585f4469766964656e645f547261636b65723a20636c61696d57616974206d757374206265207570646174656420746f206265747765656e203120616e6420323420686f757273536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d4f4e4559415641585f4469766964656e645f547261636b65723a2043616e6e6f742075706461746520636c61696d5761697420746f2073616d652076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f20616464726573734d4f4e4559415641585f4469766964656e645f547261636b65723a2077697468647261774469766964656e642064697361626c65642e20557365207468652027636c61696d272066756e6374696f6e206f6e20746865206d61696e204d4f4e45594156415820636f6e74726163742e45524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734d4f4e4559415641585f4469766964656e645f547261636b65723a204e6f207472616e736665727320616c6c6f77656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c8a571dbf0b3795b30604026379bf037a831e3cac31721d0856c2dd3b5b9f8e264736f6c634300060c0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH32 0xB6076C93701D6A07266C31066B298AEC6DD65C2D000000000000000000000000 PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x4D4F4E4559415641585F4469766964656E5F547261636B657200000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1A DUP5 MSTORE PUSH32 0x4D4F4E4559415641585F4469766964656E645F547261636B6572000000000000 SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH3 0xB4 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x14D JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xCA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x14D JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH3 0xDF PUSH3 0x149 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP POP PUSH2 0xE10 PUSH1 0x11 SSTORE POP PUSH10 0x2A5A058FC295ED000000 PUSH1 0xA0 MSTORE PUSH3 0x1E9 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x190 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1C0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1C0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1C0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1A3 JUMP JUMPDEST POP PUSH3 0x1CE SWAP3 SWAP2 POP PUSH3 0x1D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1CE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1D3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0x2155 PUSH3 0x21A PUSH1 0x0 CODECOPY DUP1 PUSH2 0x102B MSTORE DUP1 PUSH2 0x10F8 MSTORE POP DUP1 PUSH2 0xA96 MSTORE DUP1 PUSH2 0x1AC4 MSTORE POP PUSH2 0x2155 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xBC4C4B37 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE7841EC0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE7841EC0 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xE98030C7 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xFBCBC0F1 EQ PUSH2 0x6C6 JUMPI DUP1 PUSH4 0xFFB2C479 EQ PUSH2 0x6EC JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xBC4C4B37 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xBE10B614 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xE30443BC EQ PUSH2 0x64F JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x5CE JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x522 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x31E79DB0 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5183D6FD GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5183D6FD EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x6F2789EC EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E4 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x31E79DB0 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x4E7B827F EQ PUSH2 0x420 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x226CFA3D GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x226CFA3D EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x3009A609 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x38A JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x9BBEDDE EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x263 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x880 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x392 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x404 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP8 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x100 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x404 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x229 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE3B JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x104D JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x145D JUMP JUMPDEST PUSH2 0x709 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x788 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x796 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0x7CA PUSH2 0x16CE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x16D2 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP5 DUP5 DUP5 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x876 DUP5 PUSH2 0x812 PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x871 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FCF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x850 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x16D2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x8CF SWAP1 PUSH2 0x8CA SWAP1 PUSH2 0x8C4 PUSH2 0x8BF PUSH2 0x8B6 DUP9 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x18EC JUMP JUMPDEST SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x192F JUMP JUMPDEST DUP2 PUSH2 0x8D6 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x8F2 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x942 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x996 SWAP1 DUP3 SWAP1 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x131836E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x4C60DB9C SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH32 0xA878B31040B2E6D0A9A3D3361209DB3908BA62014B0DCA52ADBAEE451D128B25 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0xA53 PUSH2 0x16CE JUMP JUMPDEST DUP5 PUSH2 0x871 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xA64 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA PUSH20 0x0 PUSH4 0xDEB3D896 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xB3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP10 LT PUSH2 0xB7C JUMPI POP PUSH1 0x0 SWAP7 POP PUSH1 0x0 NOT SWAP6 POP DUP6 SWAP5 POP DUP7 SWAP4 POP DUP4 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH20 0x0 PUSH4 0xD1AA9E7E SWAP1 SWAP2 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xC0F DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2038 PUSH1 0x6F SWAP2 CODECOPY PUSH1 0x80 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC8C PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCDC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D5 DUP3 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x788 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0xDB4 PUSH2 0x16CE JUMP JUMPDEST DUP5 PUSH2 0x871 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDDE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x7D5 SWAP1 PUSH2 0xE35 DUP5 PUSH2 0x880 JUMP JUMPDEST SWAP1 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0xE48 PUSH2 0x16CE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE72 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECC PUSH2 0x7E1 JUMP JUMPDEST GT PUSH2 0xED6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xF51 JUMPI PUSH2 0xF07 PUSH2 0xEE7 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0xEF5 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x188C JUMP JUMPDEST DUP2 PUSH2 0xEFC JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0x199B JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0xF4D SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5E PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFAE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFB9 DUP5 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x101F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP2 MLOAD DUP7 ISZERO ISZERO SWAP4 SWAP3 PUSH32 0xA2C38E2D2FB7E3E1912D937FD1CA11ED6D51864DEE4CFA7A7BF02BECD7ACF092 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP PUSH2 0x7D5 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1080 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x123E JUMP JUMPDEST PUSH32 0x0 DUP2 LT PUSH2 0x11AC JUMPI PUSH2 0x1127 DUP3 DUP3 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2F0AD017 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xBC2B405C SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x11A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1231 JUMP JUMPDEST PUSH2 0x11B7 DUP3 PUSH1 0x0 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x131836E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x4C60DB9C SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x122C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x123C DUP3 PUSH1 0x1 PUSH2 0xF54 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1250 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x12A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x12B5 JUMPI POP PUSH3 0x15180 DUP2 GT ISZERO JUMPDEST PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F1E PUSH1 0x4F SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 SLOAD DUP2 EQ ISZERO PUSH2 0x1331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x41 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F8E PUSH1 0x41 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x474EA64804364A1E29A4487DDB63C3342A2DD826CCD8ACF48825E680A0E6F20F SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0x136C PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ED6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP9 SWAP8 POP PUSH1 0xA PUSH20 0x0 PUSH4 0x17E142D1 SWAP1 SWAP2 DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x14E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 NOT SWAP6 POP PUSH1 0x0 DUP8 SLT PUSH2 0x155D JUMPI PUSH1 0xE SLOAD DUP8 GT ISZERO PUSH2 0x1529 JUMPI PUSH1 0xE SLOAD PUSH2 0x1522 SWAP1 DUP9 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST SWAP6 POP PUSH2 0x155D JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xA SLOAD PUSH1 0x0 SWAP2 LT PUSH2 0x153E JUMPI PUSH1 0x0 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xA SLOAD PUSH2 0x154D SWAP2 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1559 DUP9 DUP3 PUSH2 0x18FC JUMP JUMPDEST SWAP7 POP POP JUMPDEST PUSH2 0x1566 DUP9 PUSH2 0xE0F JUMP JUMPDEST SWAP5 POP PUSH2 0x1571 DUP9 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP SWAP3 POP DUP3 PUSH2 0x159B JUMPI PUSH1 0x0 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x15A9 SWAP1 DUP5 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP2 POP TIMESTAMP DUP3 GT PUSH2 0x15B9 JUMPI PUSH1 0x0 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x15C3 DUP3 TIMESTAMP PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP1 PUSH2 0x15F0 JUMPI POP POP PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 DUP1 GAS SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP10 DUP5 LT DUP1 ISZERO PUSH2 0x160B JUMPI POP DUP6 DUP3 LT JUMPDEST ISZERO PUSH2 0x16B6 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 SWAP1 SWAP6 ADD SWAP5 DUP6 LT PUSH2 0x1624 JUMPI PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1636 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1667 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1677 DUP2 PUSH1 0x1 PUSH2 0xF54 JUMP JUMPDEST ISZERO PUSH2 0x1683 JUMPI PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x0 GAS SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AA PUSH2 0x16A3 DUP7 DUP4 PUSH2 0x19F5 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP6 POP JUMPDEST SWAP4 POP PUSH2 0x15FD SWAP1 POP JUMP JUMPDEST PUSH1 0xE DUP6 SWAP1 SSTORE SWAP1 SWAP8 POP SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20A7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x175C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EFC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20CB PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1849 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1831 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1876 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x189B JUMPI POP PUSH1 0x0 PUSH2 0x7D5 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x18A8 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x18E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F6D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x1911 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x1926 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x1926 JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D DUP4 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 PUSH2 0x1963 DUP4 DUP4 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x196F DUP5 DUP3 PUSH2 0x1C1F JUMP JUMPDEST POP PUSH2 0x123C JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 PUSH2 0x1989 DUP3 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1995 DUP5 DUP3 PUSH2 0x1C83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A43 DUP4 PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A6E SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x1BB5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B8F SWAP1 DUP4 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x8DA SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x8DA JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SUB DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x1BDB JUMPI POP DUP4 DUP2 SGT ISZERO JUMPDEST DUP1 PUSH2 0x1926 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x1926 JUMPI POP DUP4 DUP2 SGT PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 GT ISZERO PUSH2 0x1C0A JUMPI POP PUSH1 0x0 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1C17 TIMESTAMP DUP5 PUSH2 0x19F5 JUMP JUMPDEST LT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C29 DUP3 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x1C63 PUSH2 0x1C44 PUSH2 0x8BF DUP4 PUSH1 0x6 SLOAD PUSH2 0x188C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x1C8D DUP3 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST PUSH2 0x1C63 PUSH2 0x1CA8 PUSH2 0x8BF DUP4 PUSH1 0x6 SLOAD PUSH2 0x188C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1D2E PUSH1 0x0 DUP4 DUP4 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D3B SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D61 SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2017 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E08 DUP3 PUSH1 0x0 DUP4 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x1E45 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EB4 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x1E6B SWAP1 DUP3 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x4D4F4E4559415641585F4469766964656E645F54 PUSH19 0x61636B65723A20636C61696D57616974206D75 PUSH20 0x74206265207570646174656420746F2062657477 PUSH6 0x656E20312061 PUSH15 0x6420323420686F757273536166654D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774D4F4E455941564158 0x5F DIFFICULTY PUSH10 0x766964656E645F547261 PUSH4 0x6B65723A KECCAK256 NUMBER PUSH2 0x6E6E PUSH16 0x742075706461746520636C61696D5761 PUSH10 0x7420746F2073616D6520 PUSH23 0x616C756545524332303A207472616E7366657220616D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654F77 PUSH15 0x61626C653A2063616C6C6572206973 KECCAK256 PUSH15 0x6F7420746865206F776E6572455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573734D4F4E4559415641585F446976696465 PUSH15 0x645F547261636B65723A2077697468 PUSH5 0x7261774469 PUSH23 0x6964656E642064697361626C65642E2055736520746865 KECCAK256 0x27 PUSH4 0x6C61696D 0x27 KECCAK256 PUSH7 0x756E6374696F6E KECCAK256 PUSH16 0x6E20746865206D61696E204D4F4E4559 COINBASE JUMP COINBASE PC KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 0x2E GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 0x4D 0x4F 0x4E GASLIMIT MSIZE COINBASE JUMP COINBASE PC 0x5F DIFFICULTY PUSH10 0x766964656E645F547261 PUSH4 0x6B65723A KECCAK256 0x4E PUSH16 0x207472616E736665727320616C6C6F77 PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C8A5 PUSH18 0xDBF0B3795B30604026379BF037A831E3CAC3 OR 0x21 0xD0 DUP6 PUSH13 0x2DD3B5B9F8E264736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "319:6471:11:-:0;;;1099:83:1;;;1030:218:11;;;;;;;;;-1:-1:-1;2613:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2006:13:4;;2613:91:1;;;;;;;2006:13:4;;:5;;:13;:::i;:::-;-1:-1:-1;2029:17:4;;;;:7;;:17;;;;;:::i;:::-;;1933:120;;372:17:12;392:12;:10;;;:12;;:::i;:::-;414:6;:18;;-1:-1:-1;;;;;;414:18:12;-1:-1:-1;;;;;414:18:12;;;;;;;;447:43;;414:18;;-1:-1:-1;414:18:12;-1:-1:-1;;447:43:12;;-1:-1:-1;;447:43:12;-1:-1:-1;;1149:4:11::1;1137:9;:16:::0;-1:-1:-1;1197:17:11::1;1163:51;::::0;319:6471;;586:96:0;665:10;586:96;:::o;319:6471:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;319:6471:11;;;-1:-1:-1;319:6471:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"55": [
									{
										"length": 32,
										"start": 2710
									},
									{
										"length": 32,
										"start": 6852
									}
								],
								"2065": [
									{
										"length": 32,
										"start": 4139
									},
									{
										"length": 32,
										"start": 4344
									}
								]
							},
							"linkReferences": {
								"IterableMapping.sol": {
									"IterableMapping": [
										{
											"length": 20,
											"start": 2494
										},
										{
											"length": 20,
											"start": 2781
										},
										{
											"length": 20,
											"start": 2946
										},
										{
											"length": 20,
											"start": 4438
										},
										{
											"length": 20,
											"start": 4575
										},
										{
											"length": 20,
											"start": 5232
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b506004361061021c5760003560e01c806385a6b3ae11610125578063bc4c4b37116100ad578063e7841ec01161007c578063e7841ec01461067b578063e98030c714610683578063f2fde38b146106a0578063fbcbc0f1146106c6578063ffb2c479146106ec5761021c565b8063bc4c4b37146105eb578063be10b61414610619578063dd62ed3e14610621578063e30443bc1461064f5761021c565b8063a457c2d7116100f4578063a457c2d71461052a578063a8b9d24014610556578063a9059cbb1461057c578063aafd847a146105a8578063ba72a955146105ce5761021c565b806385a6b3ae146104ec5780638da5cb5b146104f457806391b89fba146104fc57806395d89b41146105225761021c565b806331e79db0116101a85780635183d6fd116101775780635183d6fd146104465780636a474002146104ae5780636f2789ec146104b657806370a08231146104be578063715018a6146104e45761021c565b806331e79db0146103a857806339509351146103d05780634ca6ef28146103fc5780634e7b827f146104205761021c565b8063226cfa3d116101ef578063226cfa3d1461030057806323b872dd1461032657806327ce01471461035c5780633009a60914610382578063313ce5671461038a5761021c565b806306fdde0314610221578063095ea7b31461029e57806309bbedde146102de57806318160ddd146102f8575b600080fd5b610229610727565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561026357818101518382015260200161024b565b50505050905090810190601f1680156102905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ca600480360360408110156102b457600080fd5b506001600160a01b0381351690602001356107bd565b604080519115158252519081900360200190f35b6102e66107db565b60408051918252519081900360200190f35b6102e66107e1565b6102e66004803603602081101561031657600080fd5b50356001600160a01b03166107e7565b6102ca6004803603606081101561033c57600080fd5b506001600160a01b038135811691602081013590911690604001356107f9565b6102e66004803603602081101561037257600080fd5b50356001600160a01b0316610880565b6102e66108df565b6103926108e5565b6040805160ff9092168252519081900360200190f35b6103ce600480360360208110156103be57600080fd5b50356001600160a01b03166108ea565b005b6102ca600480360360408110156103e657600080fd5b506001600160a01b038135169060200135610a46565b610404610a94565b604080516001600160a01b039092168252519081900360200190f35b6102ca6004803603602081101561043657600080fd5b50356001600160a01b0316610ab8565b6104636004803603602081101561045c57600080fd5b5035610acd565b604080516001600160a01b0390991689526020890197909752878701959095526060870193909352608086019190915260a085015260c084015260e083015251908190036101000190f35b6103ce610c2c565b6102e6610c63565b6102e6600480360360208110156104d457600080fd5b50356001600160a01b0316610c69565b6103ce610c84565b6102e6610d26565b610404610d2c565b6102e66004803603602081101561051257600080fd5b50356001600160a01b0316610d3b565b610229610d46565b6102ca6004803603604081101561054057600080fd5b506001600160a01b038135169060200135610da7565b6102e66004803603602081101561056c57600080fd5b50356001600160a01b0316610e0f565b6102ca6004803603604081101561059257600080fd5b506001600160a01b038135169060200135610e3b565b6102e6600480360360208110156105be57600080fd5b50356001600160a01b0316610e4f565b6103ce600480360360208110156105e457600080fd5b5035610e6a565b6102ca6004803603604081101561060157600080fd5b506001600160a01b0381351690602001351515610f54565b6102e6611029565b6102e66004803603604081101561063757600080fd5b506001600160a01b038135811691602001351661104d565b6103ce6004803603604081101561066557600080fd5b506001600160a01b038135169060200135611078565b6102e6611242565b6103ce6004803603602081101561069957600080fd5b5035611248565b6103ce600480360360208110156106b657600080fd5b50356001600160a01b0316611364565b610463600480360360208110156106dc57600080fd5b50356001600160a01b031661145d565b6107096004803603602081101561070257600080fd5b50356115d0565b60408051938452602084019290925282820152519081900360600190f35b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107b35780601f10610788576101008083540402835291602001916107b3565b820191906000526020600020905b81548152906001019060200180831161079657829003601f168201915b5050505050905090565b60006107d16107ca6116ce565b84846116d2565b5060015b92915050565b600a5490565b60025490565b60106020526000908152604090205481565b60006108068484846117be565b610876846108126116ce565b61087185604051806060016040528060288152602001611fcf602891396001600160a01b038a166000908152600160205260408120906108506116ce565b6001600160a01b0316815260208101919091526040016000205491906117f5565b6116d2565b5060019392505050565b6001600160a01b038116600090815260076020526040812054600160801b906108cf906108ca906108c46108bf6108b688610c69565b6006549061188c565b6118ec565b906118fc565b61192f565b816108d657fe5b0490505b919050565b600e5481565b601290565b6108f26116ce565b6005546001600160a01b03908116911614610942576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6001600160a01b0381166000908152600f602052604090205460ff161561096857600080fd5b6001600160a01b0381166000908152600f60205260408120805460ff19166001179055610996908290611942565b6040805163131836e760e21b8152600a60048201526001600160a01b0383166024820152905173__$b5c84be7e522c98c303ad318c067b85931$__91634c60db9c916044808301926000929190829003018186803b1580156109f757600080fd5b505af4158015610a0b573d6000803e3d6000fd5b50506040516001600160a01b03841692507fa878b31040b2e6d0a9a3d3361209db3908ba62014b0dca52adbaee451d128b259150600090a250565b60006107d1610a536116ce565b846108718560016000610a646116ce565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061199b565b7f000000000000000000000000000000000000000000000000000000000000000081565b600f6020526000908152604090205460ff1681565b600080600080600080600080600a73__$b5c84be7e522c98c303ad318c067b85931$__63deb3d89690916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610b2b57600080fd5b505af4158015610b3f573d6000803e3d6000fd5b505050506040513d6020811015610b5557600080fd5b50518910610b7c575060009650600019955085945086935083925082915081905080610c21565b6000600a73__$b5c84be7e522c98c303ad318c067b85931$__63d1aa9e7e90918c6040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610bd857600080fd5b505af4158015610bec573d6000803e3d6000fd5b505050506040513d6020811015610c0257600080fd5b50519050610c0f8161145d565b98509850985098509850985098509850505b919395975091939597565b60405162461bcd60e51b815260040180806020018281038252606f815260200180612038606f913960800191505060405180910390fd5b60115481565b6001600160a01b031660009081526020819052604090205490565b610c8c6116ce565b6005546001600160a01b03908116911614610cdc576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b60095481565b6005546001600160a01b031690565b60006107d582610e0f565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107b35780601f10610788576101008083540402835291602001916107b3565b60006107d1610db46116ce565b84610871856040518060600160405280602581526020016120fb6025913960016000610dde6116ce565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906117f5565b6001600160a01b0381166000908152600860205260408120546107d590610e3584610880565b906119f5565b60006107d1610e486116ce565b84846117be565b6001600160a01b031660009081526008602052604090205490565b610e726116ce565b6005546001600160a01b03908116911614610ec2576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6000610ecc6107e1565b11610ed657600080fd5b8015610f5157610f07610ee76107e1565b610ef583600160801b61188c565b81610efc57fe5b60065491900461199b565b60065560408051828152905133917fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511919081900360200190a2600954610f4d908261199b565b6009555b50565b6000610f5e6116ce565b6005546001600160a01b03908116911614610fae576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6000610fb984611a37565b9050801561101f576001600160a01b0384166000818152601060209081526040918290204290558151848152915186151593927fa2c38e2d2fb7e3e1912d937fd1ca11ed6d51864dee4cfa7a7bf02becd7acf09292908290030190a360019150506107d5565b5060009392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6110806116ce565b6005546001600160a01b039081169116146110d0576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6001600160a01b0382166000908152600f602052604090205460ff16156110f65761123e565b7f000000000000000000000000000000000000000000000000000000000000000081106111ac576111278282611942565b60408051632f0ad01760e21b8152600a60048201526001600160a01b038416602482015260448101839052905173__$b5c84be7e522c98c303ad318c067b85931$__9163bc2b405c916064808301926000929190829003018186803b15801561118f57600080fd5b505af41580156111a3573d6000803e3d6000fd5b50505050611231565b6111b7826000611942565b6040805163131836e760e21b8152600a60048201526001600160a01b0384166024820152905173__$b5c84be7e522c98c303ad318c067b85931$__91634c60db9c916044808301926000929190829003018186803b15801561121857600080fd5b505af415801561122c573d6000803e3d6000fd5b505050505b61123c826001610f54565b505b5050565b600e5490565b6112506116ce565b6005546001600160a01b039081169116146112a0576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b610e1081101580156112b55750620151808111155b6112f05760405162461bcd60e51b815260040180806020018281038252604f815260200180611f1e604f913960600191505060405180910390fd5b6011548114156113315760405162461bcd60e51b8152600401808060200182810382526041815260200180611f8e6041913960600191505060405180910390fd5b60115460405182907f474ea64804364a1e29a4487ddb63c3342a2dd826ccd8acf48825e680a0e6f20f90600090a3601155565b61136c6116ce565b6005546001600160a01b039081169116146113bc576040805162461bcd60e51b81526020600482018190526024820152600080516020611ff7833981519152604482015290519081900360640190fd5b6001600160a01b0381166114015760405162461bcd60e51b8152600401808060200182810382526026815260200180611ed66026913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b600080600080600080600080889750600a73__$b5c84be7e522c98c303ad318c067b85931$__6317e142d190918a6040518363ffffffff1660e01b815260040180838152602001826001600160a01b031681526020019250505060206040518083038186803b1580156114cf57600080fd5b505af41580156114e3573d6000803e3d6000fd5b505050506040513d60208110156114f957600080fd5b5051965060001995506000871261155d57600e5487111561152957600e54611522908890611bc6565b955061155d565b600e54600a546000911061153e57600061154d565b600e54600a5461154d916119f5565b905061155988826118fc565b9650505b61156688610e0f565b945061157188610880565b6001600160a01b03891660009081526010602052604090205490945092508261159b5760006115a9565b6011546115a990849061199b565b91504282116115b95760006115c3565b6115c382426119f5565b9050919395975091939597565b600a5460009081908190806115f0575050600e54600092508291506116c7565b600e546000805a90506000805b898410801561160b57508582105b156116b657600a54600190950194851061162457600094505b6000600a600001868154811061163657fe5b60009182526020808320909101546001600160a01b0316808352601090915260409091205490915061166790611bf8565b1561168357611677816001610f54565b15611683576001909101905b60019092019160005a9050808511156116ad576116aa6116a386836119f5565b879061199b565b95505b93506115fd9050565b600e85905590975095509193505050505b9193909250565b3390565b6001600160a01b0383166117175760405162461bcd60e51b81526004018080602001828103825260248152602001806120a76024913960400191505060405180910390fd5b6001600160a01b03821661175c5760405162461bcd60e51b8152600401808060200182810382526022815260200180611efc6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60405162461bcd60e51b81526004018080602001828103825260308152602001806120cb6030913960400191505060405180910390fd5b600081848411156118845760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611849578181015183820152602001611831565b50505050905090810190601f1680156118765780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008261189b575060006107d5565b828202828482816118a857fe5b04146118e55760405162461bcd60e51b8152600401808060200182810382526021815260200180611f6d6021913960400191505060405180910390fd5b9392505050565b600081818112156107d557600080fd5b60008282018183128015906119115750838112155b80611926575060008312801561192657508381125b6118e557600080fd5b60008082121561193e57600080fd5b5090565b600061194d83610c69565b90508082111561197557600061196383836119f5565b905061196f8482611c1f565b5061123c565b8082101561123c57600061198982846119f5565b90506119958482611c83565b50505050565b6000828201838110156118e5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006118e583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117f5565b600080611a4383610e0f565b90508015611bbd576001600160a01b038316600090815260086020526040902054611a6e908261199b565b6001600160a01b038416600081815260086020908152604091829020939093558051848152905191927fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d92918290030190a260007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015611b3957600080fd5b505af1158015611b4d573d6000803e3d6000fd5b505050506040513d6020811015611b6357600080fd5b5051905080611bb5576001600160a01b038416600090815260086020526040902054611b8f90836119f5565b6001600160a01b03851660009081526008602052604081209190915592506108da915050565b5090506108da565b50600092915050565b6000818303818312801590611bdb5750838113155b80611926575060008312801561192657508381136118e557600080fd5b600042821115611c0a575060006108da565b601154611c1742846119f5565b101592915050565b611c298282611cc7565b611c63611c446108bf8360065461188c90919063ffffffff16565b6001600160a01b03841660009081526007602052604090205490611bc6565b6001600160a01b0390921660009081526007602052604090209190915550565b611c8d8282611db7565b611c63611ca86108bf8360065461188c90919063ffffffff16565b6001600160a01b038416600090815260076020526040902054906118fc565b6001600160a01b038216611d22576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611d2e6000838361123c565b600254611d3b908261199b565b6002556001600160a01b038216600090815260208190526040902054611d61908261199b565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611dfc5760405162461bcd60e51b81526004018080602001828103825260218152602001806120176021913960400191505060405180910390fd5b611e088260008361123c565b611e4581604051806060016040528060228152602001611eb4602291396001600160a01b03851660009081526020819052604090205491906117f5565b6001600160a01b038316600090815260208190526040902055600254611e6b90826119f5565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d4f4e4559415641585f4469766964656e645f547261636b65723a20636c61696d57616974206d757374206265207570646174656420746f206265747765656e203120616e6420323420686f757273536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d4f4e4559415641585f4469766964656e645f547261636b65723a2043616e6e6f742075706461746520636c61696d5761697420746f2073616d652076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f20616464726573734d4f4e4559415641585f4469766964656e645f547261636b65723a2077697468647261774469766964656e642064697361626c65642e20557365207468652027636c61696d272066756e6374696f6e206f6e20746865206d61696e204d4f4e45594156415820636f6e74726163742e45524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734d4f4e4559415641585f4469766964656e645f547261636b65723a204e6f207472616e736665727320616c6c6f77656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c8a571dbf0b3795b30604026379bf037a831e3cac31721d0856c2dd3b5b9f8e264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xBC4C4B37 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE7841EC0 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE7841EC0 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0xE98030C7 EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xFBCBC0F1 EQ PUSH2 0x6C6 JUMPI DUP1 PUSH4 0xFFB2C479 EQ PUSH2 0x6EC JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xBC4C4B37 EQ PUSH2 0x5EB JUMPI DUP1 PUSH4 0xBE10B614 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xE30443BC EQ PUSH2 0x64F JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x5CE JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x522 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x31E79DB0 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5183D6FD GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5183D6FD EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x6F2789EC EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4E4 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x31E79DB0 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x4E7B827F EQ PUSH2 0x420 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x226CFA3D GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x226CFA3D EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x3009A609 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x38A JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x9BBEDDE EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x263 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x880 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x392 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x404 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP10 AND DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP8 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x100 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0xC2C JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0xC63 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x404 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x229 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE3B JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x104D JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1248 JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x145D JUMP JUMPDEST PUSH2 0x709 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x788 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x796 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0x7CA PUSH2 0x16CE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x16D2 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP5 DUP5 DUP5 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x876 DUP5 PUSH2 0x812 PUSH2 0x16CE JUMP JUMPDEST PUSH2 0x871 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FCF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x850 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x16D2 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x8CF SWAP1 PUSH2 0x8CA SWAP1 PUSH2 0x8C4 PUSH2 0x8BF PUSH2 0x8B6 DUP9 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x18EC JUMP JUMPDEST SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x192F JUMP JUMPDEST DUP2 PUSH2 0x8D6 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH2 0x8F2 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x942 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x996 SWAP1 DUP3 SWAP1 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x131836E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x4C60DB9C SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH32 0xA878B31040B2E6D0A9A3D3361209DB3908BA62014B0DCA52ADBAEE451D128B25 SWAP2 POP PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0xA53 PUSH2 0x16CE JUMP JUMPDEST DUP5 PUSH2 0x871 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xA64 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x199B JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA PUSH20 0x0 PUSH4 0xDEB3D896 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xB3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP10 LT PUSH2 0xB7C JUMPI POP PUSH1 0x0 SWAP7 POP PUSH1 0x0 NOT SWAP6 POP DUP6 SWAP5 POP DUP7 SWAP4 POP DUP4 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH20 0x0 PUSH4 0xD1AA9E7E SWAP1 SWAP2 DUP13 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xC0F DUP2 PUSH2 0x145D JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2038 PUSH1 0x6F SWAP2 CODECOPY PUSH1 0x80 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC8C PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCDC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D5 DUP3 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x788 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0xDB4 PUSH2 0x16CE JUMP JUMPDEST DUP5 PUSH2 0x871 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDDE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x7D5 SWAP1 PUSH2 0xE35 DUP5 PUSH2 0x880 JUMP JUMPDEST SWAP1 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH2 0xE48 PUSH2 0x16CE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE72 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECC PUSH2 0x7E1 JUMP JUMPDEST GT PUSH2 0xED6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xF51 JUMPI PUSH2 0xF07 PUSH2 0xEE7 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0xEF5 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x188C JUMP JUMPDEST DUP2 PUSH2 0xEFC JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0x199B JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0xF4D SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x9 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5E PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFAE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFB9 DUP5 PUSH2 0x1A37 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x101F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP2 MLOAD DUP7 ISZERO ISZERO SWAP4 SWAP3 PUSH32 0xA2C38E2D2FB7E3E1912D937FD1CA11ED6D51864DEE4CFA7A7BF02BECD7ACF092 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP PUSH2 0x7D5 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1080 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10D0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x123E JUMP JUMPDEST PUSH32 0x0 DUP2 LT PUSH2 0x11AC JUMPI PUSH2 0x1127 DUP3 DUP3 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x2F0AD017 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0xBC2B405C SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x11A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1231 JUMP JUMPDEST PUSH2 0x11B7 DUP3 PUSH1 0x0 PUSH2 0x1942 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x131836E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH20 0x0 SWAP2 PUSH4 0x4C60DB9C SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x122C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x123C DUP3 PUSH1 0x1 PUSH2 0xF54 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1250 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x12A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x12B5 JUMPI POP PUSH3 0x15180 DUP2 GT ISZERO JUMPDEST PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F1E PUSH1 0x4F SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 SLOAD DUP2 EQ ISZERO PUSH2 0x1331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x41 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F8E PUSH1 0x41 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH32 0x474EA64804364A1E29A4487DDB63C3342A2DD826CCD8ACF48825E680A0E6F20F SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0x136C PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x13BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FF7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ED6 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP9 SWAP8 POP PUSH1 0xA PUSH20 0x0 PUSH4 0x17E142D1 SWAP1 SWAP2 DUP11 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x14E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 NOT SWAP6 POP PUSH1 0x0 DUP8 SLT PUSH2 0x155D JUMPI PUSH1 0xE SLOAD DUP8 GT ISZERO PUSH2 0x1529 JUMPI PUSH1 0xE SLOAD PUSH2 0x1522 SWAP1 DUP9 SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST SWAP6 POP PUSH2 0x155D JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xA SLOAD PUSH1 0x0 SWAP2 LT PUSH2 0x153E JUMPI PUSH1 0x0 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xA SLOAD PUSH2 0x154D SWAP2 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1559 DUP9 DUP3 PUSH2 0x18FC JUMP JUMPDEST SWAP7 POP POP JUMPDEST PUSH2 0x1566 DUP9 PUSH2 0xE0F JUMP JUMPDEST SWAP5 POP PUSH2 0x1571 DUP9 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP5 POP SWAP3 POP DUP3 PUSH2 0x159B JUMPI PUSH1 0x0 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x15A9 SWAP1 DUP5 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP2 POP TIMESTAMP DUP3 GT PUSH2 0x15B9 JUMPI PUSH1 0x0 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x15C3 DUP3 TIMESTAMP PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP1 PUSH2 0x15F0 JUMPI POP POP PUSH1 0xE SLOAD PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 DUP1 GAS SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP10 DUP5 LT DUP1 ISZERO PUSH2 0x160B JUMPI POP DUP6 DUP3 LT JUMPDEST ISZERO PUSH2 0x16B6 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 SWAP1 SWAP6 ADD SWAP5 DUP6 LT PUSH2 0x1624 JUMPI PUSH1 0x0 SWAP5 POP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1636 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1667 SWAP1 PUSH2 0x1BF8 JUMP JUMPDEST ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1677 DUP2 PUSH1 0x1 PUSH2 0xF54 JUMP JUMPDEST ISZERO PUSH2 0x1683 JUMPI PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x0 GAS SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AA PUSH2 0x16A3 DUP7 DUP4 PUSH2 0x19F5 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x199B JUMP JUMPDEST SWAP6 POP JUMPDEST SWAP4 POP PUSH2 0x15FD SWAP1 POP JUMP JUMPDEST PUSH1 0xE DUP6 SWAP1 SSTORE SWAP1 SWAP8 POP SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20A7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x175C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EFC PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20CB PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1849 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1831 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1876 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x189B JUMPI POP PUSH1 0x0 PUSH2 0x7D5 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x18A8 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x18E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F6D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x1911 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x1926 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x1926 JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194D DUP4 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 PUSH2 0x1963 DUP4 DUP4 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x196F DUP5 DUP3 PUSH2 0x1C1F JUMP JUMPDEST POP PUSH2 0x123C JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 PUSH2 0x1989 DUP3 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1995 DUP5 DUP3 PUSH2 0x1C83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A43 DUP4 PUSH2 0xE0F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1BBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A6E SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x1BB5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B8F SWAP1 DUP4 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x8DA SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x8DA JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SUB DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x1BDB JUMPI POP DUP4 DUP2 SGT ISZERO JUMPDEST DUP1 PUSH2 0x1926 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x1926 JUMPI POP DUP4 DUP2 SGT PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 GT ISZERO PUSH2 0x1C0A JUMPI POP PUSH1 0x0 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1C17 TIMESTAMP DUP5 PUSH2 0x19F5 JUMP JUMPDEST LT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C29 DUP3 DUP3 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x1C63 PUSH2 0x1C44 PUSH2 0x8BF DUP4 PUSH1 0x6 SLOAD PUSH2 0x188C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x1C8D DUP3 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST PUSH2 0x1C63 PUSH2 0x1CA8 PUSH2 0x8BF DUP4 PUSH1 0x6 SLOAD PUSH2 0x188C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1D2E PUSH1 0x0 DUP4 DUP4 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D3B SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D61 SWAP1 DUP3 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2017 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E08 DUP3 PUSH1 0x0 DUP4 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x1E45 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EB4 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x1E6B SWAP1 DUP3 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x4D4F4E4559415641585F4469766964656E645F54 PUSH19 0x61636B65723A20636C61696D57616974206D75 PUSH20 0x74206265207570646174656420746F2062657477 PUSH6 0x656E20312061 PUSH15 0x6420323420686F757273536166654D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774D4F4E455941564158 0x5F DIFFICULTY PUSH10 0x766964656E645F547261 PUSH4 0x6B65723A KECCAK256 NUMBER PUSH2 0x6E6E PUSH16 0x742075706461746520636C61696D5761 PUSH10 0x7420746F2073616D6520 PUSH23 0x616C756545524332303A207472616E7366657220616D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654F77 PUSH15 0x61626C653A2063616C6C6572206973 KECCAK256 PUSH15 0x6F7420746865206F776E6572455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F20616464726573734D4F4E4559415641585F446976696465 PUSH15 0x645F547261636B65723A2077697468 PUSH5 0x7261774469 PUSH23 0x6964656E642064697361626C65642E2055736520746865 KECCAK256 0x27 PUSH4 0x6C61696D 0x27 KECCAK256 PUSH7 0x756E6374696F6E KECCAK256 PUSH16 0x6E20746865206D61696E204D4F4E4559 COINBASE JUMP COINBASE PC KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 0x2E GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 0x4D 0x4F 0x4E GASLIMIT MSIZE COINBASE JUMP COINBASE PC 0x5F DIFFICULTY PUSH10 0x766964656E645F547261 PUSH4 0x6B65723A KECCAK256 0x4E PUSH16 0x207472616E736665727320616C6C6F77 PUSH6 0x644552433230 GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C8A5 PUSH18 0xDBF0B3795B30604026379BF037A831E3CAC3 OR 0x21 0xD0 DUP6 PUSH13 0x2DD3B5B9F8E264736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "319:6471:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4215:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2422:117:11;;;:::i;:::-;;;;;;;;;;;;;;;;3206:106:4;;;:::i;659:50:11:-;;;;;;;;;;;;;;;;-1:-1:-1;659:50:11;-1:-1:-1;;;;;659:50:11;;:::i;4848:347:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4848:347:4;;;;;;;;;;;;;;;;;:::i;5587:244:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5587:244:1;-1:-1:-1;;;;;5587:244:1;;:::i;558:33:11:-;;;:::i;3055:91:4:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1603:275:11;;;;;;;;;;;;;;;;-1:-1:-1;1603:275:11;-1:-1:-1;;;;;1603:275:11;;:::i;:::-;;5590:215:4;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5590:215:4;;;;;;;;:::i;1099:83:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1099:83:1;;;;;;;;;;;;;;598:54:11;;;;;;;;;;;;;;;;-1:-1:-1;598:54:11;-1:-1:-1;;;;;598:54:11;;:::i;4180:488::-;;;;;;;;;;;;;;;;-1:-1:-1;4180:488:11;;:::i;:::-;;;;-1:-1:-1;;;;;4180:488:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1407:190;;;:::i;716:24::-;;;:::i;3370:125:4:-;;;;;;;;;;;;;;;;-1:-1:-1;3370:125:4;-1:-1:-1;;;;;3370:125:4;;:::i;1196:145:12:-;;;:::i;2568:40:1:-;;;:::i;573:77:12:-;;;:::i;4325:122:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4325:122:1;-1:-1:-1;;;;;4325:122:1;;:::i;2329:102:4:-;;;:::i;6292:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6292:266:4;;;;;;;;:::i;4653:166:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4653:166:1;-1:-1:-1;;;;;4653:166:1;;:::i;3698:172:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3698:172:4;;;;;;;;:::i;5027:127:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5027:127:1;-1:-1:-1;;;;;5027:127:1;;:::i;2709:380::-;;;;;;;;;;;;;;;;-1:-1:-1;2709:380:1;;:::i;6455:333:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6455:333:11;;;;;;;;;;:::i;746:56::-;;;:::i;3928:149:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3928:149:4;;;;;;;;;;:::i;4893:445:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4893:445:11;;;;;;;;:::i;2313:103::-;;;:::i;1884:423::-;;;;;;;;;;;;;;;;-1:-1:-1;1884:423:11;;:::i;1490:240:12:-;;;;;;;;;;;;;;;;-1:-1:-1;1490:240:12;-1:-1:-1;;;;;1490:240:12;;:::i;2547:1627:11:-;;;;;;;;;;;;;;;;-1:-1:-1;2547:1627:11;-1:-1:-1;;;;;2547:1627:11;;:::i;5344:1105::-;;;;;;;;;;;;;;;;-1:-1:-1;5344:1105:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98:4;2204:5;2197:12;;;;;;;;-1:-1:-1;;2197:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:13;;2197:12;;2204:5;;2197:12;;2204:5;2197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;:::o;4215:166::-;4298:4;4314:39;4323:12;:10;:12::i;:::-;4337:7;4346:6;4314:8;:39::i;:::-;-1:-1:-1;4370:4:4;4215:166;;;;;:::o;2422:117:11:-;2505:15;:27;2422:117;:::o;3206:106:4:-;3293:12;;3206:106;:::o;659:50:11:-;;;;;;;;;;;;;:::o;4848:347:4:-;4984:4;5000:36;5010:6;5018:9;5029:6;5000:9;:36::i;:::-;5046:121;5055:6;5063:12;:10;:12::i;:::-;5077:89;5115:6;5077:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5077:19:4;;;;;;:11;:19;;;;;;5097:12;:10;:12::i;:::-;-1:-1:-1;;;;;5077:33:4;;;;;;;;;;;;-1:-1:-1;5077:33:4;;;:89;:37;:89::i;:::-;5046:8;:121::i;:::-;-1:-1:-1;5184:4:4;4848:347;;;;;:::o;5587:244:1:-;-1:-1:-1;;;;;5761:36:1;;5664:7;5761:36;;;:28;:36;;;;;;-1:-1:-1;;;1492:6:1;5686:128;;:112;;:63;:48;5716:17;5790:6;5716:9;:17::i;:::-;5686:25;;;:29;:48::i;:::-;:61;:63::i;:::-;:74;;:112::i;:::-;:126;:128::i;:::-;:140;;;;;;5679:147;;5587:244;;;;:::o;558:33:11:-;;;;:::o;3055:91:4:-;3137:2;3055:91;:::o;1603:275:11:-;787:12:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;769:67:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;1685:30:11;::::1;;::::0;;;:21:::1;:30;::::0;;;;;::::1;;1684:31;1676:40;;;::::0;::::1;;-1:-1:-1::0;;;;;1723:30:11;::::1;;::::0;;;:21:::1;:30;::::0;;;;:37;;-1:-1:-1;;1723:37:11::1;1756:4;1723:37;::::0;;1768:23:::1;::::0;1745:7;;1768:11:::1;:23::i;:::-;1798:31;::::0;;-1:-1:-1;;;1798:31:11;;:15:::1;:31;::::0;::::1;::::0;-1:-1:-1;;;;;1798:31:11;::::1;::::0;;;;;;:22:::1;::::0;::::1;::::0;:31;;;;;-1:-1:-1;;1798:31:11;;;;;;;:22;:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1842:29:11::1;::::0;-1:-1:-1;;;;;1842:29:11;::::1;::::0;-1:-1:-1;1842:29:11::1;::::0;-1:-1:-1;1842:29:11;;::::1;1603:275:::0;:::o;5590:215:4:-;5678:4;5694:83;5703:12;:10;:12::i;:::-;5717:7;5726:50;5765:10;5726:11;:25;5738:12;:10;:12::i;:::-;-1:-1:-1;;;;;5726:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5726:25:4;;;:34;;;;;;;;;;;:38;:50::i;1099:83:1:-;;;:::o;598:54:11:-;;;;;;;;;;;;;;;:::o;4180:488::-;4264:7;4285:6;4305;4325:7;4346;4367;4388;4409;4437:15;:20;;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4437:22:11;4428:31;;4425:135;;-1:-1:-1;4483:42:11;;-1:-1:-1;;;4527:2:11;-1:-1:-1;4527:2:11;;-1:-1:-1;4483:42:11;;-1:-1:-1;4483:42:11;;-1:-1:-1;4483:42:11;;-1:-1:-1;4483:42:11;;-1:-1:-1;4483:42:11;4475:74;;4425:135;4570:15;4588;:29;;;;4618:5;4588:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4588:36:11;;-1:-1:-1;4642:19:11;4588:36;4642:10;:19::i;:::-;4635:26;;;;;;;;;;;;;;;;;4180:488;;;;;;;;;;:::o;1407:190::-;1461:129;;-1:-1:-1;;;1461:129:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:24;;;;:::o;3370:125:4:-;-1:-1:-1;;;;;3470:18:4;3444:7;3470:18;;;;;;;;;;;;3370:125::o;1196:145:12:-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;769:67:12;;;;;;;;;;;;;;;1286:6:::1;::::0;1265:40:::1;::::0;1302:1:::1;::::0;-1:-1:-1;;;;;1286:6:12::1;::::0;1265:40:::1;::::0;1302:1;;1265:40:::1;1315:6;:19:::0;;-1:-1:-1;;;;;;1315:19:12::1;::::0;;1196:145::o;2568:40:1:-;;;;:::o;573:77:12:-;637:6;;-1:-1:-1;;;;;637:6:12;573:77;:::o;4325:122:1:-;4390:7;4412:30;4435:6;4412:22;:30::i;2329:102:4:-;2417:7;2410:14;;;;;;;;-1:-1:-1;;2410:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:13;;2410:14;;2417:7;;2410:14;;2417:7;2410:14;;;;;;;;;;;;;;;;;;;;;;;;6292:266;6385:4;6401:129;6410:12;:10;:12::i;:::-;6424:7;6433:96;6472:15;6433:96;;;;;;;;;;;;;;;;;:11;:25;6445:12;:10;:12::i;:::-;-1:-1:-1;;;;;6433:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6433:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;4653:166:1:-;-1:-1:-1;;;;;4787:26:1;;4730:7;4787:26;;;:18;:26;;;;;;4752:62;;:30;4806:6;4752:22;:30::i;:::-;:34;;:62::i;3698:172:4:-;3784:4;3800:42;3810:12;:10;:12::i;:::-;3824:9;3835:6;3800:9;:42::i;5027:127:1:-;-1:-1:-1;;;;;5123:26:1;5101:7;5123:26;;;:18;:26;;;;;;;5027:127::o;2709:380::-;787:12:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;769:67:12;;;;;;;;;;;;;;;2804:1:1::1;2788:13;:11;:13::i;:::-;:17;2780:26;;;::::0;::::1;;2817:10:::0;;2813:272:::1;;2865:86;2930:13;:11;:13::i;:::-;2904:23;2905:6:::0;-1:-1:-1;;;2904:12:1::1;:23::i;:::-;:39;;;;;2865:25;::::0;;2904:39;::::1;2865:29;:86::i;:::-;2837:25;:114:::0;2964:40:::1;::::0;;;;;;;2985:10:::1;::::0;2964:40:::1;::::0;;;;;::::1;::::0;;::::1;3041:25;::::0;:37:::1;::::0;3071:6;3041:29:::1;:37::i;:::-;3013:25;:65:::0;2813:272:::1;2709:380:::0;:::o;6455:333:11:-;6546:4;787:12:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;769:67:12;;;;;;;;;;;;;;;6562:14:11::1;6579:32;6603:7;6579:23;:32::i;:::-;6562:49:::0;-1:-1:-1;6622:10:11;;6619:143:::1;;-1:-1:-1::0;;;;;6642:23:11;::::1;;::::0;;;:14:::1;:23;::::0;;;;;;;;6668:15:::1;6642:41:::0;;6702:33;;;;;;;;::::1;;::::0;6642:23;6702:33:::1;::::0;;;;;;;::::1;6750:4;6743:11;;;;;6619:143;-1:-1:-1::0;6776:5:11::1;::::0;6455:333;-1:-1:-1;;;6455:333:11:o;746:56::-;;;:::o;3928:149:4:-;-1:-1:-1;;;;;4043:18:4;;;4017:7;4043:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3928:149::o;4893:445:11:-;787:12:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;769:67:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;4987:30:11;::::1;;::::0;;;:21:::1;:30;::::0;;;;;::::1;;4984:57;;;5027:7;;4984:57;5065:31;5051:10;:45;5048:247;;5112:32;5124:7;5133:10;5112:11;:32::i;:::-;5152:40;::::0;;-1:-1:-1;;;5152:40:11;;:15:::1;:40;::::0;::::1;::::0;-1:-1:-1;;;;;5152:40:11;::::1;::::0;;;;;;;;;;;;:19:::1;::::0;::::1;::::0;:40;;;;;-1:-1:-1;;5152:40:11;;;;;;;:19;:40;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5048:247;;;5225:23;5237:7;5246:1;5225:11;:23::i;:::-;5256:31;::::0;;-1:-1:-1;;;5256:31:11;;:15:::1;:31;::::0;::::1;::::0;-1:-1:-1;;;;;5256:31:11;::::1;::::0;;;;;;:22:::1;::::0;::::1;::::0;:31;;;;;-1:-1:-1;;5256:31:11;;;;;;;:22;:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5048:247;5302:29;5317:7;5326:4;5302:14;:29::i;:::-;;846:1:12;4893:445:11::0;;:::o;2313:103::-;2391:18;;2313:103;:::o;1884:423::-;787:12:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;769:67:12;;;;;;;;;;;;;;;1984:4:11::1;1968:12;:20;;:45;;;;;2008:5;1992:12;:21;;1968:45;1960:137;;;;-1:-1:-1::0;;;1960:137:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:9;;2115:12;:25;;2107:103;;;;-1:-1:-1::0;;;2107:103:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:9;::::0;2225:41:::1;::::0;2242:12;;2225:41:::1;::::0;;;::::1;2276:9;:24:::0;1884:423::o;1490:240:12:-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;769:67:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;1578:22:12;::::1;1570:73;;;;-1:-1:-1::0;;;1570:73:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:6;::::0;1658:38:::1;::::0;-1:-1:-1;;;;;1658:38:12;;::::1;::::0;1679:6:::1;::::0;1658:38:::1;::::0;1679:6:::1;::::0;1658:38:::1;1706:6;:17:::0;;-1:-1:-1;;;;;;1706:17:12::1;-1:-1:-1::0;;;;;1706:17:12;;;::::1;::::0;;;::::1;::::0;;1490:240::o;2547:1627:11:-;2627:15;2656:12;2682:31;2727:29;2770:22;2806:21;2841;2876:38;2936:8;2926:18;;2963:15;:29;;;;2993:7;2963:38;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2963:38:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2963:38:11;;-1:-1:-1;;;3039:2:11;-1:-1:-1;3064:1:11;3055:10;;3052:570;;3101:18;;3092:5;3084:35;3081:531;;;3183:18;;3166:37;;:5;;:9;:37::i;:::-;3139:64;;3081:531;;;3319:18;;3289:15;:27;3254:32;;-1:-1:-1;3289:218:11;;3506:1;3289:218;;;3428:18;;3396:15;:27;:51;;:31;:51::i;:::-;3254:253;-1:-1:-1;3554:43:11;:5;3254:253;3554:9;:43::i;:::-;3527:70;;3081:531;;3657:31;3680:7;3657:22;:31::i;:::-;3633:55;;3715:31;3738:7;3715:22;:31::i;:::-;-1:-1:-1;;;;;3773:23:11;;;;;;:14;:23;;;;;;3698:48;;-1:-1:-1;3773:23:11;-1:-1:-1;3823:17:11;:124;;3946:1;3823:124;;;3897:9;;3879:28;;:13;;:17;:28::i;:::-;3807:140;;4007:15;3991:13;:31;:176;;4166:1;3991:176;;;4077:34;:13;4095:15;4077:17;:34::i;:::-;3958:209;;2547:1627;;;;;;;;;:::o;5344:1105::-;5455:15;:27;5390:7;;;;;;5493:25;5490:79;;-1:-1:-1;;5542:18:11;;5536:1;;-1:-1:-1;5536:1:11;;-1:-1:-1;5528:33:11;;5490:79;5606:18;;5576:27;;5677:9;5659:27;;5694:18;5723:14;5749:591;5765:3;5755:7;:13;:50;;;;;5785:20;5772:10;:33;5755:50;5749:591;;;5871:15;:27;5815:21;;;;;5848:50;;5845:96;;5931:1;5909:23;;5845:96;5949:15;5967;:20;;5988:19;5967:41;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5967:41:11;6033:23;;;:14;:23;;;;;;;;5967:41;;-1:-1:-1;6020:37:11;;:12;:37::i;:::-;6017:130;;;6071:38;6094:7;6104:4;6071:14;:38::i;:::-;6068:71;;;6121:8;;;;;6068:71;6155:12;;;;;6176:18;6197:9;6176:30;;6228:10;6218:7;:20;6215:89;;;6259:36;6271:23;:7;6283:10;6271:11;:23::i;:::-;6259:7;;:11;:36::i;:::-;6249:46;;6215:89;6322:10;-1:-1:-1;5749:591:11;;-1:-1:-1;5749:591:11;;6347:18;:40;;;6403:10;;-1:-1:-1;6415:6:11;-1:-1:-1;6368:19:11;;-1:-1:-1;;;;5344:1105:11;;;;;;:::o;586:96:0:-;665:10;586:96;:::o;9391:370:4:-;-1:-1:-1;;;;;9522:19:4;;9514:68;;;;-1:-1:-1;;;9514:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9600:21:4;;9592:68;;;;-1:-1:-1;;;9592:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9671:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9722:32;;;;;;;;;;;;;;;;;9391:370;;;:::o;1254:147:11:-;1328:66;;-1:-1:-1;;;1328:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1182:187:13;1268:7;1303:12;1295:6;;;;1287:29;;;;-1:-1:-1;;;1287:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1338:5:13;;;1182:187::o;1616:459::-;1674:7;1915:6;1911:45;;-1:-1:-1;1944:1:13;1937:8;;1911:45;1978:5;;;1982:1;1978;:5;:1;2001:5;;;;;:10;1993:56;;;;-1:-1:-1;;;1993:56:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:1;1616:459;-1:-1:-1;;;1616:459:13:o;178:130:15:-;234:6;266:1;282:6;;;;274:15;;;;;2478:172:14;2534:6;2563:5;;;2587:6;;;;;;:16;;;2602:1;2597;:6;;2587:16;2586:38;;;;2613:1;2609;:5;:14;;;;;2622:1;2618;:5;2609:14;2578:47;;;;;2868:124;2924:7;2956:1;2951;:6;;2943:15;;;;;;-1:-1:-1;2983:1:14;2868:124::o;7552:397:1:-;7625:22;7650:18;7660:7;7650:9;:18::i;:::-;7625:43;;7691:14;7678:10;:27;7675:270;;;7715:18;7736:30;:10;7751:14;7736;:30::i;:::-;7715:51;;7774:26;7780:7;7789:10;7774:5;:26::i;:::-;7675:270;;;;7829:14;7816:10;:27;7813:132;;;7853:18;7874:30;:14;7893:10;7874:18;:30::i;:::-;7853:51;;7912:26;7918:7;7927:10;7912:5;:26::i;:::-;7813:132;7552:397;;;:::o;310:176:13:-;368:7;399:5;;;422:6;;;;414:46;;;;;-1:-1:-1;;;414:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;;757:134;815:7;841:43;845:1;848;841:43;;;;;;;;;;;;;;;;;:3;:43::i;3516:602:1:-;3589:7;3604:29;3636:28;3659:4;3636:22;:28::i;:::-;3604:60;-1:-1:-1;3674:25:1;;3670:429;;-1:-1:-1;;;;;3736:24:1;;;;;;:18;:24;;;;;;:51;;3765:21;3736:28;:51::i;:::-;-1:-1:-1;;;;;3709:24:1;;;;;;:18;:24;;;;;;;;;:78;;;;3800:46;;;;;;;3709:24;;3800:46;;;;;;;;;3854:12;3876:4;-1:-1:-1;;;;;3869:21:1;;3891:4;3897:21;3869:50;;;;;;;;;;;;;-1:-1:-1;;;;;3869:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3869:50:1;;-1:-1:-1;3869:50:1;3928:128;;-1:-1:-1;;;;;3978:24:1;;;;;;:18;:24;;;;;;:51;;4007:21;3978:28;:51::i;:::-;-1:-1:-1;;;;;3951:24:1;;;;;;:18;:24;;;;;:78;;;;:24;-1:-1:-1;4039:8:1;;-1:-1:-1;;4039:8:1;3928:128;-1:-1:-1;4071:21:1;-1:-1:-1;4064:28:1;;3670:429;-1:-1:-1;4112:1:1;;3516:602;-1:-1:-1;;3516:602:1:o;2223:172:14:-;2279:6;2308:5;;;2332:6;;;;;;:16;;;2347:1;2342;:6;;2332:16;2331:38;;;;2358:1;2354;:5;:14;;;;;2367:1;2363;:5;2323:47;;;;;4674:213:11;4741:4;4773:15;4757:13;:31;4754:65;;;-1:-1:-1;4806:5:11;4799:12;;4754:65;4871:9;;4833:34;:15;4853:13;4833:19;:34::i;:::-;:47;;;4674:213;-1:-1:-1;;4674:213:11:o;6769:255:1:-;6840:27;6852:7;6861:5;6840:11;:27::i;:::-;6914:105;6964:53;6965:36;6995:5;6965:25;;:29;;:36;;;;:::i;6964:53::-;-1:-1:-1;;;;;6914:37:1;;;;;;:28;:37;;;;;;;:48;:105::i;:::-;-1:-1:-1;;;;;6874:37:1;;;;;;;:28;:37;;;;;:145;;;;-1:-1:-1;6769:255:1:o;7293:::-;7364:27;7376:7;7385:5;7364:11;:27::i;:::-;7438:105;7488:53;7489:36;7519:5;7489:25;;:29;;:36;;;;:::i;7488:53::-;-1:-1:-1;;;;;7438:37:1;;;;;;:28;:37;;;;;;;:48;:105::i;7868:370:4:-;-1:-1:-1;;;;;7951:21:4;;7943:65;;;;;-1:-1:-1;;;7943:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;8019:49;8048:1;8052:7;8061:6;8019:20;:49::i;:::-;8094:12;;:24;;8111:6;8094:16;:24::i;:::-;8079:12;:39;-1:-1:-1;;;;;8149:18:4;;:9;:18;;;;;;;;;;;:30;;8172:6;8149:22;:30::i;:::-;-1:-1:-1;;;;;8128:18:4;;:9;:18;;;;;;;;;;;:51;;;;8194:37;;;;;;;8128:18;;:9;;8194:37;;;;;;;;;;7868:370;;:::o;8558:410::-;-1:-1:-1;;;;;8641:21:4;;8633:67;;;;-1:-1:-1;;;8633:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8711:49;8732:7;8749:1;8753:6;8711:20;:49::i;:::-;8792:68;8815:6;8792:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8792:18:4;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8771:18:4;;:9;:18;;;;;;;;;;:89;8885:12;;:24;;8902:6;8885:16;:24::i;:::-;8870:12;:39;8924:37;;;;;;;;8950:1;;-1:-1:-1;;;;;8924:37:4;;;;;;;;;;;;8558:410;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1706600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CAKE()": "infinite",
								"accumulativeDividendOf(address)": "infinite",
								"allowance(address,address)": "1339",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1256",
								"claimWait()": "1087",
								"decimals()": "341",
								"decreaseAllowance(address,uint256)": "infinite",
								"distributeCAKEDividends(uint256)": "infinite",
								"dividendOf(address)": "infinite",
								"excludeFromDividends(address)": "infinite",
								"excludedFromDividends(address)": "1248",
								"getAccount(address)": "infinite",
								"getAccountAtIndex(uint256)": "infinite",
								"getLastProcessedIndex()": "1042",
								"getNumberOfTokenHolders()": "1089",
								"increaseAllowance(address,uint256)": "infinite",
								"lastClaimTimes(address)": "1170",
								"lastProcessedIndex()": "1110",
								"minimumTokenBalanceForDividends()": "infinite",
								"name()": "infinite",
								"owner()": "1105",
								"process(uint256)": "infinite",
								"processAccount(address,bool)": "infinite",
								"renounceOwnership()": "infinite",
								"setBalance(address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalDividendsDistributed()": "1044",
								"totalSupply()": "1111",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateClaimWait(uint256)": "infinite",
								"withdrawDividend()": "infinite",
								"withdrawableDividendOf(address)": "infinite",
								"withdrawnDividendOf(address)": "1253"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite",
								"canAutoClaim(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1099,
									"end": 1182,
									"name": "PUSH",
									"source": 1,
									"value": "B6076C93701D6A07266C31066B298AEC6DD65C2D000000000000000000000000"
								},
								{
									"begin": 1099,
									"end": 1182,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1099,
									"end": 1182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1030,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "4D4F4E4559415641585F4469766964656E5F547261636B657200000000000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "1A"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "PUSH",
									"source": 1,
									"value": "4D4F4E4559415641585F4469766964656E645F547261636B6572000000000000"
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2613,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 372,
									"end": 389,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 414,
									"end": 420,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 12,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 447,
									"end": 490,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1149,
									"end": 1153,
									"name": "PUSH",
									"source": 11,
									"value": "E10"
								},
								{
									"begin": 1137,
									"end": 1146,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1137,
									"end": 1153,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1197,
									"end": 1214,
									"name": "PUSH",
									"source": 11,
									"value": "2A5A058FC295ED000000"
								},
								{
									"begin": 1163,
									"end": 1214,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1163,
									"end": 1214,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 586,
									"end": 682,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "2065"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 6790,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8a571dbf0b3795b30604026379bf037a831e3cac31721d0856c2dd3b5b9f8e264736f6c634300060c0033",
									".code": [
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "85A6B3AE"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "BC4C4B37"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "E7841EC0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "E7841EC0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "E98030C7"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "FBCBC0F1"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "FFB2C479"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "BC4C4B37"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "BE10B614"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "E30443BC"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "A457C2D7"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "A457C2D7"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "A8B9D240"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "AAFD847A"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "BA72A955"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "85A6B3AE"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "91B89FBA"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "31E79DB0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "5183D6FD"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "5183D6FD"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "6A474002"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "6F2789EC"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "31E79DB0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "39509351"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "4CA6EF28"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "4E7B827F"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "226CFA3D"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "226CFA3D"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "27CE0147"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "3009A609"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "9BBEDDE"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 319,
											"end": 6790,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 659,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 659,
											"end": 709,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 558,
											"end": 591,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 558,
											"end": 591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 558,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 558,
											"end": 591,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 598,
											"end": 652,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 652,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 598,
											"end": 652,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1407,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1407,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1407,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 716,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 802,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 746,
											"end": 802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 746,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 746,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 746,
											"end": 802,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4323,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4344,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2505,
											"end": 2520,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2505,
											"end": 2532,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 659,
											"end": 709,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5063,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5097,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5789,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5790,
											"end": 5796,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5686,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5686,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5686,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5686,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5826,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 558,
											"end": 591,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 558,
											"end": 591,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 591,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 558,
											"end": 591,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 558,
											"end": 591,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 558,
											"end": 591,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1706,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1715,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1744,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1753,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1760,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1723,
											"end": 1760,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1723,
											"end": 1760,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1760,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1768,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1768,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1745,
											"end": 1752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1745,
											"end": 1752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1768,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1768,
											"end": 1791,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1768,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131836E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1813,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1820,
											"name": "PUSHLIB",
											"source": 11,
											"value": "IterableMapping.sol:IterableMapping"
										},
										{
											"begin": 1798,
											"end": 1820,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1820,
											"name": "PUSH",
											"source": 11,
											"value": "4C60DB9C"
										},
										{
											"begin": 1798,
											"end": 1820,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1820,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1798,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "PUSH",
											"source": 11,
											"value": "A878B31040B2E6D0A9A3D3361209DB3908BA62014B0DCA52ADBAEE451D128B25"
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1842,
											"end": 1871,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1878,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5703,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5737,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5738,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 598,
											"end": 652,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 598,
											"end": 652,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4291,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4332,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4388,
											"end": 4395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4452,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 4437,
											"end": 4457,
											"name": "PUSHLIB",
											"source": 11,
											"value": "IterableMapping.sol:IterableMapping"
										},
										{
											"begin": 4437,
											"end": 4457,
											"name": "PUSH",
											"source": 11,
											"value": "DEB3D896"
										},
										{
											"begin": 4437,
											"end": 4457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4457,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4428,
											"end": 4459,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4428,
											"end": 4459,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4425,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 4425,
											"end": 4560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4529,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4529,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4529,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4525,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 4475,
											"end": 4549,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4425,
											"end": 4560,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 4425,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4570,
											"end": 4585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4603,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 4588,
											"end": 4617,
											"name": "PUSHLIB",
											"source": 11,
											"value": "IterableMapping.sol:IterableMapping"
										},
										{
											"begin": 4588,
											"end": 4617,
											"name": "PUSH",
											"source": 11,
											"value": "D1AA9E7E"
										},
										{
											"begin": 4588,
											"end": 4617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4618,
											"end": 4623,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4642,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4588,
											"end": 4624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 4642,
											"end": 4661,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4661,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4642,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4668,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1407,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1407,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH data",
											"source": 11,
											"value": "C615061E29940B7A365B4FA13AB29A516E98BE4C6C3D2F44713E16D490A2393F"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1590,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 716,
											"end": 740,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 716,
											"end": 740,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 716,
											"end": 740,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 716,
											"end": 740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 716,
											"end": 740,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2608,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 637,
											"end": 643,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 637,
											"end": 643,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 637,
											"end": 643,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4325,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4435,
											"end": 4441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4412,
											"end": 4442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6410,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6431,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6472,
											"end": 6487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6445,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4653,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2788,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2788,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2904,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2904,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2943,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2865,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2837,
											"end": 2951,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "A493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 3004,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3041,
											"end": 3066,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 3041,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3013,
											"end": 3078,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2813,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 3089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6562,
											"end": 6576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6603,
											"end": 6610,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6579,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 6579,
											"end": 6611,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6579,
											"end": 6611,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 6579,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6562,
											"end": 6611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6622,
											"end": 6632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6622,
											"end": 6632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6619,
											"end": 6762,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6656,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6683,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6683,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6665,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "PUSH",
											"source": 11,
											"value": "A2C38E2D2FB7E3E1912D937FD1CA11ED6D51864DEE4CFA7A7BF02BECD7ACF092"
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6735,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 6750,
											"end": 6754,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6619,
											"end": 6762,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6619,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6788,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 746,
											"end": 802,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 746,
											"end": 802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 746,
											"end": 802,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "2065"
										},
										{
											"begin": 746,
											"end": 802,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 746,
											"end": 802,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4054,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4987,
											"end": 5017,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5027,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 5027,
											"end": 5034,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 4984,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5065,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "2065"
										},
										{
											"begin": 5051,
											"end": 5061,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5051,
											"end": 5096,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5112,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 5124,
											"end": 5131,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5133,
											"end": 5143,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5112,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5112,
											"end": 5144,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5112,
											"end": 5144,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 5112,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2F0AD017"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5167,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5171,
											"name": "PUSHLIB",
											"source": 11,
											"value": "IterableMapping.sol:IterableMapping"
										},
										{
											"begin": 5152,
											"end": 5171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5171,
											"name": "PUSH",
											"source": 11,
											"value": "BC2B405C"
										},
										{
											"begin": 5152,
											"end": 5171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5171,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5152,
											"end": 5192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5225,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 5237,
											"end": 5244,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5225,
											"end": 5248,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5225,
											"end": 5248,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 5225,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "131836E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5271,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "PUSHLIB",
											"source": 11,
											"value": "IterableMapping.sol:IterableMapping"
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "PUSH",
											"source": 11,
											"value": "4C60DB9C"
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5278,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5287,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 5048,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 5317,
											"end": 5324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5326,
											"end": 5330,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5302,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5302,
											"end": 5331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 846,
											"end": 847,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5338,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2409,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 2391,
											"end": 2409,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2313,
											"end": 2416,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": 11,
											"value": "E10"
										},
										{
											"begin": 1968,
											"end": 1980,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1968,
											"end": 2013,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2013,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1992,
											"end": 2013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1968,
											"end": 2013,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 1968,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "4F"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH data",
											"source": 11,
											"value": "4D2F405A35CA6C83B74BBDE3A75785F77C58DF6F366C6C72C07716BD11B48B44"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "4F"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 1960,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2140,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH data",
											"source": 11,
											"value": "942C29FDCDC1C6C74273047A896F52DEC5EF9BD1FDD2ACAF85C319D066F5ABC6"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2107,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "474EA64804364A1E29A4487DDB63C3342A2DD826CCD8ACF48825E680A0E6F20F"
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2266,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2285,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2276,
											"end": 2300,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2307,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH data",
											"source": 12,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2756,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2827,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2841,
											"end": 2862,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2936,
											"end": 2944,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2978,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "PUSHLIB",
											"source": 11,
											"value": "IterableMapping.sol:IterableMapping"
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "PUSH",
											"source": 11,
											"value": "17E142D1"
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2993,
											"end": 3000,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2963,
											"end": 3001,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3041,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3064,
											"end": 3065,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3065,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3065,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3052,
											"end": 3622,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3097,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3119,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3166,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3166,
											"end": 3203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3166,
											"end": 3171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3166,
											"end": 3203,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3203,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3166,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3139,
											"end": 3203,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3139,
											"end": 3203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3304,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 3289,
											"end": 3316,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3286,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3289,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3289,
											"end": 3507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3289,
											"end": 3507,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3507,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3289,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 3396,
											"end": 3423,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3396,
											"end": 3447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3396,
											"end": 3447,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3396,
											"end": 3447,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3396,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3554,
											"end": 3597,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3597,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3554,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3597,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3081,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3680,
											"end": 3687,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3657,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3688,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3715,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3738,
											"end": 3745,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3715,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3715,
											"end": 3746,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3746,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3715,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3698,
											"end": 3746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3698,
											"end": 3746,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3840,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3823,
											"end": 3947,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3946,
											"end": 3947,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3823,
											"end": 3947,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3947,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3823,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3879,
											"end": 3907,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 3879,
											"end": 3907,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3879,
											"end": 3907,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3879,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3947,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4022,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4022,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3991,
											"end": 4167,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4167,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3991,
											"end": 4167,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 4167,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3991,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4077,
											"end": 4090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4095,
											"end": 4110,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4077,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4077,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 4167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 4167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 4174,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5455,
											"end": 5470,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5455,
											"end": 5482,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5493,
											"end": 5518,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 5490,
											"end": 5569,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5528,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 5528,
											"end": 5561,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5569,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 5490,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5659,
											"end": 5686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5659,
											"end": 5686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5737,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5762,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5768,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5805,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5805,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 5755,
											"end": 5805,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5805,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5805,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5772,
											"end": 5782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5772,
											"end": 5805,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5755,
											"end": 5805,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 5755,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5886,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5871,
											"end": 5898,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5815,
											"end": 5836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5898,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5898,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 5845,
											"end": 5941,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5932,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5909,
											"end": 5932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5941,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 5845,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5949,
											"end": 5964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5982,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 5967,
											"end": 5987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5987,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6047,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6033,
											"end": 6056,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5967,
											"end": 6008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 6020,
											"end": 6057,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 6020,
											"end": 6057,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6020,
											"end": 6057,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 6020,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6147,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 6017,
											"end": 6147,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6071,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6094,
											"end": 6101,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6104,
											"end": 6108,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6071,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 6071,
											"end": 6109,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6071,
											"end": 6109,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6071,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6068,
											"end": 6139,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6068,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 6068,
											"end": 6139,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6121,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6121,
											"end": 6129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6121,
											"end": 6129,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6121,
											"end": 6129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6121,
											"end": 6129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6068,
											"end": 6139,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 6068,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6167,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6155,
											"end": 6167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6167,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6167,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6176,
											"end": 6206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6176,
											"end": 6206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6218,
											"end": 6225,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6218,
											"end": 6238,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6304,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 6215,
											"end": 6304,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6271,
											"end": 6278,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6283,
											"end": 6293,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6266,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 6259,
											"end": 6295,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 6295,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 6259,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6249,
											"end": 6295,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6249,
											"end": 6295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6304,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 6215,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6322,
											"end": 6332,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5749,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 6347,
											"end": 6387,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6387,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6403,
											"end": 6413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6403,
											"end": 6413,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6421,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6387,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 6449,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9682,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1254,
											"end": 1401,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1254,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH data",
											"source": 11,
											"value": "E72B312E2E60F004FEAA3159509B718300B3B0FCA2C157BBC01115B4B8030BC3"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1394,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1911,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1978,
											"end": 1979,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH data",
											"source": 13,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "CODECOPY",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 1993,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 2075,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 178,
											"end": 308,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 178,
											"end": 308,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 234,
											"end": 240,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 267,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 282,
											"end": 288,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 274,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 274,
											"end": 289,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 274,
											"end": 289,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2478,
											"end": 2650,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 2478,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2622,
											"end": 2623,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2618,
											"end": 2623,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2609,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2625,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 2943,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2992,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7552,
											"end": 7949,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7552,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7650,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7705,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7736,
											"end": 7746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7736,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 7736,
											"end": 7766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7736,
											"end": 7766,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7736,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7774,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 7780,
											"end": 7787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7774,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 7774,
											"end": 7800,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7774,
											"end": 7800,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 7774,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7675,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 7843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7843,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7945,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7813,
											"end": 7945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7874,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7874,
											"end": 7888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 7874,
											"end": 7904,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7874,
											"end": 7904,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7874,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7853,
											"end": 7904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7918,
											"end": 7925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7949,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 422,
											"end": 428,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 414,
											"end": 460,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 757,
											"end": 891,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 757,
											"end": 891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 815,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 845,
											"end": 846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "PUSH",
											"source": 13,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 841,
											"end": 884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 841,
											"end": 884,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 3659,
											"end": 3663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 3636,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 3736,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3787,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "EE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D"
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3846,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3880,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3890,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 3919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 3978,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4029,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3975,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3928,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4064,
											"end": 4092,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3670,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3516,
											"end": 4118,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2223,
											"end": 2395,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2223,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2358,
											"end": 2359,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2355,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2354,
											"end": 2368,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 2323,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 2323,
											"end": 2370,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2323,
											"end": 2370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2370,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2323,
											"end": 2370,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4674,
											"end": 4887,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 4674,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4741,
											"end": 4745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4773,
											"end": 4788,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4770,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4788,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4819,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4754,
											"end": 4819,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4799,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 4799,
											"end": 4811,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4754,
											"end": 4819,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4754,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4871,
											"end": 4880,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 4871,
											"end": 4880,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 4833,
											"end": 4848,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4833,
											"end": 4867,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4867,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 4833,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4880,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4880,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4880,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4674,
											"end": 4887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4887,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6769,
											"end": 7024,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6769,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6852,
											"end": 6859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 6840,
											"end": 6867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6840,
											"end": 6867,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6840,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 6964,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6965,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6965,
											"end": 6990,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6965,
											"end": 6994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7001,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6965,
											"end": 7001,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6964,
											"end": 7017,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6964,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6942,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6914,
											"end": 7019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6914,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 6914,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6902,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6911,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7019,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6769,
											"end": 7024,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7293,
											"end": 7548,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7293,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 7376,
											"end": 7383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 7390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7364,
											"end": 7391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7364,
											"end": 7391,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 7364,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7488,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7489,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7519,
											"end": 7524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7514,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7489,
											"end": 7514,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7489,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7489,
											"end": 7525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7525,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7488,
											"end": 7541,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 7488,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7438,
											"end": 7543,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7868,
											"end": 8238,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 7868,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7943,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8019,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 8048,
											"end": 8049,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8019,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8019,
											"end": 8068,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8019,
											"end": 8068,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 8019,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8094,
											"end": 8106,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8094,
											"end": 8106,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8094,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8091,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8079,
											"end": 8118,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8167,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 8149,
											"end": 8179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8172,
											"end": 8178,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8149,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8149,
											"end": 8179,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8149,
											"end": 8179,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 8149,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8179,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8179,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8179,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8146,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8137,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8231,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7868,
											"end": 8238,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8641,
											"end": 8662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8641,
											"end": 8662,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH data",
											"source": 4,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 8633,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8711,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 8732,
											"end": 8739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8759,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8711,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8711,
											"end": 8760,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8711,
											"end": 8760,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 8711,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 8815,
											"end": 8821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH data",
											"source": 4,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8792,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 8792,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8860,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8897,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8885,
											"end": 8897,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 8885,
											"end": 8909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8885,
											"end": 8909,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8885,
											"end": 8909,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 8885,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8870,
											"end": 8882,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8870,
											"end": 8909,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8950,
											"end": 8951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8961,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8558,
											"end": 8968,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4D2F405A35CA6C83B74BBDE3A75785F77C58DF6F366C6C72C07716BD11B48B44": "4d4f4e4559415641585f4469766964656e645f547261636b65723a20636c61696d57616974206d757374206265207570646174656420746f206265747765656e203120616e6420323420686f757273",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"942C29FDCDC1C6C74273047A896F52DEC5EF9BD1FDD2ACAF85C319D066F5ABC6": "4d4f4e4559415641585f4469766964656e645f547261636b65723a2043616e6e6f742075706461746520636c61696d5761697420746f2073616d652076616c7565",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"C615061E29940B7A365B4FA13AB29A516E98BE4C6C3D2F44713E16D490A2393F": "4d4f4e4559415641585f4469766964656e645f547261636b65723a2077697468647261774469766964656e642064697361626c65642e20557365207468652027636c61696d272066756e6374696f6e206f6e20746865206d61696e204d4f4e45594156415820636f6e74726163742e",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"E72B312E2E60F004FEAA3159509B718300B3B0FCA2C157BBC01115B4B8030BC3": "4d4f4e4559415641585f4469766964656e645f547261636b65723a204e6f207472616e736665727320616c6c6f776564",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"CAKE()": "4ca6ef28",
							"accumulativeDividendOf(address)": "27ce0147",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claimWait()": "6f2789ec",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"distributeCAKEDividends(uint256)": "ba72a955",
							"dividendOf(address)": "91b89fba",
							"excludeFromDividends(address)": "31e79db0",
							"excludedFromDividends(address)": "4e7b827f",
							"getAccount(address)": "fbcbc0f1",
							"getAccountAtIndex(uint256)": "5183d6fd",
							"getLastProcessedIndex()": "e7841ec0",
							"getNumberOfTokenHolders()": "09bbedde",
							"increaseAllowance(address,uint256)": "39509351",
							"lastClaimTimes(address)": "226cfa3d",
							"lastProcessedIndex()": "3009a609",
							"minimumTokenBalanceForDividends()": "be10b614",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"process(uint256)": "ffb2c479",
							"processAccount(address,bool)": "bc4c4b37",
							"renounceOwnership()": "715018a6",
							"setBalance(address,uint256)": "e30443bc",
							"symbol()": "95d89b41",
							"totalDividendsDistributed()": "85a6b3ae",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateClaimWait(uint256)": "e98030c7",
							"withdrawDividend()": "6a474002",
							"withdrawableDividendOf(address)": "a8b9d240",
							"withdrawnDividendOf(address)": "aafd847a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"automatic\",\"type\":\"bool\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"}],\"name\":\"ClaimWaitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ExcludeFromDividends\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAKE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimWait\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeCAKEDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"excludedFromDividends\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"iterationsUntilProcessed\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableDividends\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDividends\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondsUntilAutoClaimAvailable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getAccountAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastProcessedIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfTokenHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaimTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastProcessedIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTokenBalanceForDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"process\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"automatic\",\"type\":\"bool\"}],\"name\":\"processAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividendsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newClaimWait\",\"type\":\"uint256\"}],\"name\":\"updateClaimWait\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has earned in total.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawDividend()\":{\"details\":\"It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\"},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MONEYAVAXDividendTracker.sol\":\"MONEYAVAXDividendTracker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"DividendPayingToken.sol\":{\"keccak256\":\"0xaf6bdf1fd8aa3f84daa1574ad1f92139021d1780488f992980f313526dc93eb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24d73b01160d3b5629eda3cf59f19896de4146b65c31efab1ce63231831051eb\",\"dweb:/ipfs/QmbCGFwViZBo1Y5eXSj7izPVNjrd32RQerq6M9dDm4uFdq\"]},\"DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x540feb0de30442e4ff73b150bfda6936d67b7b9a821ef07dfd171329f5980c5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e37fe007425be9fc1f260badb7049980dd9ee8ea0e6cb50f9167e9262e6aed3\",\"dweb:/ipfs/QmceJrr5vs6LCfBj51ZtyjqmyD4DuPiGozKphxKed2F14K\"]},\"DividendPayingTokenOptionalInterface.sol\":{\"keccak256\":\"0xff14d6250f7475ad64006d069fd715371ce5ed90c5a946b944aa5241b6faa47f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92c259af1a8c2b41fc8796c42fb6f0583f691b61c7007c1836fdee7fbc892e59\",\"dweb:/ipfs/QmNwopB8sD2wAR72gZ4ms4LRSVuMGpmPiJjUYubQFhvaSd\"]},\"ERC20.sol\":{\"keccak256\":\"0x83db848aeb57e6b9d105566d2c9d97184bbc038fe3012a24a242d875ab71181c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41b4e38a45d2c3b677510d7191b231aef68af68947c2a7bd36b1c8d600b25a95\",\"dweb:/ipfs/QmRnWEp1UR3MvnvujLT79tRyqFcUghVrti4RQdqABs3ZRT\"]},\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]},\"IUniswapV2Factory.sol\":{\"keccak256\":\"0xccc328a1c3c7959a2355eb7ff66d63d9df164cc7daac37223284b8d6192898cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f3745753869777d171862e4f9e0ccf1dff2bdc57f3941195267d60cf58cb88a\",\"dweb:/ipfs/QmVvh3EwUt15ZUdaFPM1hzTDRncsYouQZHnCU2crAVQUFa\"]},\"IUniswapV2Pair.sol\":{\"keccak256\":\"0x25912efdfa7127b5d9edb273b9bd730f2b487465a63a513d0d545b8203eb97d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93010d9c0a26b6f4d923735ae2685461595233429ddf8cf2a8a8e30c9838b75d\",\"dweb:/ipfs/QmTXVrc7khrcpHWeKDxertzNtvkZs1Nzi9A3JwibabhA1p\"]},\"IUniswapV2Router.sol\":{\"keccak256\":\"0x0248eb0ad99a92587be54f7535d7de5f110cbef3028ca6733bac5cc794740706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5541ea37b9109c3fdd88bcd6d0e7cd608b0d1511be1172b066ecde9ff1142d26\",\"dweb:/ipfs/QmaxELC6b9EhrWwgStxiHtXv3QJEMyjEHHAeDKLDwj7YnJ\"]},\"IterableMapping.sol\":{\"keccak256\":\"0xffdcad33ea3af6164cb71f6a854ba6fdbda53e8de4e77eeabdd40e2980da5e87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b237054b165465ea874843d178364888e416d0fa421f93ec082f29a0c9208c4\",\"dweb:/ipfs/QmTNGwsazwxBZvkwnib8prPDmjp5gHNQAGNi5YkTkTWcgC\"]},\"MONEYAVAXDividendTracker.sol\":{\"keccak256\":\"0xd3ff0b73ee5f854f885e0cf903827285d53298bb3d933b0c121e5658e790bd18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d823a7d2929c58d8aab953ae48983a60855adaedec2d773b5cdc8d7152e4c83\",\"dweb:/ipfs/QmbFzC9ZmUJbdFurDGEZewWrvANtLdU1aYZ3eYBPh7pzyw\"]},\"Ownable.sol\":{\"keccak256\":\"0xc8bb32fd490e2821c1b3485964cdb304fc9ff4d449c9c80e8381a052c0472e7a\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://dbfa4b1ab73357cc544387f2ee65b227ab4a620f7a02aa3bed54dc784c79299d\",\"dweb:/ipfs/QmeXgguUxhgk3FFJgnDDbLEHf7fkBv6g8HUufekHRB4NsG\"]},\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]},\"SafeMathInt.sol\":{\"keccak256\":\"0xcd8b4ef427f18356a0d9456b15d9decbd1fad699cb66cfb5447493cf244b79ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0545e940cc0ee3ec34e2d8b4f5815fa09aa84da9be30728a1cce3ccc44101474\",\"dweb:/ipfs/QmdFE4A5HzhXUxVPBVFj4q2LxnmFJAJDQhwMQc64zFrtdD\"]},\"SafeMathUint.sol\":{\"keccak256\":\"0x8f5c24cd76bdcec7af73fb22794aa32e29ce58c0f63b448f7a8b25d44b78975f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f36d6348f20e2d713db661f3b22fd9d212c37f18ad9f790312f3c01d1e800aa\",\"dweb:/ipfs/QmVtv5QhzE77fhso2WsX6RYb1th851n4xCQsUE9i2XHzWv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 532,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 534,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 536,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 538,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2659,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 62,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "magnifiedDividendPerShare",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 66,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "magnifiedDividendCorrections",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 70,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "withdrawnDividends",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 72,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "totalDividendsDistributed",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2051,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "tokenHoldersMap",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(Map)1817_storage"
							},
							{
								"astId": 2053,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "lastProcessedIndex",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 2057,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "excludedFromDividends",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2061,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "lastClaimTimes",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2063,
								"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
								"label": "claimWait",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Map)1817_storage": {
								"encoding": "inplace",
								"label": "struct IterableMapping.Map",
								"members": [
									{
										"astId": 1804,
										"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
										"label": "keys",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 1808,
										"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
										"label": "values",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 1812,
										"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
										"label": "indexOf",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 1816,
										"contract": "MONEYAVAXDividendTracker.sol:MONEYAVAXDividendTracker",
										"label": "inserted",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accumulativeDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has earned in total."
							},
							"dividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawDividend()": {
								"notice": "Withdraws the ether distributed to the sender."
							},
							"withdrawableDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawnDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has withdrawn."
							}
						},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"Ownable.sol\":340:497  constructor () public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":372:389  address msgSender */\n  0x00\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  tag_4\n    /* \"Ownable.sol\":392:402  _msgSender */\n  tag_5\n    /* \"Ownable.sol\":392:404  _msgSender() */\n  jump\t// in\ntag_4:\n    /* \"Ownable.sol\":414:420  _owner */\n  0x00\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":414:432  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Ownable.sol\":414:420  _owner */\n  dup3\n  swap1\n    /* \"Ownable.sol\":447:490  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"Ownable.sol\":340:497  constructor () public {... */\n  pop\n    /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\n  jump(tag_6)\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\ntag_5:\n    /* \"Context.sol\":665:675  msg.sender */\n  caller\n    /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ownable.sol\":91:1732  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_12\n      jump\t// in\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_14\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_15\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_14:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_16\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_16:\n        /* \"Ownable.sol\":1302:1303  0 */\n      0x00\n        /* \"Ownable.sol\":1286:1292  _owner */\n      dup1\n      sload\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1286:1292  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1302:1303  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1265:1305  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1332:1333  0 */\n      0x00\n        /* \"Ownable.sol\":1315:1334  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1196:1341  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"Ownable.sol\":611:618  address */\n      0x00\n        /* \"Ownable.sol\":637:643  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":573:650  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      tag_20\n        /* \"Ownable.sol\":787:797  _msgSender */\n      tag_15\n        /* \"Ownable.sol\":787:799  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"Ownable.sol\":777:783  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":777:799  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":769:836  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1578:1600  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":1570:1643  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"Ownable.sol\":1679:1685  _owner */\n      0x00\n      dup1\n      sload\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"Ownable.sol\":1679:1685  _owner */\n      swap3\n      and\n      swap2\n        /* \"Ownable.sol\":1658:1696  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"Ownable.sol\":1706:1712  _owner */\n      0x00\n        /* \"Ownable.sol\":1706:1723  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":1490:1730  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_15:\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102c78061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610267565b6000546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610165610267565b6000546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x2C7 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220F9CA43277585 0x1E REVERT MSTORE8 GASPRICE 0xC1 DELEGATECALL 0x23 SWAP14 TIMESTAMP SAR 0x2C 0xCD 0xBB LT PUSH26 0x276958FE684FECC3E4EBA764736F6C634300060C003300000000 ",
							"sourceMap": "91:1641:12:-:0;;;340:157;;;;;;;;;-1:-1:-1;372:17:12;392:12;:10;:12::i;:::-;414:6;:18;;-1:-1:-1;;;;;;414:18:12;-1:-1:-1;;;;;414:18:12;;;;;;;447:43;;414:18;;-1:-1:-1;414:18:12;447:43;;414:6;;447:43;340:157;91:1641;;586:96:0;665:10;586:96;:::o;91:1641:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610267565b6000546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610165610267565b6000546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220F9CA43277585 0x1E REVERT MSTORE8 GASPRICE 0xC1 DELEGATECALL 0x23 SWAP14 TIMESTAMP SAR 0x2C 0xCD 0xBB LT PUSH26 0x276958FE684FECC3E4EBA764736F6C634300060C003300000000 ",
							"sourceMap": "91:1641:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:145;;;:::i;:::-;;573:77;;;:::i;:::-;;;;-1:-1:-1;;;;;573:77:12;;;;;;;;;;;;;;1490:240;;;;;;;;;;;;;;;;-1:-1:-1;1490:240:12;-1:-1:-1;;;;;1490:240:12;;:::i;1196:145::-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:1:::1;1286:6:::0;;1265:40:::1;::::0;-1:-1:-1;;;;;1286:6:12;;::::1;::::0;1265:40:::1;::::0;1302:1;;1265:40:::1;1332:1;1315:19:::0;;-1:-1:-1;;;;;;1315:19:12::1;::::0;;1196:145::o;573:77::-;611:7;637:6;-1:-1:-1;;;;;637:6:12;573:77;:::o;1490:240::-;787:12;:10;:12::i;:::-;777:6;;-1:-1:-1;;;;;777:6:12;;;:22;;;769:67;;;;;-1:-1:-1;;;769:67:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1578:22:12;::::1;1570:73;;;;-1:-1:-1::0;;;1570:73:12::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:6;::::0;;1658:38:::1;::::0;-1:-1:-1;;;;;1658:38:12;;::::1;::::0;1679:6;::::1;::::0;1658:38:::1;::::0;::::1;1706:6;:17:::0;;-1:-1:-1;;;;;;1706:17:12::1;-1:-1:-1::0;;;;;1706:17:12;;;::::1;::::0;;;::::1;::::0;;1490:240::o;586:96:0:-;665:10;586:96;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142200",
								"executionCost": "22625",
								"totalCost": "164825"
							},
							"external": {
								"owner()": "1037",
								"renounceOwnership()": "24182",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 497,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 497,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 497,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 372,
									"end": 389,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 392,
									"end": 402,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "tag",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 392,
									"end": 404,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 414,
									"end": 420,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 414,
									"end": 432,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 447,
									"end": 490,
									"name": "PUSH",
									"source": 12,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 447,
									"end": 490,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 414,
									"end": 420,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 414,
									"end": 420,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 447,
									"end": 490,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 340,
									"end": 497,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 586,
									"end": 682,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "tag",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 1732,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9ca432775851efd533ac1f4239d421d2ccdbb1079276958fe684fecc3e4eba764736f6c634300060c0033",
									".code": [
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 91,
											"end": 1732,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1305,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1315,
											"end": 1334,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1196,
											"end": 1341,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 643,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 637,
											"end": 643,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 573,
											"end": 650,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 777,
											"end": 783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 783,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 777,
											"end": 799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 769,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 769,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH data",
											"source": 12,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1696,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1730,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"Ownable.sol\":{\"keccak256\":\"0xc8bb32fd490e2821c1b3485964cdb304fc9ff4d449c9c80e8381a052c0472e7a\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://dbfa4b1ab73357cc544387f2ee65b227ab4a620f7a02aa3bed54dc784c79299d\",\"dweb:/ipfs/QmeXgguUxhgk3FFJgnDDbLEHf7fkBv6g8HUufekHRB4NsG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2659,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":58:4636  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":58:4636  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP9 PUSH7 0xCE260ABF24BC5A 0x22 0xC1 0xB7 0xE1 RETURNDATACOPY PUSH15 0xA50AD0211AA8142CBDFA4061DDEF04 JUMPDEST PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "58:4578:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 DUP9 PUSH7 0xCE260ABF24BC5A 0x22 0xC1 0xB7 0xE1 RETURNDATACOPY PUSH15 0xA50AD0211AA8142CBDFA4061DDEF04 JUMPDEST PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "58:4578:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "INVALID",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e8866ce260abf24bc5a22c1b7e13e6ea50ad0211aa8142cbdfa4061ddef045b64736f6c634300060c0033",
									".code": [
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMathInt.sol": {
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"details": "Math operations for int256 with overflow safety checks.",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathInt",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMathInt.sol\":1265:2994  library SafeMathInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMathInt.sol\":1265:2994  library SafeMathInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x697B598E5C97DA859713FA343FE342D4315D 0xB5 0xCA MOD 0xDB 0xAC GT 0xC3 0xBB 0x21 0xE5 EXTCODECOPY 0x4F 0xE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1265:1729:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x697B598E5C97DA859713FA343FE342D4315D 0xB5 0xCA MOD 0xDB 0xAC GT 0xC3 0xBB 0x21 0xE5 EXTCODECOPY 0x4F 0xE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1265:1729:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite",
								"toUint256Safe(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "INVALID",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 2994,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071697b598e5c97da859713fa343fe342d4315db5ca06dbac11c3bb21e53c4f0e64736f6c634300060c0033",
									".code": [
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 2994,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations for int256 with overflow safety checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathInt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMathInt.sol\":\"SafeMathInt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMathInt.sol\":{\"keccak256\":\"0xcd8b4ef427f18356a0d9456b15d9decbd1fad699cb66cfb5447493cf244b79ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0545e940cc0ee3ec34e2d8b4f5815fa09aa84da9be30728a1cce3ccc44101474\",\"dweb:/ipfs/QmdFE4A5HzhXUxVPBVFj4q2LxnmFJAJDQhwMQc64zFrtdD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMathUint.sol": {
				"SafeMathUint": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathUint",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMathUint.sol\":153:310  library SafeMathUint {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMathUint.sol\":153:310  library SafeMathUint {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xCA KECCAK256 KECCAK256 DUP4 CALLDATACOPY 0xE4 0xAF ADD 0xCD 0xF6 0xF 0xF9 0x23 DUP16 0xD7 RETURNDATACOPY 0xF6 SUB SHR SWAP14 0x4F PUSH27 0x4E5C5DBF43F9832C7A64736F6C634300060C003300000000000000 ",
							"sourceMap": "153:157:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xCA KECCAK256 KECCAK256 DUP4 CALLDATACOPY 0xE4 0xAF ADD 0xCD 0xF6 0xF 0xF9 0x23 DUP16 0xD7 RETURNDATACOPY 0xF6 SUB SHR SWAP14 0x4F PUSH27 0x4E5C5DBF43F9832C7A64736F6C634300060C003300000000000000 ",
							"sourceMap": "153:157:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt256Safe(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "INVALID",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 153,
									"end": 310,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201eca20208337e4af01cdf60ff9238fd73ef6031c9d4f7a4e5c5dbf43f9832c7a64736f6c634300060c0033",
									".code": [
										{
											"begin": 153,
											"end": 310,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 153,
											"end": 310,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 153,
											"end": 310,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 153,
											"end": 310,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 153,
											"end": 310,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 310,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 153,
											"end": 310,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 310,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 153,
											"end": 310,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathUint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMathUint.sol\":\"SafeMathUint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMathUint.sol\":{\"keccak256\":\"0x8f5c24cd76bdcec7af73fb22794aa32e29ce58c0f63b448f7a8b25d44b78975f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f36d6348f20e2d713db661f3b22fd9d212c37f18ad9f790312f3c01d1e800aa\",\"dweb:/ipfs/QmVtv5QhzE77fhso2WsX6RYb1th851n4xCQsUE9i2XHzWv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "648:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "665:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "665:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "658:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:0"
									},
									"scope": 22,
									"src": "586:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "755:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "765:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "765:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "905:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "905:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "898:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "739:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:16:0"
									},
									"scope": 22,
									"src": "688:232:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "554:368:0"
						}
					],
					"src": "33:890:0"
				},
				"id": 0
			},
			"DividendPayingToken.sol": {
				"ast": {
					"absolutePath": "DividendPayingToken.sol",
					"exportedSymbols": {
						"DividendPayingToken": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 999,
							"src": "58:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 2956,
							"src": "80:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMathUint.sol",
							"file": "./SafeMathUint.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 3200,
							"src": "105:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMathInt.sol",
							"file": "./SafeMathInt.sol",
							"id": 28,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 3173,
							"src": "134:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DividendPayingTokenInterface.sol",
							"file": "./DividendPayingTokenInterface.sol",
							"id": 29,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 479,
							"src": "162:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DividendPayingTokenOptionalInterface.sol",
							"file": "./DividendPayingTokenOptionalInterface.sol",
							"id": 30,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 507,
							"src": "207:52:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 31,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 2761,
							"src": "260:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 33,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 998,
										"src": "690:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$998",
											"typeString": "contract ERC20"
										}
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "690:5:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 35,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2760,
										"src": "697:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$2760",
											"typeString": "contract Ownable"
										}
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "697:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 37,
										"name": "DividendPayingTokenInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 478,
										"src": "706:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DividendPayingTokenInterface_$478",
											"typeString": "contract DividendPayingTokenInterface"
										}
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "706:28:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 39,
										"name": "DividendPayingTokenOptionalInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 506,
										"src": "736:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DividendPayingTokenOptionalInterface_$506",
											"typeString": "contract DividendPayingTokenOptionalInterface"
										}
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "736:36:1"
								}
							],
							"contractDependencies": [
								22,
								478,
								506,
								998,
								1076,
								1101,
								2760
							],
							"contractKind": "contract",
							"documentation": {
								"id": 32,
								"nodeType": "StructuredDocumentation",
								"src": "286:372:1",
								"text": "@title Dividend-Paying Token\n @author Roger Wu (https://github.com/roger-wu)\n @dev A mintable ERC20 token that allows anyone to pay and distribute ether\n  to token holders as dividends and allows token holders to withdraw their dividends.\n  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code"
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448,
								506,
								478,
								2760,
								998,
								1101,
								1076,
								22
							],
							"name": "DividendPayingToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 43,
									"libraryName": {
										"contractScope": null,
										"id": 41,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2955,
										"src": "783:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2955",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "777:27:1",
									"typeName": {
										"id": 42,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "796:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 46,
									"libraryName": {
										"contractScope": null,
										"id": 44,
										"name": "SafeMathUint",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3199,
										"src": "813:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathUint_$3199",
											"typeString": "library SafeMathUint"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "807:31:1",
									"typeName": {
										"id": 45,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 49,
									"libraryName": {
										"contractScope": null,
										"id": 47,
										"name": "SafeMathInt",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3172,
										"src": "847:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathInt_$3172",
											"typeString": "library SafeMathInt"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "841:29:1",
									"typeName": {
										"id": 48,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "863:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "4ca6ef28",
									"id": 55,
									"mutability": "immutable",
									"name": "CAKE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "1099:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 50,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1099:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "307842363037364339333730314436613037323636633331303636423239384165433664643635633264",
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1139:42:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"value": "0xB6076C93701D6a07266c31066B298AeC6dd65c2d"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											],
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1131:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 51,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1131:7:1",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1131:51:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 60,
									"mutability": "constant",
									"name": "magnitude",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "1454:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 56,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1454:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 57,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1492:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313238",
											"id": 58,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1495:3:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_128_by_1",
												"typeString": "int_const 128"
											},
											"value": "128"
										},
										"src": "1492:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "magnifiedDividendPerShare",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "1503:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 61,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1503:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 66,
									"mutability": "mutable",
									"name": "magnifiedDividendCorrections",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2440:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 65,
										"keyType": {
											"id": 63,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2448:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2440:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 64,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2459:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "withdrawnDividends",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2508:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 69,
										"keyType": {
											"id": 67,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2516:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2508:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 68,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2527:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "85a6b3ae",
									"id": 72,
									"mutability": "mutable",
									"name": "totalDividendsDistributed",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2568:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2568:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2698:6:1",
										"statements": []
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 79,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "2682:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"argumentTypes": null,
													"id": 80,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 76,
													"src": "2689:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 81,
											"modifierName": {
												"argumentTypes": null,
												"id": 78,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 998,
												"src": "2676:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$998_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2676:21:1"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2625:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2625:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2646:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2646:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2624:44:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2698:0:1"
									},
									"scope": 448,
									"src": "2613:91:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2774:315:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 92,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2788:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2788:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2804:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2788:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2780:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2780:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2780:26:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 98,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2817:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2826:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2817:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 129,
												"nodeType": "IfStatement",
												"src": "2813:272:1",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "2829:256:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "magnifiedDividendPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2837:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 107,
																						"name": "magnitude",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 60,
																						"src": "2917:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"id": 104,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 86,
																								"src": "2905:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 105,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2904:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2868,
																					"src": "2904:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2904:23:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 109,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "2930:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2930:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2904:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 102,
																			"name": "magnifiedDividendPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "2865:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2788,
																		"src": "2865:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2865:86:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2837:114:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "2837:114:1"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 116,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2985:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2985:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 118,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "2997:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 115,
																	"name": "DividendsDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "2964:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2964:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "EmitStatement",
															"src": "2959:45:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "totalDividendsDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "3013:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 124,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "3071:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 122,
																			"name": "totalDividendsDistributed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 72,
																			"src": "3041:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2788,
																		"src": "3041:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3041:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3013:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3013:65:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "ba72a955",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 89,
											"modifierName": {
												"argumentTypes": null,
												"id": 88,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2709,
												"src": "2765:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2765:9:1"
										}
									],
									"name": "distributeCAKEDividends",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2742:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2741:16:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2774:0:1"
									},
									"scope": 448,
									"src": "2709:380:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										463
									],
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "3306:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3336:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3336:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 136,
														"name": "_withdrawDividendOfUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3312:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (address payable) returns (uint256)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3312:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "3312:35:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3093:158:1",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
									},
									"functionSelector": "6a474002",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDividend",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3297:8:1"
									},
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3279:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3306:0:1"
									},
									"scope": 448,
									"src": "3254:98:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3598:520:1",
										"statements": [
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "_withdrawableDividend",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 208,
														"src": "3604:29:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3604:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 153,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3659:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 152,
														"name": "withdrawableDividendOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3636:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3604:60:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "_withdrawableDividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "3674:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3698:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3674:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 205,
												"nodeType": "IfStatement",
												"src": "3670:429:1",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "3701:398:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 159,
																		"name": "withdrawnDividends",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "3709:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 161,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 160,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3728:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3709:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 166,
																			"name": "_withdrawableDividend",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "3765:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 162,
																				"name": "withdrawnDividends",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "3736:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 164,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 163,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 145,
																				"src": "3755:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3736:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2788,
																		"src": "3736:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3736:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3709:78:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 169,
															"nodeType": "ExpressionStatement",
															"src": "3709:78:1"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 171,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3818:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 172,
																		"name": "_withdrawableDividend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "3824:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 170,
																	"name": "DividendWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "3800:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3800:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 174,
															"nodeType": "EmitStatement",
															"src": "3795:51:1"
														},
														{
															"assignments": [
																176
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 176,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 204,
																	"src": "3854:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 175,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3854:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 184,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 181,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3891:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 182,
																		"name": "_withdrawableDividend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "3897:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 178,
																				"name": "CAKE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "3876:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 177,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1076,
																			"src": "3869:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1076_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3869:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1076",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "3869:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3869:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3854:65:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3931:8:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 185,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "3932:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 201,
															"nodeType": "IfStatement",
															"src": "3928:128:1",
															"trueBody": {
																"id": 200,
																"nodeType": "Block",
																"src": "3941:115:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 187,
																					"name": "withdrawnDividends",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "3951:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 189,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 188,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 145,
																					"src": "3970:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3951:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 194,
																						"name": "_withdrawableDividend",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 151,
																						"src": "4007:21:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 190,
																							"name": "withdrawnDividends",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "3978:18:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 192,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 191,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 145,
																							"src": "3997:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3978:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2805,
																					"src": "3978:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3978:51:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3951:78:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 197,
																		"nodeType": "ExpressionStatement",
																		"src": "3951:78:1"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4046:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 149,
																		"id": 199,
																		"nodeType": "Return",
																		"src": "4039:8:1"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 202,
																"name": "_withdrawableDividend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "4071:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 149,
															"id": 203,
															"nodeType": "Return",
															"src": "4064:28:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4112:1:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 149,
												"id": 207,
												"nodeType": "Return",
												"src": "4105:8:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "3356:158:1",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawDividendOfUser",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3549:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3548:22:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3589:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3588:9:1"
									},
									"scope": 448,
									"src": "3516:602:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										459
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "4399:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 219,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "4435:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 218,
														"name": "withdrawableDividendOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4412:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4412:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 221,
												"nodeType": "Return",
												"src": "4405:37:1"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4123:199:1",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "91b89fba",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 214,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4373:8:1"
									},
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4345:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4345:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4344:16:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4390:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4389:9:1"
									},
									"scope": 448,
									"src": "4325:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										489
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4739:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 236,
																"name": "withdrawnDividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "4787:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 238,
															"indexExpression": {
																"argumentTypes": null,
																"id": 237,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "4806:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4787:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 233,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "4775:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 232,
																"name": "accumulativeDividendOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "4752:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4752:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2805,
														"src": "4752:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 240,
												"nodeType": "Return",
												"src": "4745:69:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "4451:199:1",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "a8b9d240",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawableDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4713:8:1"
									},
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 242,
												"src": "4685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4684:16:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 242,
												"src": "4730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4729:9:1"
									},
									"scope": 448,
									"src": "4653:166:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										497
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5110:44:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "withdrawnDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "5123:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "5142:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5123:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 254,
												"nodeType": "Return",
												"src": "5116:33:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4823:201:1",
										"text": "@notice View the amount of dividend in wei that an address has withdrawn.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has withdrawn."
									},
									"functionSelector": "aafd847a",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawnDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 247,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5084:8:1"
									},
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "5056:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5055:16:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "5101:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5101:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5100:9:1"
									},
									"scope": 448,
									"src": "5027:127:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										505
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "5673:158:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 274,
																			"name": "magnifiedDividendCorrections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "5761:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																				"typeString": "mapping(address => int256)"
																			}
																		},
																		"id": 276,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 275,
																			"name": "_owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "5790:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5761:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 268,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 259,
																								"src": "5726:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 267,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 609,
																							"src": "5716:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5716:17:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 265,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "5686:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2868,
																					"src": "5686:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5686:48:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toInt256Safe",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3198,
																			"src": "5686:61:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (int256)"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5686:63:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3129,
																	"src": "5686:74:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5686:112:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint256Safe",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3171,
															"src": "5686:126:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																"typeString": "function (int256) pure returns (uint256)"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5686:128:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 280,
														"name": "magnitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "5817:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5686:140:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 282,
												"nodeType": "Return",
												"src": "5679:147:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "5159:425:1",
										"text": "@notice View the amount of dividend in wei that an address has earned in total.\n @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has earned in total."
									},
									"functionSelector": "27ce0147",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accumulativeDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5647:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "5619:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5618:16:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "5664:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5663:9:1"
									},
									"scope": 448,
									"src": "5587:244:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "6212:297:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6226:5:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6218:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6218:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "6218:14:1"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "_magCorrection",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 330,
														"src": "6239:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 299,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6239:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "6293:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 301,
																	"name": "magnifiedDividendPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "6263:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2868,
																"src": "6263:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6263:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toInt256Safe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3198,
														"src": "6263:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256) pure returns (int256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6263:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6239:75:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 308,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6320:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 310,
														"indexExpression": {
															"argumentTypes": null,
															"id": 309,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "6349:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6320:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 315,
																"name": "_magCorrection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6396:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 311,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6357:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 313,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 312,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "6386:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6357:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3129,
															"src": "6357:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6357:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6320:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "6320:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6417:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"argumentTypes": null,
															"id": 320,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "6446:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6417:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 326,
																"name": "_magCorrection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6489:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6452:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 324,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 323,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "6481:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6452:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3090,
															"src": "6452:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6452:52:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6417:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6417:87:1"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "5835:288:1",
										"text": "@dev Internal function that transfer tokens from one address to another.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param from The address to transfer from.\n @param to The address to transfer to.\n @param value The amount to be transferred."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6203:8:1"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6145:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6145:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6159:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6171:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6144:41:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6212:0:1"
									},
									"scope": 448,
									"src": "6126:383:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										885
									],
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "6834:190:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 343,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6852:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 344,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6861:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 340,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "6840:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_DividendPayingToken_$448",
																"typeString": "contract super DividendPayingToken"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 885,
														"src": "6840:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6840:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "6840:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 347,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6874:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 349,
														"indexExpression": {
															"argumentTypes": null,
															"id": 348,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6874:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 356,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 336,
																						"src": "6995:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 354,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "6965:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2868,
																					"src": "6965:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6965:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 358,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6964:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256Safe",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3198,
																	"src": "6964:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6964:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 350,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6914:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 352,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "6943:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6914:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3090,
															"src": "6914:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6914:105:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6874:145:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "6874:145:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "6513:253:1",
										"text": "@dev Internal function that mints tokens to an account.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param account The account that will receive the created tokens.\n @param value The amount that will be created."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6825:8:1"
									},
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "6784:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "6801:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6801:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6783:32:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6834:0:1"
									},
									"scope": 448,
									"src": "6769:255:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "7358:190:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7376:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7385:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 374,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "7364:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_DividendPayingToken_$448",
																"typeString": "contract super DividendPayingToken"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "7364:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7364:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "7364:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "7398:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 383,
														"indexExpression": {
															"argumentTypes": null,
															"id": 382,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7427:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7398:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 390,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 370,
																						"src": "7519:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 388,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "7489:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2868,
																					"src": "7489:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7489:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7488:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256Safe",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3198,
																	"src": "7488:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7488:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "7438:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 386,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 385,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "7467:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7438:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3129,
															"src": "7438:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7438:105:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7398:145:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "7398:145:1"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "7028:262:1",
										"text": "@dev Internal function that burns an amount of the token of a given account.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param account The account whose tokens will be burnt.\n @param value The amount that will be burnt."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7349:8:1"
									},
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "7308:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "7325:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7325:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7307:32:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7358:0:1"
									},
									"scope": 448,
									"src": "7293:255:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "7619:330:1",
										"statements": [
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "currentBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 446,
														"src": "7625:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 409,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "7660:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 408,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7650:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7650:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7625:43:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 412,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "7678:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 413,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "7691:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7678:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "7816:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7829:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7816:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 444,
													"nodeType": "IfStatement",
													"src": "7813:132:1",
													"trueBody": {
														"id": 443,
														"nodeType": "Block",
														"src": "7845:100:1",
														"statements": [
															{
																"assignments": [
																	432
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 432,
																		"mutability": "mutable",
																		"name": "burnAmount",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 443,
																		"src": "7853:18:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 431,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7853:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 437,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 435,
																			"name": "newBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "7893:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 433,
																			"name": "currentBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "7874:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2805,
																		"src": "7874:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7874:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7853:51:1"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 439,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "7918:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 440,
																			"name": "burnAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "7927:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 438,
																		"name": "_burn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			399
																		],
																		"referencedDeclaration": 399,
																		"src": "7912:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7912:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 442,
																"nodeType": "ExpressionStatement",
																"src": "7912:26:1"
															}
														]
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "7675:270:1",
												"trueBody": {
													"id": 427,
													"nodeType": "Block",
													"src": "7707:100:1",
													"statements": [
														{
															"assignments": [
																416
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 416,
																	"mutability": "mutable",
																	"name": "mintAmount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 427,
																	"src": "7715:18:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7715:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 421,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 419,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "7751:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 417,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "7736:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2805,
																	"src": "7736:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7736:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7715:51:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 423,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "7780:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 424,
																		"name": "mintAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "7789:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		365
																	],
																	"referencedDeclaration": 365,
																	"src": "7774:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7774:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "7774:26:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "7573:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "7590:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7572:37:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7619:0:1"
									},
									"scope": 448,
									"src": "7552:397:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 449,
							"src": "658:7293:1"
						}
					],
					"src": "33:7919:1"
				},
				"id": 1
			},
			"DividendPayingTokenInterface.sol": {
				"ast": {
					"absolutePath": "DividendPayingTokenInterface.sol",
					"exportedSymbols": {
						"DividendPayingTokenInterface": [
							478
						]
					},
					"id": 479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "59:154:2",
								"text": "@title Dividend-Paying Token Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev An interface for a dividend-paying token contract."
							},
							"fullyImplemented": false,
							"id": 478,
							"linearizedBaseContracts": [
								478
							],
							"name": "DividendPayingTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "256:199:2",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "91b89fba",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "477:16:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "516:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "515:9:2"
									},
									"scope": 478,
									"src": "458:67:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "530:291:2",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
									},
									"functionSelector": "6a474002",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDividend",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "849:2:2"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:2"
									},
									"scope": 478,
									"src": "824:37:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "865:202:2",
										"text": "@dev This event MUST emit when ether is distributed to token holders.\n @param from The address which sends ether to this contract.\n @param weiAmount The amount of distributed ether in wei."
									},
									"id": 470,
									"name": "DividendsDistributed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 470,
												"src": "1102:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 470,
												"src": "1128:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1096:53:2"
									},
									"src": "1070:80:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "1154:202:2",
										"text": "@dev This event MUST emit when an address withdraws their dividend.\n @param to The address which withdraws ether from this contract.\n @param weiAmount The amount of withdrawn ether in wei."
									},
									"id": 477,
									"name": "DividendWithdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "1388:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "1412:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1382:51:2"
									},
									"src": "1359:75:2"
								}
							],
							"scope": 479,
							"src": "213:1223:2"
						}
					],
					"src": "33:1404:2"
				},
				"id": 2
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"ast": {
					"absolutePath": "DividendPayingTokenOptionalInterface.sol",
					"exportedSymbols": {
						"DividendPayingTokenOptionalInterface": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 480,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 481,
								"nodeType": "StructuredDocumentation",
								"src": "59:169:3",
								"text": "@title Dividend-Paying Token Optional Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev OPTIONAL functions for a dividend-paying token contract."
							},
							"fullyImplemented": false,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "DividendPayingTokenOptionalInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "279:199:3",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "a8b9d240",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawableDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "513:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "512:16:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "551:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "550:9:3"
									},
									"scope": 506,
									"src": "481:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "564:201:3",
										"text": "@notice View the amount of dividend in wei that an address has withdrawn.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has withdrawn."
									},
									"functionSelector": "aafd847a",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawnDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "797:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "796:16:3"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "835:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "834:9:3"
									},
									"scope": 506,
									"src": "768:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "848:318:3",
										"text": "@notice View the amount of dividend in wei that an address has earned in total.\n @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has earned in total."
									},
									"functionSelector": "27ce0147",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accumulativeDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1201:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1200:16:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1239:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1238:9:3"
									},
									"scope": 506,
									"src": "1169:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "228:1022:3"
						}
					],
					"src": "33:1218:3"
				},
				"id": 3
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 508,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 509,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1077,
							"src": "58:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 510,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1102,
							"src": "81:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 511,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 23,
							"src": "112:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 512,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 2956,
							"src": "136:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 514,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1343:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 515,
									"nodeType": "InheritanceSpecifier",
									"src": "1343:7:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 516,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1076,
										"src": "1352:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1076",
											"typeString": "contract IERC20"
										}
									},
									"id": 517,
									"nodeType": "InheritanceSpecifier",
									"src": "1352:6:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 518,
										"name": "IERC20Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1101,
										"src": "1360:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$1101",
											"typeString": "contract IERC20Metadata"
										}
									},
									"id": 519,
									"nodeType": "InheritanceSpecifier",
									"src": "1360:14:4"
								}
							],
							"contractDependencies": [
								22,
								1076,
								1101
							],
							"contractKind": "contract",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "162:1162:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998,
								1101,
								1076,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 522,
									"libraryName": {
										"contractScope": null,
										"id": 520,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2955,
										"src": "1387:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2955",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1381:27:4",
									"typeName": {
										"id": 521,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1400:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1414:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 525,
										"keyType": {
											"id": 523,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1422:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1414:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 524,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1433:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 532,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1466:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 531,
										"keyType": {
											"id": 527,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1474:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1466:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 530,
											"keyType": {
												"id": 528,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1493:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1485:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1504:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1540:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1575:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 535,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1575:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1601:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 537,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1601:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1996:57:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 546,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 547,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2014:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2006:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "2006:13:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 550,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "2029:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 551,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2039:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2029:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2029:17:4"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1630:298:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 555,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "1945:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1945:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "1966:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1966:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1944:44:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:0:4"
									},
									"scope": 998,
									"src": "1933:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "2187:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "2204:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "2197:12:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2059:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2154:8:4"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:2:4"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "2172:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2172:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:15:4"
									},
									"scope": 998,
									"src": "2118:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "2400:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 572,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 538,
													"src": "2417:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 571,
												"id": 573,
												"nodeType": "Return",
												"src": "2410:14:4"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "2222:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2367:8:4"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2344:2:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "2385:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2385:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2384:15:4"
									},
									"scope": 998,
									"src": "2329:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1100
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3120:26:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3137:2:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "3130:9:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2437:613:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3095:8:4"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3072:2:4"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "3113:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 579,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3112:7:4"
									},
									"scope": 998,
									"src": "3055:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "3276:36:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 592,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "3293:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "3286:19:4"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3152:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 588,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3249:8:4"
									},
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3226:2:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "3267:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3266:9:4"
									},
									"scope": 998,
									"src": "3206:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1015
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "3453:42:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 604,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3470:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 606,
													"indexExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "3480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3470:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 607,
												"nodeType": "Return",
												"src": "3463:25:4"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "3318:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3426:8:4"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "3389:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3388:17:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "3444:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3443:9:4"
									},
									"scope": 998,
									"src": "3370:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1025
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "3790:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 621,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3810:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3810:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 623,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "3824:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "3835:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "3800:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3800:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3859:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 619,
												"id": 628,
												"nodeType": "Return",
												"src": "3852:11:4"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "3501:192:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3766:8:4"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3716:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3735:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3715:35:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3784:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3784:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3783:6:4"
									},
									"scope": 998,
									"src": "3698:172:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "4026:51:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 641,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4043:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 643,
														"indexExpression": {
															"argumentTypes": null,
															"id": 642,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "4055:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4043:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 645,
													"indexExpression": {
														"argumentTypes": null,
														"id": 644,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "4062:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4043:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 640,
												"id": 646,
												"nodeType": "Return",
												"src": "4036:34:4"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3876:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 637,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3999:8:4"
									},
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "3947:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "3962:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3946:32:4"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "4017:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4016:9:4"
									},
									"scope": 998,
									"src": "3928:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1045
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "4304:77:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 660,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4323:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4323:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4337:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4346:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "4314:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4314:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "4314:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4370:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 658,
												"id": 667,
												"nodeType": "Return",
												"src": "4363:11:4"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "4083:127:4",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 655,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4280:8:4"
									},
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4232:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4232:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4249:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4231:33:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4298:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4298:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4297:6:4"
									},
									"scope": 998,
									"src": "4215:166:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "4990:205:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5010:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5018:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5029:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "5000:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "5000:36:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5055:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 690,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5063:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5063:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "5115:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5123:42:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "5077:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "5089:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5077:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 695,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5097:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5097:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5077:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2833,
																"src": "5077:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5077:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "5046:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5046:121:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5184:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 681,
												"id": 705,
												"nodeType": "Return",
												"src": "5177:11:4"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "4387:456:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4966:8:4"
									},
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4879:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4903:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4930:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4869:81:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "4984:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4984:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4983:6:4"
									},
									"scope": 998,
									"src": "4848:347:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "5684:121:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 718,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5703:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5703:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5717:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 728,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "5765:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 721,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "5726:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 724,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 722,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5738:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5738:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5726:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 725,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "5752:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5726:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2788,
																"src": "5726:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5726:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "5694:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5694:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "5694:83:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5794:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 716,
												"id": 733,
												"nodeType": "Return",
												"src": "5787:11:4"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5201:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5617:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5634:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5634:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5616:37:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5678:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5678:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5677:6:4"
									},
									"scope": 998,
									"src": "5590:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "6391:167:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 746,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6410:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6410:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6424:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 756,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "6472:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6489:39:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 749,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "6433:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 750,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6445:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6445:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6433:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 754,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 753,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "6459:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6433:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2833,
																"src": "6433:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6433:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "6401:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6401:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6401:129:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6547:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 744,
												"id": 762,
												"nodeType": "Return",
												"src": "6540:11:4"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "5811:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6319:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6319:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6336:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6318:42:4"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6385:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6384:6:4"
									},
									"scope": 998,
									"src": "6292:266:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "7149:443:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 775,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "7167:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7185:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7177:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7177:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7177:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7167:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7189:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7159:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "7159:70:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 785,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "7247:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7268:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7260:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7260:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7260:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7247:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7272:37:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7239:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "7239:71:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 795,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7342:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 796,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7350:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "7321:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7321:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "7321:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7379:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 802,
														"indexExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7389:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 807,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "7421:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7429:40:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7399:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 805,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "7409:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7399:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2833,
															"src": "7399:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7399:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7379:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "7379:91:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 812,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7480:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 814,
														"indexExpression": {
															"argumentTypes": null,
															"id": 813,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7490:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7480:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 819,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "7528:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7503:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 816,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "7513:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7503:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2788,
															"src": "7503:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7503:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7480:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "7480:55:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 824,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7559:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 825,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7567:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 826,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7578:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "7550:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7550:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "EmitStatement",
												"src": "7545:40:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "6564:463:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7060:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7060:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7084:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7111:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7050:81:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7149:0:4"
									},
									"scope": 998,
									"src": "7032:560:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "7933:305:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 839,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "7951:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7970:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7962:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 840,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7962:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7962:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7951:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7974:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7943:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7943:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "7943:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8048:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8040:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8040:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8040:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 853,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8052:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 854,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8061:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "8019:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "8019:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 857,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "8079:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 860,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "8111:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 858,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "8094:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2788,
															"src": "8094:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8094:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8079:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "8079:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 864,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8128:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 866,
														"indexExpression": {
															"argumentTypes": null,
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8138:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8128:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 871,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "8172:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 867,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "8149:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 869,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 868,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "8159:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8149:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2788,
															"src": "8149:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8149:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8128:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8128:51:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8211:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8203:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8203:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8203:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 880,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8215:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 881,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8224:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8194:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8194:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "EmitStatement",
												"src": "8189:42:4"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "7598:265:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "7883:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7883:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "7900:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7882:33:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7933:0:4"
									},
									"scope": 998,
									"src": "7868:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "8623:345:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 894,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "8641:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8660:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8652:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 895,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8652:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8652:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8641:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8664:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8633:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8633:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "8633:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 904,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8732:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8749:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8741:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8741:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8741:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 909,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "8753:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "8711:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "8711:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 912,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8771:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 914,
														"indexExpression": {
															"argumentTypes": null,
															"id": 913,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8781:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8771:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 919,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "8815:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8823:36:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 915,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "8792:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 917,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 916,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "8802:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8792:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2833,
															"src": "8792:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8792:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8771:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "8771:89:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 924,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "8870:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 927,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "8902:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 925,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "8885:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "8885:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8885:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8870:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "8870:39:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 932,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8933:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8950:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8942:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8942:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8942:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 937,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "8954:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 931,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8924:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8924:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "EmitStatement",
												"src": "8919:42:4"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "8244:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "8573:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "8590:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8572:33:4"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8623:0:4"
									},
									"scope": 998,
									"src": "8558:410:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "9504:257:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 952,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "9522:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9539:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9531:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 953,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9531:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9531:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9522:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9543:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9514:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9514:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "9514:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 962,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "9600:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9619:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9611:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9611:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9611:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9600:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9623:36:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9592:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9592:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9592:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 971,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "9671:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 974,
															"indexExpression": {
																"argumentTypes": null,
																"id": 972,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "9683:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9671:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 975,
														"indexExpression": {
															"argumentTypes": null,
															"id": 973,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9690:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9671:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 976,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "9701:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9671:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "9671:36:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 980,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "9731:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 981,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9738:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 982,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "9747:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "9722:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9722:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "EmitStatement",
												"src": "9717:37:4"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "8974:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9418:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9418:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9441:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9441:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9466:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9466:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9408:78:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9504:0:4"
									},
									"scope": 998,
									"src": "9391:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "10467:2:4",
										"statements": []
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "9767:576:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10387:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10387:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10409:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10429:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10377:72:4"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10467:0:4"
									},
									"scope": 998,
									"src": "10348:121:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "1325:9146:4"
						}
					],
					"src": "33:10439:4"
				},
				"id": 4
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "269:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "268:9:5"
									},
									"scope": 1076,
									"src": "223:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1015,
												"src": "380:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "379:17:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1015,
												"src": "420:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:9:5"
									},
									"scope": 1076,
									"src": "361:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "667:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "686:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:35:5"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "720:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:5"
									},
									"scope": 1076,
									"src": "649:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1020:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1035:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:32:5"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1074:9:5"
									},
									"scope": 1076,
									"src": "1001:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1754:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1771:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1753:33:5"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1805:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1042,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:6:5"
									},
									"scope": 1076,
									"src": "1737:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2149:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2173:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2200:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2139:81:5"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2239:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2238:6:5"
									},
									"scope": 1076,
									"src": "2118:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1066,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2429:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2451:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2471:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:57:5"
									},
									"src": "2414:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1075,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2660:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2683:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2708:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2659:63:5"
									},
									"src": "2645:78:5"
								}
							],
							"scope": 1077,
							"src": "129:2596:5"
						}
					],
					"src": "33:2693:5"
				},
				"id": 5
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20Metadata": [
							1101
						]
					},
					"id": 1102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1079,
							"nodeType": "ImportDirective",
							"scope": 1102,
							"sourceUnit": 1077,
							"src": "58:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1081,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1076,
										"src": "227:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1076",
											"typeString": "contract IERC20"
										}
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "227:6:6"
								}
							],
							"contractDependencies": [
								1076
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "82:116:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1101,
							"linearizedBaseContracts": [
								1101,
								1076
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "240:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "338:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "337:15:6"
									},
									"scope": 1101,
									"src": "299:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "359:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1094,
												"src": "461:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1091,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "461:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "460:15:6"
									},
									"scope": 1101,
									"src": "420:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "482:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "595:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1097,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "595:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "594:7:6"
									},
									"scope": 1101,
									"src": "552:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1102,
							"src": "199:405:6"
						}
					],
					"src": "33:572:6"
				},
				"id": 6
			},
			"IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1103,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1113,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1113,
												"src": "110:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1113,
												"src": "134:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1113,
												"src": "158:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1113,
												"src": "172:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "172:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "109:68:7"
									},
									"src": "92:86:7"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "017e7e58",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1118,
												"src": "224:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "223:9:7"
									},
									"scope": 1164,
									"src": "184:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "094b7415",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:7"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "284:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "283:9:7"
									},
									"scope": 1164,
									"src": "238:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e6a43905",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1132,
												"src": "316:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1132,
												"src": "332:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:32:7"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1132,
												"src": "371:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "370:14:7"
									},
									"scope": 1164,
									"src": "299:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1e3dd18b",
									"id": 1139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1139,
												"src": "408:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "408:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:6:7"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1139,
												"src": "437:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "436:14:7"
									},
									"scope": 1164,
									"src": "390:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "574f2ba3",
									"id": 1144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:2:7"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1144,
												"src": "505:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "505:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "504:6:7"
									},
									"scope": 1164,
									"src": "456:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c9c65396",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1153,
												"src": "537:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1153,
												"src": "553:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "536:32:7"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1153,
												"src": "587:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "586:14:7"
									},
									"scope": 1164,
									"src": "517:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f46901ed",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1158,
												"src": "625:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "624:9:7"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:7"
									},
									"scope": 1164,
									"src": "607:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a2e74af6",
									"id": 1163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "672:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "671:9:7"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:7"
									},
									"scope": 1164,
									"src": "648:42:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1165,
							"src": "58:634:7"
						}
					],
					"src": "33:660:7"
				},
				"id": 7
			},
			"IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1406
						]
					},
					"id": 1407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1406,
							"linearizedBaseContracts": [
								1406
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1174,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1174,
												"src": "104:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "104:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1174,
												"src": "127:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1174,
												"src": "152:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "152:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "103:60:8"
									},
									"src": "89:75:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1182,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1182,
												"src": "184:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1182,
												"src": "206:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1182,
												"src": "226:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "226:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "183:54:8"
									},
									"src": "169:69:8"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:2:8"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1184,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "282:15:8"
									},
									"scope": 1406,
									"src": "244:54:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:8"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1192,
												"src": "344:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "344:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "343:15:8"
									},
									"scope": 1406,
									"src": "303:56:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:8"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1197,
												"src": "407:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1194,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "407:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "406:7:8"
									},
									"scope": 1406,
									"src": "364:50:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 1202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:8"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1202,
												"src": "465:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "465:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:6:8"
									},
									"scope": 1406,
									"src": "419:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1209,
												"src": "495:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "494:15:8"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1209,
												"src": "533:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "533:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "532:6:8"
									},
									"scope": 1406,
									"src": "476:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1218,
												"src": "563:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1218,
												"src": "578:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "562:32:8"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1218,
												"src": "618:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:6:8"
									},
									"scope": 1406,
									"src": "544:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "647:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "664:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "664:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "646:29:8"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "694:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "693:6:8"
									},
									"scope": 1406,
									"src": "630:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1236,
												"src": "723:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1236,
												"src": "735:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "735:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "722:24:8"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1236,
												"src": "765:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "764:6:8"
									},
									"scope": 1406,
									"src": "705:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "798:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "812:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "824:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "824:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "797:38:8"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "854:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "854:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "853:6:8"
									},
									"scope": 1406,
									"src": "776:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3644e515",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1252,
												"src": "917:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:9:8"
									},
									"scope": 1406,
									"src": "866:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "30adf81f",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:2:8"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1257,
												"src": "981:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "980:9:8"
									},
									"scope": 1406,
									"src": "931:59:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7ecebe00",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1264,
												"src": "1011:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1010:15:8"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1264,
												"src": "1049:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1048:6:8"
									},
									"scope": 1406,
									"src": "995:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d505accf",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "1077:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "1092:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "1109:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1109:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "1121:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1121:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "1136:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1273,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1136:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "1145:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1281,
												"src": "1156:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1076:90:8"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:0:8"
									},
									"scope": 1406,
									"src": "1061:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1289,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "1193:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "1217:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1217:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "1231:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1192:52:8"
									},
									"src": "1182:63:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1299,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1299,
												"src": "1261:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1299,
												"src": "1285:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1285:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1299,
												"src": "1299:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1299:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1299,
												"src": "1313:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1260:72:8"
									},
									"src": "1250:83:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1313,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1313,
												"src": "1358:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1313,
												"src": "1390:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1390:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1313,
												"src": "1414:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1414:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1313,
												"src": "1438:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1438:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1313,
												"src": "1463:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1463:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1313,
												"src": "1488:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1348:164:8"
									},
									"src": "1338:175:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1319,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1319,
												"src": "1529:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1314,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1319,
												"src": "1547:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1316,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1528:36:8"
									},
									"src": "1518:47:8"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ba9a7a56",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1597:2:8"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1324,
												"src": "1623:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1622:6:8"
									},
									"scope": 1406,
									"src": "1571:58:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c45a0155",
									"id": 1329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1650:2:8"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1329,
												"src": "1676:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1675:9:8"
									},
									"scope": 1406,
									"src": "1634:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0dfe1681",
									"id": 1334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1705:2:8"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "1731:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1730:9:8"
									},
									"scope": 1406,
									"src": "1690:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d21220a7",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:2:8"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1339,
												"src": "1786:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1785:9:8"
									},
									"scope": 1406,
									"src": "1745:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0902f1ac",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1820:2:8"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1348,
												"src": "1846:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1341,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1348,
												"src": "1864:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1343,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1348,
												"src": "1882:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1345,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1882:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1845:63:8"
									},
									"scope": 1406,
									"src": "1800:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5909c0d5",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1943:2:8"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1353,
												"src": "1969:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1969:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1968:6:8"
									},
									"scope": 1406,
									"src": "1914:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5a3d5493",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2009:2:8"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1358,
												"src": "2035:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2035:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2034:6:8"
									},
									"scope": 1406,
									"src": "1980:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7464fc3d",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2060:2:8"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1363,
												"src": "2086:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2086:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2085:6:8"
									},
									"scope": 1406,
									"src": "2046:46:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "6a627842",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1370,
												"src": "2112:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2112:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2111:12:8"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1370,
												"src": "2142:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2142:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2141:16:8"
									},
									"scope": 1406,
									"src": "2098:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "89afcb44",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "2177:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2176:12:8"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "2207:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "2221:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2221:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2206:28:8"
									},
									"scope": 1406,
									"src": "2163:72:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "022c0d9f",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1390,
												"src": "2254:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2254:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1390,
												"src": "2271:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2271:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1390,
												"src": "2288:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1390,
												"src": "2300:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2300:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2253:67:8"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2329:0:8"
									},
									"scope": 1406,
									"src": "2240:90:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "bc25cf77",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1395,
												"src": "2349:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2348:12:8"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2369:0:8"
									},
									"scope": 1406,
									"src": "2335:35:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fff6cae9",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:2:8"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:0:8"
									},
									"scope": 1406,
									"src": "2375:25:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "485cc955",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "2426:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "2435:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2425:18:8"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2452:0:8"
									},
									"scope": 1406,
									"src": "2406:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1407,
							"src": "58:2397:8"
						}
					],
					"src": "33:2423:8"
				},
				"id": 8
			},
			"IUniswapV2Router.sol": {
				"ast": {
					"absolutePath": "IUniswapV2Router.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1714
						],
						"IUniswapV2Router02": [
							1799
						]
					},
					"id": 1800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1408,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1714,
							"linearizedBaseContracts": [
								1714
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c45a0155",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:2:9"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1413,
												"src": "135:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "134:9:9"
									},
									"scope": 1714,
									"src": "93:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ad5c4648",
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:2:9"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1418,
												"src": "188:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "187:9:9"
									},
									"scope": 1714,
									"src": "149:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e8e33700",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "234:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "258:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "282:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "311:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "311:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "340:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "365:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "365:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "390:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "410:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "224:205:9"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "448:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "448:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "462:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "476:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "447:44:9"
									},
									"scope": 1714,
									"src": "203:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f305d719",
									"id": 1464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "531:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "554:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "554:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "587:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "616:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "643:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "663:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "521:161:9"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "709:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "727:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "743:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "708:50:9"
									},
									"scope": 1714,
									"src": "497:262:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "baa2abde",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "798:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "822:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "846:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "870:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "870:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "895:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "895:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "920:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "940:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "940:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "788:171:9"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "978:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "978:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "992:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "992:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "977:28:9"
									},
									"scope": 1714,
									"src": "764:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "02751cec",
									"id": 1504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1048:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1071:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1095:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1095:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1124:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1124:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1151:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1171:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1038:152:9"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1209:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1209:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "1227:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1227:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1208:34:9"
									},
									"scope": 1714,
									"src": "1011:232:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2195995c",
									"id": 1533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1292:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1316:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1340:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1340:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1364:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1389:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1389:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1414:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1434:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1457:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1457:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1474:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1521,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1474:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1483:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1494:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1282:227:9"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1528:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1528:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1533,
												"src": "1542:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1542:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1527:28:9"
									},
									"scope": 1714,
									"src": "1248:308:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ded9382a",
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1608:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1631:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1631:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1655:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1655:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1684:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1711:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1731:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1754:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1771:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1548,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1771:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1780:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1791:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1552,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1598:208:9"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1825:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1825:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1560,
												"src": "1843:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1824:34:9"
									},
									"scope": 1714,
									"src": "1561:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "38ed1739",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "1907:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1907:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "1930:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1930:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "1957:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1565,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1957:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1566,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1957:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "1990:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "2010:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2010:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1897:132:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1577,
												"src": "2048:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1573,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2048:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1574,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2048:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2047:23:9"
									},
									"scope": 1714,
									"src": "1864:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "8803dbee",
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "2119:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2119:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "2143:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2143:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "2169:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1582,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2169:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1583,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2169:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "2202:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "2222:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2109:132:9"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1594,
												"src": "2260:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1590,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2260:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1591,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2260:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2259:23:9"
									},
									"scope": 1714,
									"src": "2076:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7ff36ab5",
									"id": 1609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "2319:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2319:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "2338:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1597,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1598,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "2363:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "2375:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:71:9"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1609,
												"src": "2440:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1605,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2440:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1606,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2440:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2439:23:9"
									},
									"scope": 1714,
									"src": "2288:175:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4a25d94a",
									"id": 1626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "2499:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2499:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "2515:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2515:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "2533:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1614,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2533:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1615,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2533:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "2558:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "2570:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2498:86:9"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "2619:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1622,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2619:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1623,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2619:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2618:23:9"
									},
									"scope": 1714,
									"src": "2468:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18cbafe5",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "2678:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2678:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "2693:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2693:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "2712:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1631,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2712:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1632,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2712:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "2737:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "2749:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2749:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2677:86:9"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1643,
												"src": "2798:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1639,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2798:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1640,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2798:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2797:23:9"
									},
									"scope": 1714,
									"src": "2647:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fb3bdb41",
									"id": 1658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1658,
												"src": "2857:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2857:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1658,
												"src": "2873:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1646,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2873:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1647,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2873:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1658,
												"src": "2898:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1658,
												"src": "2910:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2910:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2856:68:9"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1658,
												"src": "2975:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1654,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2975:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1655,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2975:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2974:23:9"
									},
									"scope": 1714,
									"src": "2826:172:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ad615dec",
									"id": 1669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1669,
												"src": "3019:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1669,
												"src": "3033:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3033:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1669,
												"src": "3048:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3048:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3018:44:9"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1669,
												"src": "3086:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3086:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:14:9"
									},
									"scope": 1714,
									"src": "3004:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "054d50d4",
									"id": 1680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "3127:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3127:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "3142:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3142:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "3158:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3158:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3126:48:9"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "3198:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3197:16:9"
									},
									"scope": 1714,
									"src": "3105:109:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "85f8c259",
									"id": 1691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1691,
												"src": "3240:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1691,
												"src": "3256:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3256:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1691,
												"src": "3272:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3272:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3239:49:9"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1691,
												"src": "3312:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3312:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3311:15:9"
									},
									"scope": 1714,
									"src": "3219:108:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d06ca61f",
									"id": 1702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1702,
												"src": "3355:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3355:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1702,
												"src": "3370:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1694,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3370:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1695,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3370:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3354:40:9"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1702,
												"src": "3418:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1698,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3418:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1699,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3418:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:23:9"
									},
									"scope": 1714,
									"src": "3332:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1f00ca74",
									"id": 1713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "3468:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3468:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "3484:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1705,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3484:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1706,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3484:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3467:41:9"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1713,
												"src": "3532:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1709,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3532:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1710,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3532:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3531:23:9"
									},
									"scope": 1714,
									"src": "3446:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1800,
							"src": "58:3499:9"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1715,
										"name": "IUniswapV2Router01",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1714,
										"src": "3622:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router01_$1714",
											"typeString": "contract IUniswapV2Router01"
										}
									},
									"id": 1716,
									"nodeType": "InheritanceSpecifier",
									"src": "3622:18:9"
								}
							],
							"contractDependencies": [
								1714
							],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1799,
							"linearizedBaseContracts": [
								1799,
								1714
							],
							"name": "IUniswapV2Router02",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "af2979eb",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "3713:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3713:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "3736:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3736:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "3760:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3760:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "3789:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3789:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "3816:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "3836:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3836:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3703:152:9"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "3874:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3874:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3873:16:9"
									},
									"scope": 1799,
									"src": "3647:243:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5b0d5984",
									"id": 1758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "3971:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "3994:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3994:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4018:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4018:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4047:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4047:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4074:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4094:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4094:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4117:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4117:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4134:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1748,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4134:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4143:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4154:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4154:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3961:208:9"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1758,
												"src": "4188:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4188:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4187:16:9"
									},
									"scope": 1799,
									"src": "3895:309:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5c11d795",
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "4282:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4282:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "4305:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4305:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "4332:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1763,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4332:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1764,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4332:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "4365:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1772,
												"src": "4385:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4385:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4272:132:9"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:0:9"
									},
									"scope": 1799,
									"src": "4210:204:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b6f9de95",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1784,
												"src": "4488:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4488:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1784,
												"src": "4515:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1775,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4515:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1776,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4515:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1784,
												"src": "4548:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1784,
												"src": "4568:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4568:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4478:109:9"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4604:0:9"
									},
									"scope": 1799,
									"src": "4419:186:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "791ac947",
									"id": 1798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1798,
												"src": "4679:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4679:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1798,
												"src": "4702:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4702:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1798,
												"src": "4729:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1789,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4729:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1790,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4729:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1798,
												"src": "4762:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4762:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1798,
												"src": "4782:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4782:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4669:132:9"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4810:0:9"
									},
									"scope": 1799,
									"src": "4610:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1800,
							"src": "3590:1223:9"
						}
					],
					"src": "33:4781:9"
				},
				"id": 9
			},
			"IterableMapping.sol": {
				"ast": {
					"absolutePath": "IterableMapping.sol",
					"exportedSymbols": {
						"IterableMapping": [
							2026
						]
					},
					"id": 2027,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1801,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2026,
							"linearizedBaseContracts": [
								2026
							],
							"name": "IterableMapping",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IterableMapping.Map",
									"id": 1817,
									"members": [
										{
											"constant": false,
											"id": 1804,
											"mutability": "mutable",
											"name": "keys",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1817,
											"src": "154:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1803,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "154:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1808,
											"mutability": "mutable",
											"name": "values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1817,
											"src": "178:31:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1807,
												"keyType": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "178:24:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 1806,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "197:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1812,
											"mutability": "mutable",
											"name": "indexOf",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1817,
											"src": "219:32:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1811,
												"keyType": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "219:24:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 1810,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "238:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1816,
											"mutability": "mutable",
											"name": "inserted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1817,
											"src": "261:33:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1815,
												"keyType": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "261:24:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 1814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "280:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Map",
									"nodeType": "StructDefinition",
									"scope": 2026,
									"src": "133:168:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "377:39:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1826,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "394:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																"typeString": "struct IterableMapping.Map storage pointer"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1808,
														"src": "394:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1829,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1828,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "405:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "394:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1830,
												"nodeType": "Return",
												"src": "387:22:10"
											}
										]
									},
									"documentation": null,
									"functionSelector": "732a2ccf",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "map",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1832,
												"src": "320:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
													"typeString": "struct IterableMapping.Map"
												},
												"typeName": {
													"contractScope": null,
													"id": 1818,
													"name": "Map",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1817,
													"src": "320:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
														"typeString": "struct IterableMapping.Map"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1832,
												"src": "337:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "319:30:10"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1832,
												"src": "371:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "371:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "370:6:10"
									},
									"scope": 2026,
									"src": "307:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "501:111:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "514:18:10",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1841,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "515:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1816,
															"src": "515:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1844,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1843,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "528:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "515:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1850,
												"nodeType": "IfStatement",
												"src": "511:57:10",
												"trueBody": {
													"id": 1849,
													"nodeType": "Block",
													"src": "534:34:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "555:2:10",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "556:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															},
															"functionReturnParameters": 1840,
															"id": 1848,
															"nodeType": "Return",
															"src": "548:9:10"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1853,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "588:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																		"typeString": "struct IterableMapping.Map storage pointer"
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "indexOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1812,
																"src": "588:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1856,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1855,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1836,
																"src": "600:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "588:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "584:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 1851,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "584:3:10",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "584:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1858,
												"nodeType": "Return",
												"src": "577:28:10"
											}
										]
									},
									"documentation": null,
									"functionSelector": "17e142d1",
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIndexOfKey",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "map",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1860,
												"src": "445:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
													"typeString": "struct IterableMapping.Map"
												},
												"typeName": {
													"contractScope": null,
													"id": 1833,
													"name": "Map",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1817,
													"src": "445:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
														"typeString": "struct IterableMapping.Map"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1860,
												"src": "462:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:30:10"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1860,
												"src": "496:3:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1838,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "496:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "495:5:10"
									},
									"scope": 2026,
									"src": "422:190:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "700:39:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1869,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "717:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																"typeString": "struct IterableMapping.Map storage pointer"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1804,
														"src": "717:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1872,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1871,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "726:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "717:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1873,
												"nodeType": "Return",
												"src": "710:22:10"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d1aa9e7e",
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyAtIndex",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "map",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1875,
												"src": "641:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
													"typeString": "struct IterableMapping.Map"
												},
												"typeName": {
													"contractScope": null,
													"id": 1861,
													"name": "Map",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1817,
													"src": "641:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
														"typeString": "struct IterableMapping.Map"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1875,
												"src": "658:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "658:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "640:29:10"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1875,
												"src": "691:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:9:10"
									},
									"scope": 2026,
									"src": "618:121:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "805:39:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1882,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "822:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																"typeString": "struct IterableMapping.Map storage pointer"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1804,
														"src": "822:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "822:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1885,
												"nodeType": "Return",
												"src": "815:22:10"
											}
										]
									},
									"documentation": null,
									"functionSelector": "deb3d896",
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "size",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "map",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1887,
												"src": "761:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
													"typeString": "struct IterableMapping.Map"
												},
												"typeName": {
													"contractScope": null,
													"id": 1876,
													"name": "Map",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1817,
													"src": "761:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
														"typeString": "struct IterableMapping.Map"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "760:17:10"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1887,
												"src": "799:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "799:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "798:6:10"
									},
									"scope": 2026,
									"src": "747:97:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "910:255:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1896,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "924:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																"typeString": "struct IterableMapping.Map storage pointer"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "inserted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1816,
														"src": "924:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1899,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1898,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "937:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "924:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "995:164:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1909,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "1009:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																				"typeString": "struct IterableMapping.Map storage pointer"
																			}
																		},
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "inserted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1816,
																		"src": "1009:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1913,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1911,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "1022:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1009:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1029:4:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1009:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1916,
															"nodeType": "ExpressionStatement",
															"src": "1009:24:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1917,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "1047:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																				"typeString": "struct IterableMapping.Map storage pointer"
																			}
																		},
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1808,
																		"src": "1047:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1921,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1919,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "1058:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1047:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1922,
																	"name": "val",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "1065:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1047:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1924,
															"nodeType": "ExpressionStatement",
															"src": "1047:21:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1925,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "1082:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																				"typeString": "struct IterableMapping.Map storage pointer"
																			}
																		},
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "indexOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1812,
																		"src": "1082:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1929,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1927,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "1094:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1082:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1930,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "1101:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																				"typeString": "struct IterableMapping.Map storage pointer"
																			}
																		},
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1804,
																		"src": "1101:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1101:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1082:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1934,
															"nodeType": "ExpressionStatement",
															"src": "1082:34:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1940,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "1144:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1935,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "1130:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																				"typeString": "struct IterableMapping.Map storage pointer"
																			}
																		},
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1804,
																		"src": "1130:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1130:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1130:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1942,
															"nodeType": "ExpressionStatement",
															"src": "1130:18:10"
														}
													]
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "920:239:10",
												"trueBody": {
													"id": 1908,
													"nodeType": "Block",
													"src": "943:46:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1900,
																			"name": "map",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "957:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																				"typeString": "struct IterableMapping.Map storage pointer"
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1808,
																		"src": "957:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1904,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1902,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "968:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "957:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1905,
																	"name": "val",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "975:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "957:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1907,
															"nodeType": "ExpressionStatement",
															"src": "957:21:10"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "bc2b405c",
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "map",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1946,
												"src": "863:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
													"typeString": "struct IterableMapping.Map"
												},
												"typeName": {
													"contractScope": null,
													"id": 1888,
													"name": "Map",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1817,
													"src": "863:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
														"typeString": "struct IterableMapping.Map"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1946,
												"src": "880:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "val",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1946,
												"src": "893:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "893:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "862:40:10"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:0:10"
									},
									"scope": 2026,
									"src": "850:315:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2024,
										"nodeType": "Block",
										"src": "1224:403:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1238:18:10",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1953,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1239:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1816,
															"src": "1239:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1956,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1955,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "1252:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1239:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1960,
												"nodeType": "IfStatement",
												"src": "1234:55:10",
												"trueBody": {
													"id": 1959,
													"nodeType": "Block",
													"src": "1258:31:10",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 1952,
															"id": 1958,
															"nodeType": "Return",
															"src": "1272:7:10"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1299:24:10",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1961,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1306:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "inserted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1816,
															"src": "1306:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1964,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1963,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "1319:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1306:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "1299:24:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1333:22:10",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1967,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1340:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1808,
															"src": "1340:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1970,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1969,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "1351:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1340:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "1333:22:10"
											},
											{
												"assignments": [
													1974
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "index",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2024,
														"src": "1366:10:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1973,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1366:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1979,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1975,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "1379:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																"typeString": "struct IterableMapping.Map storage pointer"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "indexOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1812,
														"src": "1379:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1978,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1977,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "1391:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1379:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1366:29:10"
											},
											{
												"assignments": [
													1981
												],
												"declarations": [
													{
														"constant": false,
														"id": 1981,
														"mutability": "mutable",
														"name": "lastIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2024,
														"src": "1405:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1980,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1405:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1987,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1982,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1422:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1804,
															"src": "1422:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1422:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1440:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1422:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:36:10"
											},
											{
												"assignments": [
													1989
												],
												"declarations": [
													{
														"constant": false,
														"id": 1989,
														"mutability": "mutable",
														"name": "lastKey",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2024,
														"src": "1451:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1988,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1451:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1990,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "1469:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																"typeString": "struct IterableMapping.Map storage pointer"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1804,
														"src": "1469:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1993,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1992,
														"name": "lastIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "1478:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1469:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1451:37:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1995,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1499:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1812,
															"src": "1499:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1999,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1997,
															"name": "lastKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "1511:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1499:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2000,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "1522:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1499:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "1499:28:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1537:23:10",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2003,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1544:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1812,
															"src": "1544:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2006,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2005,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "1556:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1544:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "1537:23:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2009,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1571:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1804,
															"src": "1571:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2013,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2011,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "1580:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1571:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2014,
														"name": "lastKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "1589:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1571:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "1571:25:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2017,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1948,
																"src": "1606:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
																	"typeString": "struct IterableMapping.Map storage pointer"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1804,
															"src": "1606:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1606:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1606:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "1606:14:10"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4c60db9c",
									"id": 2025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "map",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2025,
												"src": "1187:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
													"typeString": "struct IterableMapping.Map"
												},
												"typeName": {
													"contractScope": null,
													"id": 1947,
													"name": "Map",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1817,
													"src": "1187:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
														"typeString": "struct IterableMapping.Map"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2025,
												"src": "1204:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1186:30:10"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1224:0:10"
									},
									"scope": 2026,
									"src": "1171:456:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2027,
							"src": "57:1572:10"
						}
					],
					"src": "32:1598:10"
				},
				"id": 10
			},
			"MONEYAVAXDividendTracker.sol": {
				"ast": {
					"absolutePath": "MONEYAVAXDividendTracker.sol",
					"exportedSymbols": {
						"MONEYAVAXDividendTracker": [
							2652
						]
					},
					"id": 2653,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2028,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:11"
						},
						{
							"absolutePath": "DividendPayingToken.sol",
							"file": "./DividendPayingToken.sol",
							"id": 2029,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 449,
							"src": "60:35:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2030,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 2956,
							"src": "96:24:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IterableMapping.sol",
							"file": "./IterableMapping.sol",
							"id": 2031,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 2027,
							"src": "121:31:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2032,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 2761,
							"src": "153:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IUniswapV2Pair.sol",
							"file": "./IUniswapV2Pair.sol",
							"id": 2033,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 1407,
							"src": "177:30:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IUniswapV2Factory.sol",
							"file": "./IUniswapV2Factory.sol",
							"id": 2034,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 1165,
							"src": "208:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IUniswapV2Router.sol",
							"file": "./IUniswapV2Router.sol",
							"id": 2035,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 1800,
							"src": "242:32:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MONEYAVAXDividendTracker.sol",
							"file": "./MONEYAVAXDividendTracker.sol",
							"id": 2036,
							"nodeType": "ImportDirective",
							"scope": 2653,
							"sourceUnit": 2653,
							"src": "275:40:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2037,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2760,
										"src": "356:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$2760",
											"typeString": "contract Ownable"
										}
									},
									"id": 2038,
									"nodeType": "InheritanceSpecifier",
									"src": "356:7:11"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2039,
										"name": "DividendPayingToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 448,
										"src": "365:19:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DividendPayingToken_$448",
											"typeString": "contract DividendPayingToken"
										}
									},
									"id": 2040,
									"nodeType": "InheritanceSpecifier",
									"src": "365:19:11"
								}
							],
							"contractDependencies": [
								22,
								448,
								478,
								506,
								998,
								1076,
								1101,
								2760
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2652,
							"linearizedBaseContracts": [
								2652,
								448,
								506,
								478,
								2760,
								998,
								1101,
								1076,
								22
							],
							"name": "MONEYAVAXDividendTracker",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2043,
									"libraryName": {
										"contractScope": null,
										"id": 2041,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2955,
										"src": "397:8:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2955",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "391:27:11",
									"typeName": {
										"id": 2042,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "410:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2046,
									"libraryName": {
										"contractScope": null,
										"id": 2044,
										"name": "SafeMathInt",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3172,
										"src": "429:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathInt_$3172",
											"typeString": "library SafeMathInt"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "423:29:11",
									"typeName": {
										"id": 2045,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "445:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 2049,
									"libraryName": {
										"contractScope": null,
										"id": 2047,
										"name": "IterableMapping",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2026,
										"src": "463:15:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IterableMapping_$2026",
											"typeString": "library IterableMapping"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "457:46:11",
									"typeName": {
										"contractScope": null,
										"id": 2048,
										"name": "IterableMapping.Map",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1817,
										"src": "483:19:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
											"typeString": "struct IterableMapping.Map"
										}
									}
								},
								{
									"constant": false,
									"id": 2051,
									"mutability": "mutable",
									"name": "tokenHoldersMap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2652,
									"src": "509:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Map_$1817_storage",
										"typeString": "struct IterableMapping.Map"
									},
									"typeName": {
										"contractScope": null,
										"id": 2050,
										"name": "IterableMapping.Map",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1817,
										"src": "509:19:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Map_$1817_storage_ptr",
											"typeString": "struct IterableMapping.Map"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3009a609",
									"id": 2053,
									"mutability": "mutable",
									"name": "lastProcessedIndex",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2652,
									"src": "558:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2052,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "558:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4e7b827f",
									"id": 2057,
									"mutability": "mutable",
									"name": "excludedFromDividends",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2652,
									"src": "598:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2056,
										"keyType": {
											"id": 2054,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "607:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "598:25:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 2055,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "618:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "226cfa3d",
									"id": 2061,
									"mutability": "mutable",
									"name": "lastClaimTimes",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2652,
									"src": "659:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2060,
										"keyType": {
											"id": 2058,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "668:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "659:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2059,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "679:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6f2789ec",
									"id": 2063,
									"mutability": "mutable",
									"name": "claimWait",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2652,
									"src": "716:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2062,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "716:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "be10b614",
									"id": 2065,
									"mutability": "immutable",
									"name": "minimumTokenBalanceForDividends",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2652,
									"src": "746:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2064,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "746:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2069,
									"name": "ExcludeFromDividends",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "836:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "835:25:11"
									},
									"src": "809:52:11"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2075,
									"name": "ClaimWaitUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"indexed": true,
												"mutability": "mutable",
												"name": "newValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "889:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "915:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "888:52:11"
									},
									"src": "866:75:11"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2083,
									"name": "Claim",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2083,
												"src": "959:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2083,
												"src": "984:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"indexed": true,
												"mutability": "mutable",
												"name": "automatic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2083,
												"src": "1000:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1000:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "958:65:11"
									},
									"src": "947:77:11"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "1130:118:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2090,
														"name": "claimWait",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "1137:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "33363030",
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1149:4:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "1137:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "1137:16:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2094,
														"name": "minimumTokenBalanceForDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "1163:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_200000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000"
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323030303030",
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1197:6:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200000_by_1",
																"typeString": "int_const 200000"
															},
															"value": "200000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3130",
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1207:2:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3138",
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1211:2:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1207:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 2099,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1206:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1197:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000000000000_by_1",
															"typeString": "int_const 200000000000000000000000"
														}
													},
													"src": "1163:51:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "1163:51:11"
											}
										]
									},
									"documentation": null,
									"id": 2104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "4d4f4e4559415641585f4469766964656e5f547261636b6572",
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1071:27:11",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2a4982fb6e656cf7eee3a917c92e008e0e1a95ffeccc88d7639e472f55c6f2f1",
														"typeString": "literal_string \"MONEYAVAX_Dividen_Tracker\""
													},
													"value": "MONEYAVAX_Dividen_Tracker"
												},
												{
													"argumentTypes": null,
													"hexValue": "4d4f4e4559415641585f4469766964656e645f547261636b6572",
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1100:28:11",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e13af98b432fcf2d092e03008a621c21ec30d44be8582a49eca8640a6f9d2d6e",
														"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker\""
													},
													"value": "MONEYAVAX_Dividend_Tracker"
												}
											],
											"id": 2088,
											"modifierName": {
												"argumentTypes": null,
												"id": 2085,
												"name": "DividendPayingToken",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 448,
												"src": "1051:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_DividendPayingToken_$448_$",
													"typeString": "type(contract DividendPayingToken)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1051:78:11"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1041:2:11"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:0:11"
									},
									"scope": 2652,
									"src": "1030:218:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										331
									],
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "1318:83:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1336:5:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"argumentTypes": null,
															"hexValue": "4d4f4e4559415641585f4469766964656e645f547261636b65723a204e6f207472616e736665727320616c6c6f776564",
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:50:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e72b312e2e60f004feaa3159509b718300b3b0fca2c157bbc01115b4b8030bc3",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: No transfers allowed\""
															},
															"value": "MONEYAVAX_Dividend_Tracker: No transfers allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e72b312e2e60f004feaa3159509b718300b3b0fca2c157bbc01115b4b8030bc3",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: No transfers allowed\""
															}
														],
														"id": 2114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1328:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1328:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "1328:66:11"
											}
										]
									},
									"documentation": null,
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2112,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1309:8:11"
									},
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2120,
												"src": "1273:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2120,
												"src": "1282:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2120,
												"src": "1291:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1272:27:11"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:0:11"
									},
									"scope": 2652,
									"src": "1254:147:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										142
									],
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "1451:146:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1469:5:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"argumentTypes": null,
															"hexValue": "4d4f4e4559415641585f4469766964656e645f547261636b65723a2077697468647261774469766964656e642064697361626c65642e20557365207468652027636c61696d272066756e6374696f6e206f6e20746865206d61696e204d4f4e45594156415820636f6e74726163742e",
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1476:113:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c615061e29940b7a365b4fa13ab29a516e98be4c6c3d2f44713e16d490a2393f",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: withdrawDividend disabled. Use the 'claim' function on the main MONEYAVAX contract.\""
															},
															"value": "MONEYAVAX_Dividend_Tracker: withdrawDividend disabled. Use the 'claim' function on the main MONEYAVAX contract."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c615061e29940b7a365b4fa13ab29a516e98be4c6c3d2f44713e16d490a2393f",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: withdrawDividend disabled. Use the 'claim' function on the main MONEYAVAX contract.\""
															}
														],
														"id": 2124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1461:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1461:129:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "ExpressionStatement",
												"src": "1461:129:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6a474002",
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDividend",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1442:8:11"
									},
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:11"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:11"
									},
									"scope": 2652,
									"src": "1407:190:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "1669:209:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1684:31:11",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2138,
																	"name": "excludedFromDividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "1685:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2140,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2139,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2132,
																	"src": "1707:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1685:30:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1676:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "1676:40:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2144,
															"name": "excludedFromDividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "1723:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2146,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2145,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "1745:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1723:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1756:4:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1723:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "1723:37:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "1780:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1789:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2150,
														"name": "_setBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "1768:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "1768:23:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2158,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "1821:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2155,
															"name": "tokenHoldersMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "1798:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage",
																"typeString": "struct IterableMapping.Map storage ref"
															}
														},
														"id": 2157,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2025,
														"src": "1798:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Map_$1817_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Map_$1817_storage_ptr_$",
															"typeString": "function (struct IterableMapping.Map storage pointer,address)"
														}
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2160,
												"nodeType": "ExpressionStatement",
												"src": "1798:31:11"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "1863:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2161,
														"name": "ExcludeFromDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "1842:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1842:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "EmitStatement",
												"src": "1837:34:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "31e79db0",
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2135,
											"modifierName": {
												"argumentTypes": null,
												"id": 2134,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2709,
												"src": "1659:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1659:9:11"
										}
									],
									"name": "excludeFromDividends",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "1633:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1632:17:11"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:11"
									},
									"scope": 2652,
									"src": "1603:275:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "1950:357:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2174,
																	"name": "newClaimWait",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "1968:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "33363030",
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1984:4:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3600_by_1",
																		"typeString": "int_const 3600"
																	},
																	"value": "3600"
																},
																"src": "1968:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2177,
																	"name": "newClaimWait",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "1992:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3836343030",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2008:5:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "86400"
																},
																"src": "1992:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1968:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d4f4e4559415641585f4469766964656e645f547261636b65723a20636c61696d57616974206d757374206265207570646174656420746f206265747765656e203120616e6420323420686f757273",
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2015:81:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d2f405a35ca6c83b74bbde3a75785f77c58df6f366c6c72c07716bd11b48b44",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: claimWait must be updated to between 1 and 24 hours\""
															},
															"value": "MONEYAVAX_Dividend_Tracker: claimWait must be updated to between 1 and 24 hours"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d2f405a35ca6c83b74bbde3a75785f77c58df6f366c6c72c07716bd11b48b44",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: claimWait must be updated to between 1 and 24 hours\""
															}
														],
														"id": 2173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1960:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:137:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "1960:137:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2185,
																"name": "newClaimWait",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "2115:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2186,
																"name": "claimWait",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "2131:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2115:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d4f4e4559415641585f4469766964656e645f547261636b65723a2043616e6e6f742075706461746520636c61696d5761697420746f2073616d652076616c7565",
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2142:67:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_942c29fdcdc1c6c74273047a896f52dec5ef9bd1fdd2acaf85c319d066f5abc6",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: Cannot update claimWait to same value\""
															},
															"value": "MONEYAVAX_Dividend_Tracker: Cannot update claimWait to same value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_942c29fdcdc1c6c74273047a896f52dec5ef9bd1fdd2acaf85c319d066f5abc6",
																"typeString": "literal_string \"MONEYAVAX_Dividend_Tracker: Cannot update claimWait to same value\""
															}
														],
														"id": 2184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2107:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2107:103:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "2107:103:11"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2192,
															"name": "newClaimWait",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "2242:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2193,
															"name": "claimWait",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "2256:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2191,
														"name": "ClaimWaitUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2075,
														"src": "2225:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2225:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2195,
												"nodeType": "EmitStatement",
												"src": "2220:46:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2196,
														"name": "claimWait",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "2276:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2197,
														"name": "newClaimWait",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "2288:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2276:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "2276:24:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e98030c7",
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2171,
											"modifierName": {
												"argumentTypes": null,
												"id": 2170,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2709,
												"src": "1940:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1940:9:11"
										}
									],
									"name": "updateClaimWait",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "newClaimWait",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2201,
												"src": "1909:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1908:22:11"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:0:11"
									},
									"scope": 2652,
									"src": "1884:423:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "2377:39:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2206,
													"name": "lastProcessedIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2053,
													"src": "2391:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2205,
												"id": 2207,
												"nodeType": "Return",
												"src": "2384:25:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e7841ec0",
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLastProcessedIndex",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:11"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2209,
												"src": "2368:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2367:9:11"
									},
									"scope": 2652,
									"src": "2313:103:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "2488:51:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2214,
															"name": "tokenHoldersMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "2505:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage",
																"typeString": "struct IterableMapping.Map storage ref"
															}
														},
														"id": 2215,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1804,
														"src": "2505:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2505:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2217,
												"nodeType": "Return",
												"src": "2498:34:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "09bbedde",
									"id": 2219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfTokenHolders",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:2:11"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2219,
												"src": "2479:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2478:9:11"
									},
									"scope": 2652,
									"src": "2422:117:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "2916:1258:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2240,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "2926:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2241,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "2936:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2926:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2243,
												"nodeType": "ExpressionStatement",
												"src": "2926:18:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2244,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "2955:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2247,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "2993:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2245,
																"name": "tokenHoldersMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2051,
																"src": "2963:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage",
																	"typeString": "struct IterableMapping.Map storage ref"
																}
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getIndexOfKey",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1860,
															"src": "2963:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Map_$1817_storage_ptr_$_t_address_$returns$_t_int256_$bound_to$_t_struct$_Map_$1817_storage_ptr_$",
																"typeString": "function (struct IterableMapping.Map storage pointer,address) view returns (int256)"
															}
														},
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2963:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2955:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "2955:46:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2251,
														"name": "iterationsUntilProcessed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "3012:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "3039:2:11",
														"subExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3040:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_1_by_1",
															"typeString": "int_const -1"
														}
													},
													"src": "3012:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "3012:29:11"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2256,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "3055:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3064:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3055:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2305,
												"nodeType": "IfStatement",
												"src": "3052:570:11",
												"trueBody": {
													"id": 2304,
													"nodeType": "Block",
													"src": "3067:555:11",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2261,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "3092:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3084:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2259,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3084:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3084:14:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2263,
																	"name": "lastProcessedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "3101:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3084:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2302,
																"nodeType": "Block",
																"src": "3236:376:11",
																"statements": [
																	{
																		"assignments": [
																			2277
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2277,
																				"mutability": "mutable",
																				"name": "processesUntilEndOfArray",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2302,
																				"src": "3254:32:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2276,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3254:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2291,
																		"initialValue": {
																			"argumentTypes": null,
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2278,
																							"name": "tokenHoldersMap",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2051,
																							"src": "3289:15:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Map_$1817_storage",
																								"typeString": "struct IterableMapping.Map storage ref"
																							}
																						},
																						"id": 2279,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "keys",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1804,
																						"src": "3289:20:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 2280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "3289:27:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 2281,
																					"name": "lastProcessedIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "3319:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3289:48:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 2289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3506:1:11",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3289:218:11",
																			"trueExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2287,
																						"name": "lastProcessedIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2053,
																						"src": "3428:18:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 2283,
																								"name": "tokenHoldersMap",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2051,
																								"src": "3396:15:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Map_$1817_storage",
																									"typeString": "struct IterableMapping.Map storage ref"
																								}
																							},
																							"id": 2284,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "keys",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1804,
																							"src": "3396:20:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 2285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "3396:27:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2805,
																					"src": "3396:31:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2288,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3396:51:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3254:253:11"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2292,
																				"name": "iterationsUntilProcessed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2228,
																				"src": "3527:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2297,
																								"name": "processesUntilEndOfArray",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2277,
																								"src": "3571:24:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2296,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3564:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 2295,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "3564:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 2298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3564:32:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2293,
																						"name": "index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2226,
																						"src": "3554:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"id": 2294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3129,
																					"src": "3554:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3554:43:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "3527:70:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2301,
																		"nodeType": "ExpressionStatement",
																		"src": "3527:70:11"
																	}
																]
															},
															"id": 2303,
															"nodeType": "IfStatement",
															"src": "3081:531:11",
															"trueBody": {
																"id": 2275,
																"nodeType": "Block",
																"src": "3121:97:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2265,
																				"name": "iterationsUntilProcessed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2228,
																				"src": "3139:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2270,
																								"name": "lastProcessedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2053,
																								"src": "3183:18:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2269,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3176:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 2268,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "3176:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": null,
																									"typeString": null
																								}
																							}
																						},
																						"id": 2271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3176:26:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2266,
																						"name": "index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2226,
																						"src": "3166:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"id": 2267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3090,
																					"src": "3166:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																						"typeString": "function (int256,int256) pure returns (int256)"
																					}
																				},
																				"id": 2272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3166:37:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "3139:64:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2274,
																		"nodeType": "ExpressionStatement",
																		"src": "3139:64:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2306,
														"name": "withdrawableDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2230,
														"src": "3633:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2308,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "3680:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2307,
															"name": "withdrawableDividendOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3657:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3657:31:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3633:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2311,
												"nodeType": "ExpressionStatement",
												"src": "3633:55:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2312,
														"name": "totalDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "3698:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2314,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "3738:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2313,
															"name": "accumulativeDividendOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "3715:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3715:31:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3698:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "3698:48:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2318,
														"name": "lastClaimTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "3757:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2319,
															"name": "lastClaimTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "3773:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2321,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2320,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "3788:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3773:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3757:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "3757:39:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2324,
														"name": "nextClaimTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "3807:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2325,
																"name": "lastClaimTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "3823:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3839:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3823:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3946:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3823:124:11",
														"trueExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2330,
																	"name": "claimWait",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "3897:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2328,
																	"name": "lastClaimTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "3879:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2788,
																"src": "3879:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3879:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3807:140:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2335,
												"nodeType": "ExpressionStatement",
												"src": "3807:140:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2336,
														"name": "secondsUntilAutoClaimAvailable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "3958:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2337,
																"name": "nextClaimTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "3991:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2338,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "4007:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4007:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3991:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4166:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3991:176:11",
														"trueExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2343,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "4095:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4095:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2341,
																	"name": "nextClaimTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2236,
																	"src": "4077:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2805,
																"src": "4077:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4077:34:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3958:209:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "3958:209:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fbcbc0f1",
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2567:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2567:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2566:18:11"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2627:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2656:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2225,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "iterationsUntilProcessed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2682:31:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2227,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2682:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "withdrawableDividends",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2727:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "totalDividends",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2770:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "lastClaimTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2806:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "nextClaimTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2841:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "secondsUntilAutoClaimAvailable",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2351,
												"src": "2876:38:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2613:302:11"
									},
									"scope": 2652,
									"src": "2547:1627:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "4418:250:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2372,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "4428:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 2373,
																"name": "tokenHoldersMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2051,
																"src": "4437:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1817_storage",
																	"typeString": "struct IterableMapping.Map storage ref"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "size",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1887,
															"src": "4437:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Map_$1817_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Map_$1817_storage_ptr_$",
																"typeString": "function (struct IterableMapping.Map storage pointer) view returns (uint256)"
															}
														},
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4437:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4428:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2390,
												"nodeType": "IfStatement",
												"src": "4425:135:11",
												"trueBody": {
													"id": 2389,
													"nodeType": "Block",
													"src": "4461:99:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4483:42:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		"value": "0x0000000000000000000000000000000000000000"
																	},
																	{
																		"argumentTypes": null,
																		"id": 2379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "4527:2:11",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4528:1:11",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "4531:2:11",
																		"subExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4532:1:11",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_minus_1_by_1",
																			"typeString": "int_const -1"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4535:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4538:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4541:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4544:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4547:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2387,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4482:67:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_payable_$_t_rational_minus_1_by_1_$_t_rational_minus_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(address payable,int_const -1,int_const -1,int_const 0,int_const 0,int_const 0,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 2371,
															"id": 2388,
															"nodeType": "Return",
															"src": "4475:74:11"
														}
													]
												}
											},
											{
												"assignments": [
													2392
												],
												"declarations": [
													{
														"constant": false,
														"id": 2392,
														"mutability": "mutable",
														"name": "account",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2402,
														"src": "4570:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2391,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4570:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2397,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2395,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "4618:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2393,
															"name": "tokenHoldersMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "4588:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage",
																"typeString": "struct IterableMapping.Map storage ref"
															}
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getKeyAtIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1875,
														"src": "4588:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_view$_t_struct$_Map_$1817_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_Map_$1817_storage_ptr_$",
															"typeString": "function (struct IterableMapping.Map storage pointer,uint256) view returns (address)"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4570:54:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2399,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "4653:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2398,
														"name": "getAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "4642:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) view returns (address,int256,int256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4642:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,int256,int256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2371,
												"id": 2401,
												"nodeType": "Return",
												"src": "4635:26:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5183d6fd",
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountAtIndex",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4207:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4206:15:11"
									},
									"returnParameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4264:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4285:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2357,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4305:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2359,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4305:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4325:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4325:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4346:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4367:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4388:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2403,
												"src": "4409:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4250:167:11"
									},
									"scope": 2652,
									"src": "4180:488:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2426,
										"nodeType": "Block",
										"src": "4747:140:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2410,
														"name": "lastClaimTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "4757:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2411,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "4773:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4773:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4757:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2417,
												"nodeType": "IfStatement",
												"src": "4754:65:11",
												"trueBody": {
													"id": 2416,
													"nodeType": "Block",
													"src": "4791:28:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4806:5:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2409,
															"id": 2415,
															"nodeType": "Return",
															"src": "4799:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2421,
																"name": "lastClaimTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "4853:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2418,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "4833:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4833:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "4833:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4833:34:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2423,
														"name": "claimWait",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "4871:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4833:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2409,
												"id": 2425,
												"nodeType": "Return",
												"src": "4826:54:11"
											}
										]
									},
									"documentation": null,
									"id": 2427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canAutoClaim",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "lastClaimTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2427,
												"src": "4696:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4696:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4695:23:11"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2427,
												"src": "4741:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4741:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4740:6:11"
									},
									"scope": 2652,
									"src": "4674:213:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "4977:361:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 2436,
														"name": "excludedFromDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2057,
														"src": "4987:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2438,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2437,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2429,
														"src": "5009:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4987:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2441,
												"nodeType": "IfStatement",
												"src": "4984:57:11",
												"trueBody": {
													"id": 2440,
													"nodeType": "Block",
													"src": "5019:22:11",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 2435,
															"id": 2439,
															"nodeType": "Return",
															"src": "5027:7:11"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2442,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2431,
														"src": "5051:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2443,
														"name": "minimumTokenBalanceForDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "5065:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5051:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2469,
													"nodeType": "Block",
													"src": "5211:84:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2459,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2429,
																		"src": "5237:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5246:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2458,
																	"name": "_setBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "5225:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5225:23:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2462,
															"nodeType": "ExpressionStatement",
															"src": "5225:23:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2466,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2429,
																		"src": "5279:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2463,
																		"name": "tokenHoldersMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2051,
																		"src": "5256:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Map_$1817_storage",
																			"typeString": "struct IterableMapping.Map storage ref"
																		}
																	},
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2025,
																	"src": "5256:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Map_$1817_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Map_$1817_storage_ptr_$",
																		"typeString": "function (struct IterableMapping.Map storage pointer,address)"
																	}
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5256:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2468,
															"nodeType": "ExpressionStatement",
															"src": "5256:31:11"
														}
													]
												},
												"id": 2470,
												"nodeType": "IfStatement",
												"src": "5048:247:11",
												"trueBody": {
													"id": 2457,
													"nodeType": "Block",
													"src": "5098:102:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2446,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2429,
																		"src": "5124:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2447,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2431,
																		"src": "5133:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2445,
																	"name": "_setBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "5112:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2449,
															"nodeType": "ExpressionStatement",
															"src": "5112:32:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2453,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2429,
																		"src": "5172:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2454,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2431,
																		"src": "5181:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 2450,
																		"name": "tokenHoldersMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2051,
																		"src": "5152:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Map_$1817_storage",
																			"typeString": "struct IterableMapping.Map storage ref"
																		}
																	},
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "set",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1946,
																	"src": "5152:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Map_$1817_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_Map_$1817_storage_ptr_$",
																		"typeString": "function (struct IterableMapping.Map storage pointer,address,uint256)"
																	}
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5152:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2456,
															"nodeType": "ExpressionStatement",
															"src": "5152:40:11"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2472,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "5317:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5326:4:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2471,
														"name": "processAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2651,
														"src": "5302:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bool_$returns$_t_bool_$",
															"typeString": "function (address payable,bool) returns (bool)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5302:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "5302:29:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e30443bc",
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2434,
											"modifierName": {
												"argumentTypes": null,
												"id": 2433,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2709,
												"src": "4967:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4967:9:11"
										}
									],
									"name": "setBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2477,
												"src": "4913:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4913:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2477,
												"src": "4938:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4938:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4912:45:11"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4977:0:11"
									},
									"scope": 2652,
									"src": "4893:445:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "5417:1032:11",
										"statements": [
											{
												"assignments": [
													2489
												],
												"declarations": [
													{
														"constant": false,
														"id": 2489,
														"mutability": "mutable",
														"name": "numberOfTokenHolders",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2610,
														"src": "5424:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5424:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2493,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2490,
															"name": "tokenHoldersMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "5455:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1817_storage",
																"typeString": "struct IterableMapping.Map storage ref"
															}
														},
														"id": 2491,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "keys",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1804,
														"src": "5455:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "5455:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5424:58:11"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2494,
														"name": "numberOfTokenHolders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "5493:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5517:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5493:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2503,
												"nodeType": "IfStatement",
												"src": "5490:79:11",
												"trueBody": {
													"id": 2502,
													"nodeType": "Block",
													"src": "5520:49:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5536:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5539:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"id": 2499,
																		"name": "lastProcessedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2053,
																		"src": "5542:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2500,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5535:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_uint256_$",
																	"typeString": "tuple(int_const 0,int_const 0,uint256)"
																}
															},
															"functionReturnParameters": 2487,
															"id": 2501,
															"nodeType": "Return",
															"src": "5528:33:11"
														}
													]
												}
											},
											{
												"assignments": [
													2505
												],
												"declarations": [
													{
														"constant": false,
														"id": 2505,
														"mutability": "mutable",
														"name": "_lastProcessedIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2610,
														"src": "5576:27:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5576:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2507,
												"initialValue": {
													"argumentTypes": null,
													"id": 2506,
													"name": "lastProcessedIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2053,
													"src": "5606:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5576:48:11"
											},
											{
												"assignments": [
													2509
												],
												"declarations": [
													{
														"constant": false,
														"id": 2509,
														"mutability": "mutable",
														"name": "gasUsed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2610,
														"src": "5632:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5632:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2511,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5650:1:11",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5632:19:11"
											},
											{
												"assignments": [
													2513
												],
												"declarations": [
													{
														"constant": false,
														"id": 2513,
														"mutability": "mutable",
														"name": "gasLeft",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2610,
														"src": "5659:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5659:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2516,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2514,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -7,
														"src": "5677:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5677:9:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5659:27:11"
											},
											{
												"assignments": [
													2518
												],
												"declarations": [
													{
														"constant": false,
														"id": 2518,
														"mutability": "mutable",
														"name": "iterations",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2610,
														"src": "5694:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5694:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2520,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5715:1:11",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5694:22:11"
											},
											{
												"assignments": [
													2522
												],
												"declarations": [
													{
														"constant": false,
														"id": 2522,
														"mutability": "mutable",
														"name": "claims",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2610,
														"src": "5723:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5723:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2524,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5740:1:11",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5723:18:11"
											},
											{
												"body": {
													"id": 2599,
													"nodeType": "Block",
													"src": "5807:533:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5815:21:11",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 2532,
																	"name": "_lastProcessedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "5815:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2534,
															"nodeType": "ExpressionStatement",
															"src": "5815:21:11"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2535,
																	"name": "_lastProcessedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "5848:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2536,
																			"name": "tokenHoldersMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "5871:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Map_$1817_storage",
																				"typeString": "struct IterableMapping.Map storage ref"
																			}
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "keys",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1804,
																		"src": "5871:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5871:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5848:50:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2545,
															"nodeType": "IfStatement",
															"src": "5845:96:11",
															"trueBody": {
																"id": 2544,
																"nodeType": "Block",
																"src": "5900:41:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2540,
																				"name": "_lastProcessedIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2505,
																				"src": "5909:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 2541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5931:1:11",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5909:23:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2543,
																		"nodeType": "ExpressionStatement",
																		"src": "5909:23:11"
																	}
																]
															}
														},
														{
															"assignments": [
																2547
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2547,
																	"mutability": "mutable",
																	"name": "account",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2599,
																	"src": "5949:15:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2546,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5949:7:11",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2552,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2548,
																		"name": "tokenHoldersMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2051,
																		"src": "5967:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Map_$1817_storage",
																			"typeString": "struct IterableMapping.Map storage ref"
																		}
																	},
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "keys",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1804,
																	"src": "5967:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2551,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2550,
																	"name": "_lastProcessedIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "5988:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5967:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5949:59:11"
														},
														{
															"condition": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2554,
																			"name": "lastClaimTimes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2061,
																			"src": "6033:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2556,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2555,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "6048:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6033:23:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2553,
																	"name": "canAutoClaim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "6020:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6020:37:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2571,
															"nodeType": "IfStatement",
															"src": "6017:130:11",
															"trueBody": {
																"id": 2570,
																"nodeType": "Block",
																"src": "6059:88:11",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2561,
																							"name": "account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2547,
																							"src": "6094:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6086:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 2559,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "6086:8:11",
																							"stateMutability": "payable",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 2562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6086:16:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "74727565",
																					"id": 2563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6104:4:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 2558,
																				"name": "processAccount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2651,
																				"src": "6071:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bool_$returns$_t_bool_$",
																					"typeString": "function (address payable,bool) returns (bool)"
																				}
																			},
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6071:38:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 2569,
																		"nodeType": "IfStatement",
																		"src": "6068:71:11",
																		"trueBody": {
																			"id": 2568,
																			"nodeType": "Block",
																			"src": "6111:28:11",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 2566,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "6121:8:11",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 2565,
																							"name": "claims",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2522,
																							"src": "6121:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2567,
																					"nodeType": "ExpressionStatement",
																					"src": "6121:8:11"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6155:12:11",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 2572,
																	"name": "iterations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2518,
																	"src": "6155:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2574,
															"nodeType": "ExpressionStatement",
															"src": "6155:12:11"
														},
														{
															"assignments": [
																2576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2576,
																	"mutability": "mutable",
																	"name": "newGasLeft",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2599,
																	"src": "6176:18:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6176:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2579,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2577,
																	"name": "gasleft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -7,
																	"src": "6197:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6197:9:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6176:30:11"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2580,
																	"name": "gasLeft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "6218:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2581,
																	"name": "newGasLeft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2576,
																	"src": "6228:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6218:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 2594,
															"nodeType": "IfStatement",
															"src": "6215:89:11",
															"trueBody": {
																"id": 2593,
																"nodeType": "Block",
																"src": "6240:64:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2583,
																				"name": "gasUsed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2509,
																				"src": "6249:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 2588,
																								"name": "newGasLeft",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2576,
																								"src": "6283:10:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 2586,
																								"name": "gasLeft",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2513,
																								"src": "6271:7:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2587,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2805,
																							"src": "6271:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6271:23:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2584,
																						"name": "gasUsed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2509,
																						"src": "6259:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2788,
																					"src": "6259:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6259:36:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6249:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2592,
																		"nodeType": "ExpressionStatement",
																		"src": "6249:46:11"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2595,
																	"name": "gasLeft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "6312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 2596,
																	"name": "newGasLeft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2576,
																	"src": "6322:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6312:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2598,
															"nodeType": "ExpressionStatement",
															"src": "6312:20:11"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2525,
															"name": "gasUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2509,
															"src": "5755:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2526,
															"name": "gas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "5765:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5755:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2528,
															"name": "iterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2518,
															"src": "5772:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2529,
															"name": "numberOfTokenHolders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "5785:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5772:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5755:50:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2600,
												"nodeType": "WhileStatement",
												"src": "5749:591:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2601,
														"name": "lastProcessedIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "6347:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2602,
														"name": "_lastProcessedIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "6368:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6347:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2604,
												"nodeType": "ExpressionStatement",
												"src": "6347:40:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 2605,
															"name": "iterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2518,
															"src": "6403:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2606,
															"name": "claims",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "6415:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2607,
															"name": "lastProcessedIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "6423:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2608,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6402:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2487,
												"id": 2609,
												"nodeType": "Return",
												"src": "6395:47:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ffb2c479",
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "process",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "gas",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2611,
												"src": "5361:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5360:13:11"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2611,
												"src": "5390:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2611,
												"src": "5399:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2611,
												"src": "5408:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5408:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5389:27:11"
									},
									"scope": 2652,
									"src": "5344:1105:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "6552:236:11",
										"statements": [
											{
												"assignments": [
													2623
												],
												"declarations": [
													{
														"constant": false,
														"id": 2623,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2650,
														"src": "6562:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6562:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2627,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2625,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "6603:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2624,
														"name": "_withdrawDividendOfUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "6579:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (address payable) returns (uint256)"
														}
													},
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6579:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6562:49:11"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2628,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2623,
														"src": "6622:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6631:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6622:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2647,
												"nodeType": "IfStatement",
												"src": "6619:143:11",
												"trueBody": {
													"id": 2646,
													"nodeType": "Block",
													"src": "6634:128:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2631,
																		"name": "lastClaimTimes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "6642:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2633,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2632,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2613,
																		"src": "6657:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6642:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2634,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "6668:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6668:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6642:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2637,
															"nodeType": "ExpressionStatement",
															"src": "6642:41:11"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2639,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2613,
																		"src": "6708:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2640,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "6717:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2641,
																		"name": "automatic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2615,
																		"src": "6725:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2638,
																	"name": "Claim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "6702:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,bool)"
																	}
																},
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6702:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2643,
															"nodeType": "EmitStatement",
															"src": "6697:38:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6750:4:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2621,
															"id": 2645,
															"nodeType": "Return",
															"src": "6743:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6776:5:11",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2621,
												"id": 2649,
												"nodeType": "Return",
												"src": "6769:12:11"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bc4c4b37",
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2618,
											"modifierName": {
												"argumentTypes": null,
												"id": 2617,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2709,
												"src": "6527:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6527:9:11"
										}
									],
									"name": "processAccount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2651,
												"src": "6479:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6479:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "automatic",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2651,
												"src": "6504:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6504:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6478:41:11"
									},
									"returnParameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2651,
												"src": "6546:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6546:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6545:6:11"
									},
									"scope": 2652,
									"src": "6455:333:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2653,
							"src": "319:6471:11"
						}
					],
					"src": "34:6757:11"
				},
				"id": 11
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							2760
						]
					},
					"id": 2761,
					"license": "MIT License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2654,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:12"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 2655,
							"nodeType": "ImportDirective",
							"scope": 2761,
							"sourceUnit": 23,
							"src": "66:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2656,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "111:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 2657,
									"nodeType": "InheritanceSpecifier",
									"src": "111:7:12"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2760,
							"linearizedBaseContracts": [
								2760,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2659,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2760,
									"src": "125:22:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2658,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "125:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2665,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2665,
												"src": "181:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2665,
												"src": "212:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "180:57:12"
									},
									"src": "154:84:12"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "362:135:12",
										"statements": [
											{
												"assignments": [
													2670
												],
												"declarations": [
													{
														"constant": false,
														"id": 2670,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2686,
														"src": "372:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "372:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2673,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "392:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "392:12:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "372:32:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2674,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "414:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2675,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2670,
														"src": "423:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "414:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2677,
												"nodeType": "ExpressionStatement",
												"src": "414:18:12"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "476:1:12",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "468:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2679,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "468:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "468:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2683,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2670,
															"src": "480:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2678,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2665,
														"src": "447:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2685,
												"nodeType": "EmitStatement",
												"src": "442:48:12"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "244:91:12",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2687,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:12"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:12"
									},
									"scope": 2760,
									"src": "340:157:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "620:30:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2693,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2659,
													"src": "637:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2692,
												"id": 2694,
												"nodeType": "Return",
												"src": "630:13:12"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "503:65:12",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:12"
									},
									"returnParameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2696,
												"src": "611:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "610:9:12"
									},
									"scope": 2760,
									"src": "573:77:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2708,
										"nodeType": "Block",
										"src": "759:95:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2700,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2659,
																"src": "777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2701,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "787:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "787:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "777:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "801:34:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "769:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "769:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2706,
												"nodeType": "ExpressionStatement",
												"src": "769:67:12"
											},
											{
												"id": 2707,
												"nodeType": "PlaceholderStatement",
												"src": "846:1:12"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "656:77:12",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2709,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:2:12"
									},
									"src": "738:116:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2730,
										"nodeType": "Block",
										"src": "1250:91:12",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2716,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "1286:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1302:1:12",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1294:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2717,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1294:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1294:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2715,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2665,
														"src": "1265:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1265:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2722,
												"nodeType": "EmitStatement",
												"src": "1260:45:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2723,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "1315:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1332:1:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1324:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1324:7:12",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 2727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1324:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1315:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2729,
												"nodeType": "ExpressionStatement",
												"src": "1315:19:12"
											}
										]
									},
									"documentation": {
										"id": 2710,
										"nodeType": "StructuredDocumentation",
										"src": "860:331:12",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2731,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2713,
											"modifierName": {
												"argumentTypes": null,
												"id": 2712,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2709,
												"src": "1240:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1240:9:12"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1222:2:12"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:12"
									},
									"scope": 2760,
									"src": "1196:145:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "1560:170:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2740,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2734,
																"src": "1578:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1598:1:12",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1590:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2741,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1590:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1590:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1578:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1602:40:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1570:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2748,
												"nodeType": "ExpressionStatement",
												"src": "1570:73:12"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2750,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "1679:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2751,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2734,
															"src": "1687:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2749,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2665,
														"src": "1658:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "EmitStatement",
												"src": "1653:43:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2754,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "1706:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2755,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "1715:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1706:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2757,
												"nodeType": "ExpressionStatement",
												"src": "1706:17:12"
											}
										]
									},
									"documentation": {
										"id": 2732,
										"nodeType": "StructuredDocumentation",
										"src": "1347:138:12",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2759,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2737,
											"modifierName": {
												"argumentTypes": null,
												"id": 2736,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2709,
												"src": "1550:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1550:9:12"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2759,
												"src": "1517:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1516:18:12"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1560:0:12"
									},
									"scope": 2760,
									"src": "1490:240:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2761,
							"src": "91:1641:12"
						}
					],
					"src": "0:1733:12"
				},
				"id": 12
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2955
						]
					},
					"id": 2956,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2762,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2955,
							"linearizedBaseContracts": [
								2955
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2787,
										"nodeType": "Block",
										"src": "377:109:13",
										"statements": [
											{
												"assignments": [
													2773
												],
												"declarations": [
													{
														"constant": false,
														"id": 2773,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2787,
														"src": "387:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "387:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2777,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "399:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2767,
														"src": "403:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "399:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "387:17:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2779,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2773,
																"src": "422:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2780,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2765,
																"src": "427:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "422:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:29:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 2778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "414:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "414:46:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2784,
												"nodeType": "ExpressionStatement",
												"src": "414:46:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2785,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2773,
													"src": "478:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2771,
												"id": 2786,
												"nodeType": "Return",
												"src": "471:8:13"
											}
										]
									},
									"documentation": {
										"id": 2763,
										"nodeType": "StructuredDocumentation",
										"src": "81:224:13",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2788,
												"src": "323:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2788,
												"src": "334:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "322:22:13"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2788,
												"src": "368:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:9:13"
									},
									"scope": 2955,
									"src": "310:176:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2804,
										"nodeType": "Block",
										"src": "824:67:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2799,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2791,
															"src": "845:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2800,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "848:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "851:32:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 2798,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2805,
															2833
														],
														"referencedDeclaration": 2833,
														"src": "841:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2797,
												"id": 2803,
												"nodeType": "Return",
												"src": "834:50:13"
											}
										]
									},
									"documentation": {
										"id": 2789,
										"nodeType": "StructuredDocumentation",
										"src": "492:260:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2805,
												"src": "770:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2805,
												"src": "781:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:22:13"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2805,
												"src": "815:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "814:9:13"
									},
									"scope": 2955,
									"src": "757:134:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "1277:92:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2818,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2810,
																"src": "1295:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2819,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2808,
																"src": "1300:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1295:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2821,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "1303:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1287:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2823,
												"nodeType": "ExpressionStatement",
												"src": "1287:29:13"
											},
											{
												"assignments": [
													2825
												],
												"declarations": [
													{
														"constant": false,
														"id": 2825,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2832,
														"src": "1326:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2824,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1326:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2829,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2826,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "1338:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2827,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "1342:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1338:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1326:17:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2830,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2825,
													"src": "1361:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2816,
												"id": 2831,
												"nodeType": "Return",
												"src": "1354:8:13"
											}
										]
									},
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "897:280:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2833,
												"src": "1195:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2833,
												"src": "1206:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2833,
												"src": "1217:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1217:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1194:50:13"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2833,
												"src": "1268:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1267:9:13"
									},
									"scope": 2955,
									"src": "1182:187:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2867,
										"nodeType": "Block",
										"src": "1683:392:13",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2843,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2836,
														"src": "1915:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1920:1:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1915:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2849,
												"nodeType": "IfStatement",
												"src": "1911:45:13",
												"trueBody": {
													"id": 2848,
													"nodeType": "Block",
													"src": "1923:33:13",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1944:1:13",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2842,
															"id": 2847,
															"nodeType": "Return",
															"src": "1937:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2851
												],
												"declarations": [
													{
														"constant": false,
														"id": 2851,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2867,
														"src": "1966:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1966:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2855,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2852,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2836,
														"src": "1978:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2853,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2838,
														"src": "1982:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1978:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1966:17:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2857,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "2001:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2858,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2836,
																	"src": "2005:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2001:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2860,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "2010:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2001:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2013:35:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 2856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1993:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2864,
												"nodeType": "ExpressionStatement",
												"src": "1993:56:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2865,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2851,
													"src": "2067:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2842,
												"id": 2866,
												"nodeType": "Return",
												"src": "2060:8:13"
											}
										]
									},
									"documentation": {
										"id": 2834,
										"nodeType": "StructuredDocumentation",
										"src": "1375:236:13",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2868,
												"src": "1629:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2868,
												"src": "1640:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1628:22:13"
									},
									"returnParameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2868,
												"src": "1674:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1673:9:13"
									},
									"scope": 2955,
									"src": "1616:459:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2884,
										"nodeType": "Block",
										"src": "2604:63:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2879,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2871,
															"src": "2625:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2880,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2873,
															"src": "2628:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2631:28:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 2878,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2885,
															2913
														],
														"referencedDeclaration": 2913,
														"src": "2621:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2621:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2877,
												"id": 2883,
												"nodeType": "Return",
												"src": "2614:46:13"
											}
										]
									},
									"documentation": {
										"id": 2869,
										"nodeType": "StructuredDocumentation",
										"src": "2081:451:13",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2885,
												"src": "2550:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2885,
												"src": "2561:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2549:22:13"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2885,
												"src": "2595:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2595:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2594:9:13"
									},
									"scope": 2955,
									"src": "2537:130:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "3244:177:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2898,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2890,
																"src": "3262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3266:1:13",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3262:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2901,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2892,
															"src": "3269:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3254:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2903,
												"nodeType": "ExpressionStatement",
												"src": "3254:28:13"
											},
											{
												"assignments": [
													2905
												],
												"declarations": [
													{
														"constant": false,
														"id": 2905,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2912,
														"src": "3292:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2904,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3292:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2909,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2906,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "3304:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2907,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "3308:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3304:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3292:17:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2910,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2905,
													"src": "3413:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2896,
												"id": 2911,
												"nodeType": "Return",
												"src": "3406:8:13"
											}
										]
									},
									"documentation": {
										"id": 2886,
										"nodeType": "StructuredDocumentation",
										"src": "2673:471:13",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2913,
												"src": "3162:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2913,
												"src": "3173:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2913,
												"src": "3184:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2891,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3184:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3161:50:13"
									},
									"returnParameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2913,
												"src": "3235:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3234:9:13"
									},
									"scope": 2955,
									"src": "3149:272:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2929,
										"nodeType": "Block",
										"src": "3939:61:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2924,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2916,
															"src": "3960:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2925,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2918,
															"src": "3963:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3966:26:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 2923,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2930,
															2954
														],
														"referencedDeclaration": 2954,
														"src": "3956:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 2927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3956:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2922,
												"id": 2928,
												"nodeType": "Return",
												"src": "3949:44:13"
											}
										]
									},
									"documentation": {
										"id": 2914,
										"nodeType": "StructuredDocumentation",
										"src": "3427:440:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2930,
												"src": "3885:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2930,
												"src": "3896:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3896:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3884:22:13"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2930,
												"src": "3930:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3929:9:13"
									},
									"scope": 2955,
									"src": "3872:128:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "4566:68:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2943,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2935,
																"src": "4584:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4589:1:13",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4584:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 2946,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2937,
															"src": "4592:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4576:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2948,
												"nodeType": "ExpressionStatement",
												"src": "4576:29:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2949,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2933,
														"src": "4622:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2950,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "4626:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4622:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2941,
												"id": 2952,
												"nodeType": "Return",
												"src": "4615:12:13"
											}
										]
									},
									"documentation": {
										"id": 2931,
										"nodeType": "StructuredDocumentation",
										"src": "4006:460:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2954,
												"src": "4484:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4484:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2954,
												"src": "4495:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2954,
												"src": "4506:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4506:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4483:50:13"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2954,
												"src": "4557:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4556:9:13"
									},
									"scope": 2955,
									"src": "4471:163:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2956,
							"src": "58:4578:13"
						}
					],
					"src": "33:4604:13"
				},
				"id": 13
			},
			"SafeMathInt.sol": {
				"ast": {
					"absolutePath": "SafeMathInt.sol",
					"exportedSymbols": {
						"SafeMathInt": [
							3172
						]
					},
					"id": 3173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2957,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "1146:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2958,
								"nodeType": "StructuredDocumentation",
								"src": "1171:93:14",
								"text": " @title SafeMathInt\n @dev Math operations for int256 with overflow safety checks."
							},
							"fullyImplemented": true,
							"id": 3172,
							"linearizedBaseContracts": [
								3172
							],
							"name": "SafeMathInt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2966,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 3172,
									"src": "1291:53:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2959,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1291:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"id": 2965,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "31",
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1335:1:14",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 2961,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1328:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_int256_$",
													"typeString": "type(int256)"
												},
												"typeName": {
													"id": 2960,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:6:14",
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													}
												}
											},
											"id": 2963,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1328:9:14",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "323535",
											"id": 2964,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1341:3:14",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "1328:16:14",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2976,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 3172,
									"src": "1350:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2967,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1350:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 2975,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1387:19:14",
										"subExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1396:1:14",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1389:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2968,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1389:6:14",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 2971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1389:9:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323535",
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1402:3:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "1389:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 2974,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1388:18:14",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3024,
										"nodeType": "Block",
										"src": "1560:232:14",
										"statements": [
											{
												"assignments": [
													2987
												],
												"declarations": [
													{
														"constant": false,
														"id": 2987,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3024,
														"src": "1570:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2986,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1570:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2991,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2988,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "1581:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2989,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2981,
														"src": "1585:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1581:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1570:16:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2993,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2987,
																	"src": "1668:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2994,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2966,
																	"src": "1673:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1668:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2996,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2979,
																				"src": "1688:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2997,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2966,
																				"src": "1692:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1688:14:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2999,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1687:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3000,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2981,
																				"src": "1708:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3001,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2966,
																				"src": "1712:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1708:14:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3003,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1707:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1687:36:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1668:55:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2992,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1660:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:64:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3007,
												"nodeType": "ExpressionStatement",
												"src": "1660:64:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 3009,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2981,
																			"src": "1743:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 3010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1748:1:14",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1743:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3012,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1742:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3013,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2987,
																				"src": "1755:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3014,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2981,
																				"src": "1759:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1755:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 3016,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2979,
																			"src": "1764:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "1755:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3018,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1754:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1742:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3008,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1734:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1734:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3021,
												"nodeType": "ExpressionStatement",
												"src": "1734:33:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3022,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2987,
													"src": "1784:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2985,
												"id": 3023,
												"nodeType": "Return",
												"src": "1777:8:14"
											}
										]
									},
									"documentation": {
										"id": 2977,
										"nodeType": "StructuredDocumentation",
										"src": "1413:78:14",
										"text": " @dev Multiplies two int256 variables and fails on overflow."
									},
									"id": 3025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3025,
												"src": "1509:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2978,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1509:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3025,
												"src": "1519:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2980,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1508:20:14"
									},
									"returnParameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3025,
												"src": "1552:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2983,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1551:8:14"
									},
									"scope": 3172,
									"src": "1496:296:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "1946:189:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3036,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3030,
																	"src": "2023:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "2028:2:14",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2029:1:14",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "2023:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 3040,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3028,
																	"src": "2034:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 3041,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2966,
																	"src": "2039:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2034:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2023:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2015:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3045,
												"nodeType": "ExpressionStatement",
												"src": "2015:35:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "2123:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 3047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3030,
														"src": "2127:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2123:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3034,
												"id": 3049,
												"nodeType": "Return",
												"src": "2116:12:14"
											}
										]
									},
									"documentation": {
										"id": 3026,
										"nodeType": "StructuredDocumentation",
										"src": "1798:79:14",
										"text": " @dev Division of two int256 variables and fails on overflow."
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3051,
												"src": "1895:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3027,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1895:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3051,
												"src": "1905:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3029,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1894:20:14"
									},
									"returnParameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3051,
												"src": "1938:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3032,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1937:8:14"
									},
									"scope": 3172,
									"src": "1882:253:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3089,
										"nodeType": "Block",
										"src": "2287:108:14",
										"statements": [
											{
												"assignments": [
													3062
												],
												"declarations": [
													{
														"constant": false,
														"id": 3062,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3089,
														"src": "2297:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3061,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2297:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3066,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3063,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3054,
														"src": "2308:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 3064,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "2312:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2308:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:16:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3068,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3056,
																				"src": "2332:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 3069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2337:1:14",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2332:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3071,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3062,
																				"src": "2342:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3072,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3054,
																				"src": "2347:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2342:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2332:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3075,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2331:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3076,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3056,
																				"src": "2354:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 3077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2358:1:14",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2354:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3079,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3062,
																				"src": "2363:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3080,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3054,
																				"src": "2367:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2363:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2354:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3083,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2353:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2331:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2323:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2323:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3086,
												"nodeType": "ExpressionStatement",
												"src": "2323:47:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3087,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3062,
													"src": "2387:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3060,
												"id": 3088,
												"nodeType": "Return",
												"src": "2380:8:14"
											}
										]
									},
									"documentation": {
										"id": 3052,
										"nodeType": "StructuredDocumentation",
										"src": "2141:77:14",
										"text": " @dev Subtracts two int256 variables and fails on overflow."
									},
									"id": 3090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3090,
												"src": "2236:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3053,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3090,
												"src": "2246:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3055,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2235:20:14"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3090,
												"src": "2279:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3058,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2279:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2278:8:14"
									},
									"scope": 3172,
									"src": "2223:172:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3128,
										"nodeType": "Block",
										"src": "2542:108:14",
										"statements": [
											{
												"assignments": [
													3101
												],
												"declarations": [
													{
														"constant": false,
														"id": 3101,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3128,
														"src": "2552:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3100,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2552:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3105,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 3102,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3093,
														"src": "2563:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 3103,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3095,
														"src": "2567:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2563:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2552:16:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3107,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3095,
																				"src": "2587:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 3108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2592:1:14",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2587:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3110,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3101,
																				"src": "2597:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3111,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3093,
																				"src": "2602:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2597:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2587:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3114,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2586:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3115,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3095,
																				"src": "2609:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 3116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2613:1:14",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2609:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 3118,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3101,
																				"src": "2618:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 3119,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3093,
																				"src": "2622:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2618:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2609:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3122,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2608:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2586:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2578:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:47:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "2578:47:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3126,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3101,
													"src": "2642:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3099,
												"id": 3127,
												"nodeType": "Return",
												"src": "2635:8:14"
											}
										]
									},
									"documentation": {
										"id": 3091,
										"nodeType": "StructuredDocumentation",
										"src": "2401:72:14",
										"text": " @dev Adds two int256 variables and fails on overflow."
									},
									"id": 3129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3129,
												"src": "2491:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3092,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3129,
												"src": "2501:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3094,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2490:20:14"
									},
									"returnParameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3129,
												"src": "2534:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3097,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2534:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2533:8:14"
									},
									"scope": 3172,
									"src": "2478:172:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3151,
										"nodeType": "Block",
										"src": "2789:72:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3138,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3132,
																"src": "2807:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 3139,
																"name": "MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2966,
																"src": "2812:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "2807:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2799:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2799:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3142,
												"nodeType": "ExpressionStatement",
												"src": "2799:24:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 3143,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3132,
															"src": "2840:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 3144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2844:1:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2840:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 3148,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3132,
														"src": "2853:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2840:14:14",
													"trueExpression": {
														"argumentTypes": null,
														"id": 3147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2848:2:14",
														"subExpression": {
															"argumentTypes": null,
															"id": 3146,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3132,
															"src": "2849:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3136,
												"id": 3150,
												"nodeType": "Return",
												"src": "2833:21:14"
											}
										]
									},
									"documentation": {
										"id": 3130,
										"nodeType": "StructuredDocumentation",
										"src": "2656:74:14",
										"text": " @dev Converts to absolute value, and fails on overflow."
									},
									"id": 3152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3152,
												"src": "2748:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3131,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:10:14"
									},
									"returnParameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3152,
												"src": "2781:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3134,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2780:8:14"
									},
									"scope": 3172,
									"src": "2735:126:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3170,
										"nodeType": "Block",
										"src": "2933:59:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3160,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "2951:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2956:1:14",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2951:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2943:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2943:15:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3164,
												"nodeType": "ExpressionStatement",
												"src": "2943:15:14"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3167,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "2983:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2975:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2975:7:14",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 3168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:10:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3158,
												"id": 3169,
												"nodeType": "Return",
												"src": "2968:17:14"
											}
										]
									},
									"documentation": null,
									"id": 3171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256Safe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3171,
												"src": "2891:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3153,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2890:10:14"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3171,
												"src": "2924:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2923:9:14"
									},
									"scope": 3172,
									"src": "2868:124:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3173,
							"src": "1265:1729:14"
						}
					],
					"src": "1146:1849:14"
				},
				"id": 14
			},
			"SafeMathUint.sol": {
				"ast": {
					"absolutePath": "SafeMathUint.sol",
					"exportedSymbols": {
						"SafeMathUint": [
							3199
						]
					},
					"id": 3200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3174,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3175,
								"nodeType": "StructuredDocumentation",
								"src": "58:94:15",
								"text": " @title SafeMathUint\n @dev Math operations with safety checks that revert on error"
							},
							"fullyImplemented": true,
							"id": 3199,
							"linearizedBaseContracts": [
								3199
							],
							"name": "SafeMathUint",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3197,
										"nodeType": "Block",
										"src": "242:66:15",
										"statements": [
											{
												"assignments": [
													3183
												],
												"declarations": [
													{
														"constant": false,
														"id": 3183,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 3197,
														"src": "248:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3182,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "248:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 3188,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 3186,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "266:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "259:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 3184,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "259:6:15",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:9:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "248:20:15"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 3190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "282:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "287:1:15",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "282:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "274:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "274:15:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3194,
												"nodeType": "ExpressionStatement",
												"src": "274:15:15"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 3195,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3183,
													"src": "302:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3181,
												"id": 3196,
												"nodeType": "Return",
												"src": "295:8:15"
											}
										]
									},
									"documentation": null,
									"id": 3198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256Safe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3198,
												"src": "200:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "199:11:15"
									},
									"returnParameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 3198,
												"src": "234:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3179,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "234:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "233:8:15"
									},
									"scope": 3199,
									"src": "178:130:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3200,
							"src": "153:157:15"
						}
					],
					"src": "33:278:15"
				},
				"id": 15
			}
		}
	}
}