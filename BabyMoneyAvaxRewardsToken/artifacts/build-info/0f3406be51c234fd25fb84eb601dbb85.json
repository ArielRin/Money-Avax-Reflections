{
	"id": "0f3406be51c234fd25fb84eb601dbb85",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\nimport \"./SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"ERC20.sol\":2014:2019  name_ */\n  dup2\n    /* \"ERC20.sol\":2006:2011  _name */\n  0x03\n    /* \"ERC20.sol\":2006:2019  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"ERC20.sol\":2039:2046  symbol_ */\n  dup1\n    /* \"ERC20.sol\":2029:2036  _symbol */\n  0x04\n    /* \"ERC20.sol\":2029:2046  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":1933:2053  constructor(string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1325:10471  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":2172:2185  string memory */\n      0x60\n        /* \"ERC20.sol\":2204:2209  _name */\n      0x03\n        /* \"ERC20.sol\":2197:2209  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2118:2216  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"ERC20.sol\":4298:4302  bool */\n      0x00\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      tag_58\n        /* \"ERC20.sol\":4323:4333  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":4323:4335  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"ERC20.sol\":4337:4344  spender */\n      dup5\n        /* \"ERC20.sol\":4346:4352  amount */\n      dup5\n        /* \"ERC20.sol\":4314:4322  _approve */\n      tag_60\n        /* \"ERC20.sol\":4314:4353  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"ERC20.sol\":4370:4374  true */\n      0x01\n        /* \"ERC20.sol\":4363:4374  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":4215:4381  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"ERC20.sol\":3267:3274  uint256 */\n      0x00\n        /* \"ERC20.sol\":3293:3305  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3286:3305  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":3206:3312  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n    tag_28:\n        /* \"ERC20.sol\":4984:4988  bool */\n      0x00\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"ERC20.sol\":5010:5016  sender */\n      dup5\n        /* \"ERC20.sol\":5018:5027  recipient */\n      dup5\n        /* \"ERC20.sol\":5029:5035  amount */\n      dup5\n        /* \"ERC20.sol\":5000:5009  _transfer */\n      tag_64\n        /* \"ERC20.sol\":5000:5036  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"ERC20.sol\":5055:5061  sender */\n      dup5\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      tag_66\n        /* \"ERC20.sol\":5063:5073  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5063:5075  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"ERC20.sol\":5077:5088  _allowances */\n      0x01\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      0x00\n        /* \"ERC20.sol\":5089:5095  sender */\n      dup12\n        /* \"ERC20.sol\":5077:5096  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5077:5110  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      tag_68\n        /* \"ERC20.sol\":5097:5107  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5097:5109  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"ERC20.sol\":5077:5110  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":5077:5114  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"ERC20.sol\":5077:5166  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"ERC20.sol\":5046:5054  _approve */\n      tag_60\n        /* \"ERC20.sol\":5046:5167  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"ERC20.sol\":5184:5188  true */\n      0x01\n        /* \"ERC20.sol\":5177:5188  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":4848:5195  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n    tag_30:\n        /* \"ERC20.sol\":3113:3118  uint8 */\n      0x00\n        /* \"ERC20.sol\":3137:3139  18 */\n      0x12\n        /* \"ERC20.sol\":3130:3139  return 18 */\n      swap1\n      pop\n        /* \"ERC20.sol\":3055:3146  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"ERC20.sol\":5678:5682  bool */\n      0x00\n        /* \"ERC20.sol\":5694:5777  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      tag_73\n        /* \"ERC20.sol\":5703:5713  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5703:5715  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":5717:5724  spender */\n      dup5\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"ERC20.sol\":5765:5775  addedValue */\n      dup6\n        /* \"ERC20.sol\":5726:5737  _allowances */\n      0x01\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      tag_75\n        /* \"ERC20.sol\":5738:5748  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5738:5750  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"ERC20.sol\":5726:5751  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5726:5760  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":5752:5759  spender */\n      dup10\n        /* \"ERC20.sol\":5726:5760  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":5726:5764  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"ERC20.sol\":5726:5776  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"ERC20.sol\":5694:5702  _approve */\n      tag_60\n        /* \"ERC20.sol\":5694:5777  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"ERC20.sol\":5794:5798  true */\n      0x01\n        /* \"ERC20.sol\":5787:5798  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":5590:5805  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"ERC20.sol\":3444:3451  uint256 */\n      0x00\n        /* \"ERC20.sol\":3470:3479  _balances */\n      dup1\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":3480:3487  account */\n      dup4\n        /* \"ERC20.sol\":3470:3488  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3463:3488  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3370:3495  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n    tag_38:\n        /* \"ERC20.sol\":2385:2398  string memory */\n      0x60\n        /* \"ERC20.sol\":2417:2424  _symbol */\n      0x04\n        /* \"ERC20.sol\":2410:2424  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2329:2431  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"ERC20.sol\":6385:6389  bool */\n      0x00\n        /* \"ERC20.sol\":6401:6530  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":6410:6420  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6410:6422  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":6424:6431  spender */\n      dup5\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"ERC20.sol\":6472:6487  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6433:6444  _allowances */\n      0x01\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      tag_86\n        /* \"ERC20.sol\":6445:6455  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6445:6457  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"ERC20.sol\":6433:6458  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6433:6467  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":6459:6466  spender */\n      dup11\n        /* \"ERC20.sol\":6433:6467  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6433:6471  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"ERC20.sol\":6433:6529  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"ERC20.sol\":6401:6409  _approve */\n      tag_60\n        /* \"ERC20.sol\":6401:6530  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"ERC20.sol\":6547:6551  true */\n      0x01\n        /* \"ERC20.sol\":6540:6551  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":6292:6558  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"ERC20.sol\":3784:3788  bool */\n      0x00\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      tag_89\n        /* \"ERC20.sol\":3810:3820  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":3810:3822  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"ERC20.sol\":3824:3833  recipient */\n      dup5\n        /* \"ERC20.sol\":3835:3841  amount */\n      dup5\n        /* \"ERC20.sol\":3800:3809  _transfer */\n      tag_64\n        /* \"ERC20.sol\":3800:3842  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"ERC20.sol\":3859:3863  true */\n      0x01\n        /* \"ERC20.sol\":3852:3863  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":3698:3870  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"ERC20.sol\":4017:4024  uint256 */\n      0x00\n        /* \"ERC20.sol\":4043:4054  _allowances */\n      0x01\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":4055:4060  owner */\n      dup5\n        /* \"ERC20.sol\":4043:4061  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":4043:4070  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":4062:4069  spender */\n      dup4\n        /* \"ERC20.sol\":4043:4070  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":4036:4070  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3928:4077  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_59:\n        /* \"Context.sol\":639:646  address */\n      0x00\n        /* \"Context.sol\":665:675  msg.sender */\n      caller\n        /* \"Context.sol\":658:675  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n    tag_60:\n        /* \"ERC20.sol\":9539:9540  0 */\n      0x00\n        /* \"ERC20.sol\":9522:9541  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":9522:9527  owner */\n      dup4\n        /* \"ERC20.sol\":9522:9541  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":9514:9582  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"ERC20.sol\":9619:9620  0 */\n      0x00\n        /* \"ERC20.sol\":9600:9621  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":9600:9607  spender */\n      dup3\n        /* \"ERC20.sol\":9600:9621  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":9592:9660  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"ERC20.sol\":9701:9707  amount */\n      dup1\n        /* \"ERC20.sol\":9671:9682  _allowances */\n      0x01\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":9683:9688  owner */\n      dup6\n        /* \"ERC20.sol\":9671:9689  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":9671:9698  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":9690:9697  spender */\n      dup5\n        /* \"ERC20.sol\":9671:9698  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":9671:9707  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":9738:9745  spender */\n      dup2\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":9731:9736  owner */\n      dup4\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":9747:9753  amount */\n      dup4\n        /* \"ERC20.sol\":9722:9754  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":9391:9761  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7032:7592  function _transfer(... */\n    tag_64:\n        /* \"ERC20.sol\":7185:7186  0 */\n      0x00\n        /* \"ERC20.sol\":7167:7187  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7167:7173  sender */\n      dup4\n        /* \"ERC20.sol\":7167:7187  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7159:7229  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"ERC20.sol\":7268:7269  0 */\n      0x00\n        /* \"ERC20.sol\":7247:7270  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7247:7256  recipient */\n      dup3\n        /* \"ERC20.sol\":7247:7270  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7239:7310  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC20.sol\":7321:7368  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":7342:7348  sender */\n      dup4\n        /* \"ERC20.sol\":7350:7359  recipient */\n      dup4\n        /* \"ERC20.sol\":7361:7367  amount */\n      dup4\n        /* \"ERC20.sol\":7321:7341  _beforeTokenTransfer */\n      tag_99\n        /* \"ERC20.sol\":7321:7368  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"ERC20.sol\":7421:7427  amount */\n      dup2\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"ERC20.sol\":7399:7408  _balances */\n      0x00\n        /* \"ERC20.sol\":7399:7416  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":7409:7415  sender */\n      dup8\n        /* \"ERC20.sol\":7399:7416  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":7399:7420  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"ERC20.sol\":7399:7470  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"ERC20.sol\":7379:7388  _balances */\n      0x00\n        /* \"ERC20.sol\":7379:7396  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":7389:7395  sender */\n      dup6\n        /* \"ERC20.sol\":7379:7396  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":7379:7470  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":7503:7535  _balances[recipient].add(amount) */\n      tag_101\n        /* \"ERC20.sol\":7528:7534  amount */\n      dup2\n        /* \"ERC20.sol\":7503:7512  _balances */\n      0x00\n        /* \"ERC20.sol\":7503:7523  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":7513:7522  recipient */\n      dup6\n        /* \"ERC20.sol\":7503:7523  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":7503:7527  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"ERC20.sol\":7503:7535  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"ERC20.sol\":7480:7489  _balances */\n      0x00\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":7490:7499  recipient */\n      dup5\n        /* \"ERC20.sol\":7480:7500  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":7480:7535  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":7567:7576  recipient */\n      dup2\n        /* \"ERC20.sol\":7550:7585  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7559:7565  sender */\n      dup4\n        /* \"ERC20.sol\":7550:7585  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":7578:7584  amount */\n      dup4\n        /* \"ERC20.sol\":7550:7585  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":7032:7592  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"SafeMath.sol\":1268:1275  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1300:1301  a */\n      dup4\n        /* \"SafeMath.sol\":1295:1296  b */\n      dup4\n        /* \"SafeMath.sol\":1295:1301  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1303:1315  errorMessage */\n      dup3\n        /* \"SafeMath.sol\":1287:1316  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"SafeMath.sol\":1326:1335  uint256 c */\n      0x00\n        /* \"SafeMath.sol\":1342:1343  b */\n      dup4\n        /* \"SafeMath.sol\":1338:1339  a */\n      dup6\n        /* \"SafeMath.sol\":1338:1343  a - b */\n      sub\n        /* \"SafeMath.sol\":1326:1343  uint256 c = a - b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":1361:1362  c */\n      dup1\n        /* \"SafeMath.sol\":1354:1362  return c */\n      swap2\n      pop\n      pop\n        /* \"SafeMath.sol\":1182:1369  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"SafeMath.sol\":368:375  uint256 */\n      0x00\n        /* \"SafeMath.sol\":387:396  uint256 c */\n      dup1\n        /* \"SafeMath.sol\":403:404  b */\n      dup3\n        /* \"SafeMath.sol\":399:400  a */\n      dup5\n        /* \"SafeMath.sol\":399:404  a + b */\n      add\n        /* \"SafeMath.sol\":387:404  uint256 c = a + b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":427:428  a */\n      dup4\n        /* \"SafeMath.sol\":422:423  c */\n      dup2\n        /* \"SafeMath.sol\":422:428  c >= a */\n      lt\n      iszero\n        /* \"SafeMath.sol\":414:460  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"SafeMath.sol\":478:479  c */\n      dup1\n        /* \"SafeMath.sol\":471:479  return c */\n      swap2\n      pop\n      pop\n        /* \"SafeMath.sol\":310:486  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10348:10469  function _beforeTokenTransfer(... */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220d344bff7f4314f03e6279dc6a194b97b5534fe9be73392862d18003671e3d64864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200137b3803806200137b833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd929190620001ef565b508060049080519060200190620001e6929190620001ef565b50505062000295565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023257805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026257825182559160200191906001019062000245565b5b50905062000272919062000276565b5090565b5b808211156200029157600081600090555060010162000277565b5090565b6110d680620002a56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610683565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610736565b6040518082815260200191505060405180910390f35b61031c61077e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610820565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108ed565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061090b565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d610586610992565b848461099a565b6001905092915050565b6000600254905090565b60006105ae848484610b91565b61066f846105ba610992565b61066a8560405180606001604052806028815260200161100b60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610620610992565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e529092919063ffffffff16565b61099a565b600190509392505050565b60006012905090565b600061072c610690610992565b8461072785600160006106a1610992565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1290919063ffffffff16565b61099a565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108165780601f106107eb57610100808354040283529160200191610816565b820191906000526020600020905b8154815290600101906020018083116107f957829003601f168201915b5050505050905090565b60006108e361082d610992565b846108de8560405180606001604052806025815260200161107c6025913960016000610857610992565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e529092919063ffffffff16565b61099a565b6001905092915050565b60006109016108fa610992565b8484610b91565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110586024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fc36022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110336025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa06023913960400191505060405180910390fd5b610ca8838383610f9a565b610d1381604051806060016040528060268152602001610fe5602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e529092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610eff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ec4578082015181840152602081019050610ea9565b50505050905090810190601f168015610ef15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d344bff7f4314f03e6279dc6a194b97b5534fe9be73392862d18003671e3d64864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x137B CODESIZE SUB DUP1 PUSH3 0x137B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP POP POP PUSH3 0x295 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x232 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x263 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x262 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x245 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x276 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x291 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x277 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10D6 DUP1 PUSH3 0x2A5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x992 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x992 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72C PUSH2 0x690 PUSH2 0x992 JUMP JUMPDEST DUP5 PUSH2 0x727 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6A1 PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x816 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x816 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E3 PUSH2 0x82D PUSH2 0x992 JUMP JUMPDEST DUP5 PUSH2 0x8DE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x857 PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH2 0x8FA PUSH2 0x992 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1058 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFC3 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1033 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA0 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA8 DUP4 DUP4 DUP4 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0xD13 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDA6 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220D344 0xBF 0xF7 DELEGATECALL BALANCE 0x4F SUB 0xE6 0x27 SWAP14 0xC6 LOG1 SWAP5 0xB9 PUSH28 0x5534FE9BE73392862D18003671E3D64864736F6C634300060C003300 ",
							"sourceMap": "1325:9146:1:-:0;;;1933:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2014:5;2006;:13;;;;;;;;;;;;:::i;:::-;;2039:7;2029;:17;;;;;;;;;;;;:::i;:::-;;1933:120;;1325:9146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610683565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610736565b6040518082815260200191505060405180910390f35b61031c61077e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610820565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108ed565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061090b565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d610586610992565b848461099a565b6001905092915050565b6000600254905090565b60006105ae848484610b91565b61066f846105ba610992565b61066a8560405180606001604052806028815260200161100b60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610620610992565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e529092919063ffffffff16565b61099a565b600190509392505050565b60006012905090565b600061072c610690610992565b8461072785600160006106a1610992565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1290919063ffffffff16565b61099a565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108165780601f106107eb57610100808354040283529160200191610816565b820191906000526020600020905b8154815290600101906020018083116107f957829003601f168201915b5050505050905090565b60006108e361082d610992565b846108de8560405180606001604052806025815260200161107c6025913960016000610857610992565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e529092919063ffffffff16565b61099a565b6001905092915050565b60006109016108fa610992565b8484610b91565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110586024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fc36022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110336025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa06023913960400191505060405180910390fd5b610ca8838383610f9a565b610d1381604051806060016040528060268152602001610fe5602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e529092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610da6816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610eff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ec4578082015181840152602081019050610ea9565b50505050905090810190601f168015610ef15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d344bff7f4314f03e6279dc6a194b97b5534fe9be73392862d18003671e3d64864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x992 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x992 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72C PUSH2 0x690 PUSH2 0x992 JUMP JUMPDEST DUP5 PUSH2 0x727 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6A1 PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x816 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x816 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E3 PUSH2 0x82D PUSH2 0x992 JUMP JUMPDEST DUP5 PUSH2 0x8DE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x107C PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x857 PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x901 PUSH2 0x8FA PUSH2 0x992 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1058 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFC3 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1033 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA0 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA8 DUP4 DUP4 DUP4 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0xD13 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE52 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDA6 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220D344 0xBF 0xF7 DELEGATECALL BALANCE 0x4F SUB 0xE6 0x27 SWAP14 0xC6 LOG1 SWAP5 0xB9 PUSH28 0x5534FE9BE73392862D18003671E3D64864736F6C634300060C003300 ",
							"sourceMap": "1325:9146:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3206:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4848:347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3055:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5590:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3370:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2329:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6292:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3698:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3928:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2118:98;2172:13;2204:5;2197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:98;:::o;4215:166::-;4298:4;4314:39;4323:12;:10;:12::i;:::-;4337:7;4346:6;4314:8;:39::i;:::-;4370:4;4363:11;;4215:166;;;;:::o;3206:106::-;3267:7;3293:12;;3286:19;;3206:106;:::o;4848:347::-;4984:4;5000:36;5010:6;5018:9;5029:6;5000:9;:36::i;:::-;5046:121;5055:6;5063:12;:10;:12::i;:::-;5077:89;5115:6;5077:89;;;;;;;;;;;;;;;;;:11;:19;5089:6;5077:19;;;;;;;;;;;;;;;:33;5097:12;:10;:12::i;:::-;5077:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5046:8;:121::i;:::-;5184:4;5177:11;;4848:347;;;;;:::o;3055:91::-;3113:5;3137:2;3130:9;;3055:91;:::o;5590:215::-;5678:4;5694:83;5703:12;:10;:12::i;:::-;5717:7;5726:50;5765:10;5726:11;:25;5738:12;:10;:12::i;:::-;5726:25;;;;;;;;;;;;;;;:34;5752:7;5726:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5694:8;:83::i;:::-;5794:4;5787:11;;5590:215;;;;:::o;3370:125::-;3444:7;3470:9;:18;3480:7;3470:18;;;;;;;;;;;;;;;;3463:25;;3370:125;;;:::o;2329:102::-;2385:13;2417:7;2410:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2329:102;:::o;6292:266::-;6385:4;6401:129;6410:12;:10;:12::i;:::-;6424:7;6433:96;6472:15;6433:96;;;;;;;;;;;;;;;;;:11;:25;6445:12;:10;:12::i;:::-;6433:25;;;;;;;;;;;;;;;:34;6459:7;6433:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6401:8;:129::i;:::-;6547:4;6540:11;;6292:266;;;;:::o;3698:172::-;3784:4;3800:42;3810:12;:10;:12::i;:::-;3824:9;3835:6;3800:9;:42::i;:::-;3859:4;3852:11;;3698:172;;;;:::o;3928:149::-;4017:7;4043:11;:18;4055:5;4043:18;;;;;;;;;;;;;;;:27;4062:7;4043:27;;;;;;;;;;;;;;;;4036:34;;3928:149;;;;:::o;586:96:0:-;639:7;665:10;658:17;;586:96;:::o;9391:370:1:-;9539:1;9522:19;;:5;:19;;;;9514:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9619:1;9600:21;;:7;:21;;;;9592:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9701:6;9671:11;:18;9683:5;9671:18;;;;;;;;;;;;;;;:27;9690:7;9671:27;;;;;;;;;;;;;;;:36;;;;9738:7;9722:32;;9731:5;9722:32;;;9747:6;9722:32;;;;;;;;;;;;;;;;;;9391:370;;;:::o;7032:560::-;7185:1;7167:20;;:6;:20;;;;7159:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7268:1;7247:23;;:9;:23;;;;7239:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7321:47;7342:6;7350:9;7361:6;7321:20;:47::i;:::-;7399:71;7421:6;7399:71;;;;;;;;;;;;;;;;;:9;:17;7409:6;7399:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7379:9;:17;7389:6;7379:17;;;;;;;;;;;;;;;:91;;;;7503:32;7528:6;7503:9;:20;7513:9;7503:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7480:9;:20;7490:9;7480:20;;;;;;;;;;;;;;;:55;;;;7567:9;7550:35;;7559:6;7550:35;;;7578:6;7550:35;;;;;;;;;;;;;;;;;;7032:560;;;:::o;1182:187:4:-;1268:7;1300:1;1295;:6;;1303:12;1287:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:9;1342:1;1338;:5;1326:17;;1361:1;1354:8;;;1182:187;;;;;:::o;310:176::-;368:7;387:9;403:1;399;:5;387:17;;427:1;422;:6;;414:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:1;471:8;;;310:176;;;;:::o;10348:121:1:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "862000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "308",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2014,
									"end": 2019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2006,
									"end": 2019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2039,
									"end": 2046,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1933,
									"end": 2053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 10471,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d344bff7f4314f03e6279dc6a194b97b5534fe9be73392862d18003671e3d64864736f6c634300060c0033",
									".code": [
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 10471,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2216,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4323,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4323,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4344,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4314,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4363,
											"end": 4374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3305,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5027,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5000,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5063,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5063,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5095,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5096,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5097,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5110,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5077,
											"end": 5114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5077,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5046,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5177,
											"end": 5188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 5195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3130,
											"end": 3139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5703,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5703,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5724,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5737,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5738,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5759,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5726,
											"end": 5764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5726,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5694,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5794,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5787,
											"end": 5798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5805,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2431,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6410,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6431,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6472,
											"end": 6487,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6444,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6445,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6458,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6433,
											"end": 6471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6433,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6401,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6540,
											"end": 6551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6558,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3810,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3852,
											"end": 3863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4070,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4077,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 639,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 658,
											"end": 675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9514,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9621,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9592,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9682,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9683,
											"end": 9688,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9697,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9698,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9738,
											"end": 9745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9731,
											"end": 9736,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9747,
											"end": 9753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9754,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9391,
											"end": 9761,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7167,
											"end": 7187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7159,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7268,
											"end": 7269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7239,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7350,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7321,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7421,
											"end": 7427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7416,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7399,
											"end": 7420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7399,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7396,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7513,
											"end": 7522,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7503,
											"end": 7527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7503,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7490,
											"end": 7499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7578,
											"end": 7584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7585,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7592,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1315,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1369,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 403,
											"end": 404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 399,
											"end": 400,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 399,
											"end": 404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 387,
											"end": 404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 387,
											"end": 404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 428,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 422,
											"end": 423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 422,
											"end": 428,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 422,
											"end": 428,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 414,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 414,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 471,
											"end": 479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 471,
											"end": 479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 471,
											"end": 479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 310,
											"end": 486,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 310,
											"end": 486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 310,
											"end": 486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 310,
											"end": 486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 310,
											"end": 486,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10348,
											"end": 10469,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe8f123f5b6c9096cade945301a4e7af8885d1329bac5b5a9a0cd4299cb0a5dcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e23a7435028b9e01984ae9c37850515b348ab638b57cbf9d0f4277527de83df\",\"dweb:/ipfs/Qmc9XKiiCGrttG1Q7ctZAQbziGyFWF13Pfp139MnepFQ9W\"]},\"ERC20.sol\":{\"keccak256\":\"0x83db848aeb57e6b9d105566d2c9d97184bbc038fe3012a24a242d875ab71181c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41b4e38a45d2c3b677510d7191b231aef68af68947c2a7bd36b1c8d600b25a95\",\"dweb:/ipfs/QmRnWEp1UR3MvnvujLT79tRyqFcUghVrti4RQdqABs3ZRT\"]},\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]},\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 42,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 48,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 50,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 54,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xa9d0ad0b0e07a4d4bc0518daeaec387c7d097ef8ccf0536f3973fdc7bd53572e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df618d15e02648319b0e21b666132ec33d3ed79a870a363197e399d615f5689b\",\"dweb:/ipfs/QmVwWLK6Q2v7xFHWZW3BEQv5ndeaqB4dCEvJLKEYp9d4HB\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x877361ec05c655865e286e2001516779b4afd776c192b7035df28671a76f2a05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae9657a57c012b1f4a43503982084d93a20d5b46eb85e3885b60c76b15915ea\",\"dweb:/ipfs/QmXQDEssdWeySfK972JktzvV7VxwnhdLVADEyNRZFmLECo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":58:4636  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":58:4636  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5dfe8764657c497b8543e6e762d83c0b120bba425a8eaf81c7981619a60174764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5dfe8764657c497b8543e6e762d83c0b120bba425a8eaf81c7981619a60174764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xDF 0xE8 PUSH23 0x4657C497B8543E6E762D83C0B120BBA425A8EAF81C7981 PUSH2 0x9A60 OR SELFBALANCE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "58:4578:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5dfe8764657c497b8543e6e762d83c0b120bba425a8eaf81c7981619a60174764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xDF 0xE8 PUSH23 0x4657C497B8543E6E762D83C0B120BBA425A8EAF81C7981 PUSH2 0x9A60 OR SELFBALANCE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "58:4578:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 58,
									"end": 4636,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5dfe8764657c497b8543e6e762d83c0b120bba425a8eaf81c7981619a60174764736f6c634300060c0033",
									".code": [
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 58,
											"end": 4636,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x38b81ee8a2ff2955a3e2bbd186067bf46f64478aae1139d0894618df4008b4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e69660ea33cf5fd0548340e53dbec79878396dfd002a74984a6b057d0755c06\",\"dweb:/ipfs/QmebgmGqZvygwqxvWdtAvAfMaPEB1VKjwnKdgLqVfrz2Ft\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "648:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "665:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "665:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "658:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:0"
									},
									"scope": 22,
									"src": "586:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "755:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "765:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "765:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "905:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "905:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "898:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "739:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:16:0"
									},
									"scope": 22,
									"src": "688:232:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "554:368:0"
						}
					],
					"src": "33:890:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							514
						]
					},
					"id": 515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 593,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 618,
							"src": "81:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 23,
							"src": "112:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 28,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 813,
							"src": "136:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 30,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1343:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "1343:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 32,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 592,
										"src": "1352:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$592",
											"typeString": "contract IERC20"
										}
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1352:6:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 34,
										"name": "IERC20Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 617,
										"src": "1360:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$617",
											"typeString": "contract IERC20Metadata"
										}
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "1360:14:1"
								}
							],
							"contractDependencies": [
								22,
								592,
								617
							],
							"contractKind": "contract",
							"documentation": {
								"id": 29,
								"nodeType": "StructuredDocumentation",
								"src": "162:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								617,
								592,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 38,
									"libraryName": {
										"contractScope": null,
										"id": 36,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 812,
										"src": "1387:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$812",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1381:27:1",
									"typeName": {
										"id": 37,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1400:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1414:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1422:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1414:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1433:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1466:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 47,
										"keyType": {
											"id": 43,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1474:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1466:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 46,
											"keyType": {
												"id": 44,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1493:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1485:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 45,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1504:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1540:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1575:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 51,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1575:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1601:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 53,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1601:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1996:57:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2014:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2006:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "2006:13:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2029:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2039:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2029:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "2029:17:1"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1630:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "1945:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 56,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1945:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "1966:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1966:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1944:44:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:0:1"
									},
									"scope": 514,
									"src": "1933:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2187:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "2204:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 77,
												"id": 79,
												"nodeType": "Return",
												"src": "2197:12:1"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "2059:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2154:8:1"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:2:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2172:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2172:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:15:1"
									},
									"scope": 514,
									"src": "2118:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										610
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2400:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "2417:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 87,
												"id": 89,
												"nodeType": "Return",
												"src": "2410:14:1"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2222:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 84,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2367:8:1"
									},
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2344:2:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 91,
												"src": "2385:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2385:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2384:15:1"
									},
									"scope": 514,
									"src": "2329:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										616
									],
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3120:26:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3137:2:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 97,
												"id": 99,
												"nodeType": "Return",
												"src": "3130:9:1"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2437:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3095:8:1"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3072:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "3113:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 95,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3112:7:1"
									},
									"scope": 514,
									"src": "3055:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										523
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3276:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "3293:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "3286:19:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3152:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3249:8:1"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3226:2:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "3267:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3266:9:1"
									},
									"scope": 514,
									"src": "3206:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										531
									],
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3453:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3470:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 122,
													"indexExpression": {
														"argumentTypes": null,
														"id": 121,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3470:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 119,
												"id": 123,
												"nodeType": "Return",
												"src": "3463:25:1"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3318:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3426:8:1"
									},
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3389:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3388:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3444:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3443:9:1"
									},
									"scope": 514,
									"src": "3370:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3790:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 137,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3810:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3810:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3824:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3835:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 136,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3800:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3800:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3859:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 135,
												"id": 144,
												"nodeType": "Return",
												"src": "3852:11:1"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3501:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 132,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3766:8:1"
									},
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3716:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3735:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3715:35:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3784:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3784:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3783:6:1"
									},
									"scope": 514,
									"src": "3698:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										551
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "4026:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 157,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "4043:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 159,
														"indexExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4055:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4043:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 161,
													"indexExpression": {
														"argumentTypes": null,
														"id": 160,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "4062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4043:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 162,
												"nodeType": "Return",
												"src": "4036:34:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3876:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3999:8:1"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "3947:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "3962:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3946:32:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "4017:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4016:9:1"
									},
									"scope": 514,
									"src": "3928:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										561
									],
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "4304:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 176,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4323:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4323:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 178,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4337:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 179,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4346:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "4314:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4314:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "4314:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4370:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 174,
												"id": 183,
												"nodeType": "Return",
												"src": "4363:11:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "4083:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4280:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4232:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4232:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4249:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4249:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4231:33:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4298:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4298:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4297:6:1"
									},
									"scope": 514,
									"src": "4215:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										573
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "4990:205:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5010:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "5018:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5029:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5000:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "5000:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5055:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 206,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5063:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5063:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "5115:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5123:42:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 208,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "5077:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 210,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 209,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "5089:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5077:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 213,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 211,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5097:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5097:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5077:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "5077:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5077:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 204,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "5046:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5046:121:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5184:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 197,
												"id": 221,
												"nodeType": "Return",
												"src": "5177:11:1"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4387:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4966:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4879:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4903:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4930:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4869:81:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4984:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4984:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4983:6:1"
									},
									"scope": 514,
									"src": "4848:347:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "5684:121:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 234,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5703:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5703:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 236,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5717:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 244,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "5765:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 237,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "5726:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 240,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 238,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5738:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5738:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5726:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 242,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 241,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "5752:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5726:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 645,
																"src": "5726:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5726:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 233,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "5694:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5694:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "5694:83:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5794:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 232,
												"id": 249,
												"nodeType": "Return",
												"src": "5787:11:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "5201:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5617:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5634:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5634:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5616:37:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5678:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5678:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5677:6:1"
									},
									"scope": 514,
									"src": "5590:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "6391:167:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6410:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6410:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "6424:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 272,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "6472:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6489:39:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 265,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "6433:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 268,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 266,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6445:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6445:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6433:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 269,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "6459:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6433:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "6433:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6433:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "6401:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6401:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "6401:129:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6547:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 260,
												"id": 278,
												"nodeType": "Return",
												"src": "6540:11:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "5811:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6319:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6336:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6336:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6318:42:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6385:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6385:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6384:6:1"
									},
									"scope": 514,
									"src": "6292:266:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7149:443:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 291,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "7167:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7185:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7177:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 292,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7177:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7177:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7167:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7189:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7159:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "7159:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 301,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "7247:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7268:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 302,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7260:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7260:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7247:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7272:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7239:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7239:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "7239:71:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 311,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7342:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 312,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7361:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 310,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "7321:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7321:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "7321:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 316,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "7379:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 318,
														"indexExpression": {
															"argumentTypes": null,
															"id": 317,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7389:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7379:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 323,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7421:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7429:40:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "7399:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 321,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 320,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "7409:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7399:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "7399:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7399:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7379:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "7379:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 328,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "7480:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 330,
														"indexExpression": {
															"argumentTypes": null,
															"id": 329,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7490:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7480:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 335,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7528:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 331,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "7503:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 333,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 332,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "7513:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7503:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "7503:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7503:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7480:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "7480:55:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 340,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7559:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 341,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7567:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7578:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "7550:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7550:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "EmitStatement",
												"src": "7545:40:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "6564:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7060:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7060:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7084:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7111:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7111:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7050:81:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7149:0:1"
									},
									"scope": 514,
									"src": "7032:560:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "7933:305:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "7951:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7970:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7962:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7962:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7962:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7951:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7974:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7943:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7943:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "7943:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8048:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8040:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8040:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8040:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8052:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8061:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "8019:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8019:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "8079:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 376,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8111:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 374,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "8094:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "8094:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8094:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8079:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "8079:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "8128:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8138:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8128:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 387,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8172:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 383,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "8149:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 385,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8159:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8149:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "8149:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8149:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8128:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "8128:51:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8211:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8203:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8203:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8215:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8224:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "8194:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8194:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "EmitStatement",
												"src": "8189:42:1"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "7598:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "7883:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7883:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "7900:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7882:33:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7933:0:1"
									},
									"scope": 514,
									"src": "7868:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "8623:345:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 410,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8641:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8660:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8652:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 411,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8652:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8652:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8641:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8664:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8633:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "8633:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 420,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8732:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8749:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8741:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8741:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8741:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "8753:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "8711:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "8711:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "8771:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 430,
														"indexExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8771:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "8815:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8823:36:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "8792:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 432,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "8802:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8792:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "8792:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8792:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8771:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "8771:89:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 440,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "8870:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 443,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "8902:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 441,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "8885:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 662,
															"src": "8885:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8885:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8870:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "8870:39:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 448,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8950:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8942:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 449,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8942:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8942:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 453,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "8954:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "8924:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8924:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "EmitStatement",
												"src": "8919:42:1"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "8244:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "8573:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "8590:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8572:33:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8623:0:1"
									},
									"scope": 514,
									"src": "8558:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "9504:257:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 468,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9522:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9539:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9531:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9531:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9531:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9522:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9543:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9514:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9514:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "9514:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 478,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "9600:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9619:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9611:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 479,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9611:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9611:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9600:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9623:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9592:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9592:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "9592:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 487,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "9671:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 490,
															"indexExpression": {
																"argumentTypes": null,
																"id": 488,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9683:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9671:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 491,
														"indexExpression": {
															"argumentTypes": null,
															"id": 489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9690:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9671:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "9701:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9671:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "9671:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9731:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9738:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9747:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "9722:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9722:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "EmitStatement",
												"src": "9717:37:1"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "8974:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9418:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9441:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9441:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9466:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9408:78:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9504:0:1"
									},
									"scope": 514,
									"src": "9391:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10467:2:1",
										"statements": []
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "9767:576:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "10387:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10387:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "10409:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "10429:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10377:72:1"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10467:0:1"
									},
									"scope": 514,
									"src": "10348:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 515,
							"src": "1325:9146:1"
						}
					],
					"src": "33:10439:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							592
						]
					},
					"id": 593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "268:9:2"
									},
									"scope": 592,
									"src": "223:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "379:17:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "420:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:9:2"
									},
									"scope": 592,
									"src": "361:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "686:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:35:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 592,
									"src": "649:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "1020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "1035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:32:2"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 592,
									"src": "1001:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "1754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "1771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1753:33:2"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "1805:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:6:2"
									},
									"scope": 592,
									"src": "1737:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2149:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2173:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2200:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2139:81:2"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2239:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2238:6:2"
									},
									"scope": 592,
									"src": "2118:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "2251:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 582,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 582,
												"src": "2429:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 582,
												"src": "2451:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 582,
												"src": "2471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:57:2"
									},
									"src": "2414:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "2492:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 591,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "2660:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "2683:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "2708:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2659:63:2"
									},
									"src": "2645:78:2"
								}
							],
							"scope": 593,
							"src": "129:2596:2"
						}
					],
					"src": "33:2693:2"
				},
				"id": 2
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20Metadata": [
							617
						]
					},
					"id": 618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 594,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 595,
							"nodeType": "ImportDirective",
							"scope": 618,
							"sourceUnit": 593,
							"src": "58:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 597,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 592,
										"src": "227:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$592",
											"typeString": "contract IERC20"
										}
									},
									"id": 598,
									"nodeType": "InheritanceSpecifier",
									"src": "227:6:3"
								}
							],
							"contractDependencies": [
								592
							],
							"contractKind": "interface",
							"documentation": {
								"id": 596,
								"nodeType": "StructuredDocumentation",
								"src": "82:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 617,
							"linearizedBaseContracts": [
								617,
								592
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "240:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 604,
												"src": "338:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "338:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "337:15:3"
									},
									"scope": 617,
									"src": "299:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "359:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:3"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 610,
												"src": "461:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "461:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "460:15:3"
									},
									"scope": 617,
									"src": "420:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "482:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:3"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "595:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 613,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "595:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "594:7:3"
									},
									"scope": 617,
									"src": "552:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 618,
							"src": "199:405:3"
						}
					],
					"src": "33:572:3"
				},
				"id": 3
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 619,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "377:109:4",
										"statements": [
											{
												"assignments": [
													630
												],
												"declarations": [
													{
														"constant": false,
														"id": 630,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 644,
														"src": "387:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 629,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "387:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 631,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "399:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 632,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "403:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "399:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "387:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 636,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "422:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 637,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "427:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "422:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "414:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "414:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "414:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 642,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 630,
													"src": "478:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 628,
												"id": 643,
												"nodeType": "Return",
												"src": "471:8:4"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "81:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "323:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "334:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "322:22:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "368:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "367:9:4"
									},
									"scope": 812,
									"src": "310:176:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "824:67:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 656,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "845:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 657,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "848:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "851:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 655,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															690
														],
														"referencedDeclaration": 690,
														"src": "841:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 654,
												"id": 660,
												"nodeType": "Return",
												"src": "834:50:4"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "492:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "770:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "781:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:22:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "815:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "814:9:4"
									},
									"scope": 812,
									"src": "757:134:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "1277:92:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1295:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "1300:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1295:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1303:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1287:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "1287:29:4"
											},
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 689,
														"src": "1326:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1326:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 683,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "1338:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 684,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1342:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1338:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1326:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 687,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "1361:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 673,
												"id": 688,
												"nodeType": "Return",
												"src": "1354:8:4"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "897:280:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1195:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1206:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1217:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1217:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1194:50:4"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1268:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1267:9:4"
									},
									"scope": 812,
									"src": "1182:187:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "1683:392:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1915:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1920:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1915:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 706,
												"nodeType": "IfStatement",
												"src": "1911:45:4",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "1923:33:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1944:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 699,
															"id": 704,
															"nodeType": "Return",
															"src": "1937:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 724,
														"src": "1966:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1966:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 709,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1978:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 710,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "1982:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1978:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1966:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "2001:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 715,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "2005:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2001:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 717,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2010:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2001:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2013:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1993:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "1993:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 722,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 708,
													"src": "2067:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 723,
												"nodeType": "Return",
												"src": "2060:8:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1375:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "1629:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "1640:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1628:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "1674:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1673:9:4"
									},
									"scope": 812,
									"src": "1616:459:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "2604:63:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 736,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "2625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 737,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "2628:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2631:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 735,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															742,
															770
														],
														"referencedDeclaration": 770,
														"src": "2621:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2621:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 734,
												"id": 740,
												"nodeType": "Return",
												"src": "2614:46:4"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "2081:451:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "2550:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "2561:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2549:22:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "2595:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2595:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2594:9:4"
									},
									"scope": 812,
									"src": "2537:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3244:177:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "3262:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3266:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 758,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "3269:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3254:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "3254:28:4"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 769,
														"src": "3292:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3292:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 763,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "3304:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 764,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "3308:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3304:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3292:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 767,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 762,
													"src": "3413:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 753,
												"id": 768,
												"nodeType": "Return",
												"src": "3406:8:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "2673:471:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3162:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3162:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3173:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3184:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3184:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3161:50:4"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3235:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3234:9:4"
									},
									"scope": 812,
									"src": "3149:272:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "3939:61:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 781,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "3960:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3963:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3966:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 780,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															787,
															811
														],
														"referencedDeclaration": 811,
														"src": "3956:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3956:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 779,
												"id": 785,
												"nodeType": "Return",
												"src": "3949:44:4"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3427:440:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 787,
												"src": "3885:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 787,
												"src": "3896:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3884:22:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 787,
												"src": "3930:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3929:9:4"
									},
									"scope": 812,
									"src": "3872:128:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "4566:68:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 800,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "4584:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4589:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4584:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 803,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4592:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4576:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "4576:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 806,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "4622:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 807,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "4626:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4622:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 798,
												"id": 809,
												"nodeType": "Return",
												"src": "4615:12:4"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "4006:460:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4484:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4495:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4506:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4506:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4483:50:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4557:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4556:9:4"
									},
									"scope": 812,
									"src": "4471:163:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 813,
							"src": "58:4578:4"
						}
					],
					"src": "33:4604:4"
				},
				"id": 4
			}
		}
	}
}