{
	"id": "aa2c3590987cdfcbabaf7173c0b6d38a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"money_flattened.sol": {
				"content": "\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/token/ERC20/utils/SafeERC20.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n\n// File: money.sol\n\n\npragma solidity ^0.8.0;\n\n\n\n\n\ncontract MoneyAvaxReflectionToken is ERC20, Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 private wethToken = IERC20(0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB);\n\n    address public lpPair;\n    address public marketingWallet;\n\n    uint256 private constant MAX_SUPPLY = 10**24;\n    uint256 private constant MAX_TX_PERCENT = 1;\n    bool private tradeEnabled = false;\n\n    constructor(\n        address _marketingWallet\n    ) ERC20(\"Money Avax Reflection Token\", \"MoneyAvaxReflections\") {\n        marketingWallet = _marketingWallet;\n        _mint(msg.sender, 10**24); // Mint 1 quadrillion tokens with 9 decimal places\n    }\n\n    function setLpPair(address _lpPair) external onlyOwner {\n        lpPair = _lpPair;\n    }\n\n    function enableTrade() external onlyOwner {\n        require(!tradeEnabled, \"Trading already enabled\");\n        tradeEnabled = true;\n    }\n\n    function transferOwnership(address newOwner) public override onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        super.transferOwnership(newOwner);\n    }\n\n    function renounceOwnership() public override onlyOwner {\n        super.renounceOwnership();\n    }\n\n    function transfer(address to, uint256 amount) public override nonReentrant returns (bool) {\n        _checkMaxTx(amount);\n        _tokenReflection(to, amount);\n        _tokenLP(to, amount);\n        _tokenMarketing(to, amount);\n        super.transfer(to, amount);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 amount) public override nonReentrant returns (bool) {\n        _checkMaxTx(amount);\n        _tokenReflection(to, amount);\n        _tokenLP(to, amount);\n        _tokenMarketing(to, amount);\n        super.transferFrom(from, to, amount);\n        return true;\n    }\n\n    function _checkMaxTx(uint256 amount) internal view {\n        require(amount <= (MAX_TX_PERCENT * MAX_SUPPLY) / 100, \"Exceeds max transaction amount\");\n        require(tradeEnabled || msg.sender == owner(), \"Trading not yet enabled\");\n    }\n\n    function _tokenReflection(address to, uint256 amount) internal {\n        uint256 reflectionAmount = (amount * 5) / 100;\n        wethToken.transfer(to, reflectionAmount);\n    }\n\n    function _tokenLP(address to, uint256 amount) internal {\n        if (lpPair != address(0)) {\n            uint256 lpAmount = (amount * 2) / 100;\n            super.transfer(lpPair, lpAmount);\n        }\n    }\n\n    function _tokenMarketing(address to, uint256 amount) internal {\n        uint256 marketingAmount = (amount * 1) / 100;\n        super.transfer(marketingWallet, marketingAmount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"money_flattened.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"money_flattened.sol\":3027:11088  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"money_flattened.sol\":3027:11088  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208e7905ac42d631dce409148d78abae41759dc7b8a36c5b23b5d0f1f4418fddf564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e7905ac42d631dce409148d78abae41759dc7b8a36c5b23b5d0f1f4418fddf564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH26 0x5AC42D631DCE409148D78ABAE41759DC7B8A36C5B23B5D0F1F4 COINBASE DUP16 0xDD CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3027:8061:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3027:8061:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e7905ac42d631dce409148d78abae41759dc7b8a36c5b23b5d0f1f4418fddf564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH26 0x5AC42D631DCE409148D78ABAE41759DC7B8A36C5B23B5D0F1F4 COINBASE DUP16 0xDD CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "3027:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3027,
									"end": 11088,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e7905ac42d631dce409148d78abae41759dc7b8a36c5b23b5d0f1f4418fddf564736f6c63430008120033",
									".code": [
										{
											"begin": 3027,
											"end": 11088,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 11088,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"money_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"money_flattened.sol\":23484:34707  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"money_flattened.sol\":24059:24172  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"money_flattened.sol\":24125:24130  _name */\n  0x03\n    /* \"money_flattened.sol\":24125:24138  _name = name_ */\n  tag_6\n    /* \"money_flattened.sol\":24133:24138  name_ */\n  dup4\n    /* \"money_flattened.sol\":24125:24130  _name */\n  dup3\n    /* \"money_flattened.sol\":24125:24138  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"money_flattened.sol\":24148:24155  _symbol */\n  0x04\n    /* \"money_flattened.sol\":24148:24165  _symbol = symbol_ */\n  tag_8\n    /* \"money_flattened.sol\":24158:24165  symbol_ */\n  dup3\n    /* \"money_flattened.sol\":24148:24155  _symbol */\n  dup3\n    /* \"money_flattened.sol\":24148:24165  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"money_flattened.sol\":24059:24172  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"money_flattened.sol\":23484:34707  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"money_flattened.sol\":23484:34707  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"money_flattened.sol\":23484:34707  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"money_flattened.sol\":24237:24335  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"money_flattened.sol\":25325:25431  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"money_flattened.sol\":25412:25424  _totalSupply */\n      sload(0x02)\n        /* \"money_flattened.sol\":25325:25431  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"money_flattened.sol\":25325:25431  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"money_flattened.sol\":27273:27559  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"money_flattened.sol\":25174:25265  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"money_flattened.sol\":25256:25258  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"money_flattened.sol\":25174:25265  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"money_flattened.sol\":27954:28190  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"money_flattened.sol\":25489:25614  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":25589:25607  _balances[account] */\n      and\n        /* \"money_flattened.sol\":25563:25570  uint256 */\n      0x00\n        /* \"money_flattened.sol\":25589:25607  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"money_flattened.sol\":25489:25614  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"money_flattened.sol\":24448:24550  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"money_flattened.sol\":28677:29106  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"money_flattened.sol\":25810:25999  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"money_flattened.sol\":26057:26206  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"money_flattened.sol\":26146:26153  uint256 */\n      0x00\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"money_flattened.sol\":26172:26183  _allowances */\n      0x01\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"money_flattened.sol\":26172:26199  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"money_flattened.sol\":26057:26206  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"money_flattened.sol\":24237:24335  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"money_flattened.sol\":24291:24304  string memory */\n      0x60\n        /* \"money_flattened.sol\":24323:24328  _name */\n      0x03\n        /* \"money_flattened.sol\":24316:24328  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"money_flattened.sol\":24237:24335  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"money_flattened.sol\":26597:26601  bool */\n      0x00\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":26651:26683  _approve(owner, spender, amount) */\n      tag_73\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup2\n        /* \"money_flattened.sol\":26667:26674  spender */\n      dup6\n        /* \"money_flattened.sol\":26676:26682  amount */\n      dup6\n        /* \"money_flattened.sol\":26651:26659  _approve */\n      tag_74\n        /* \"money_flattened.sol\":26651:26683  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"money_flattened.sol\":26700:26704  true */\n      0x01\n        /* \"money_flattened.sol\":26693:26704  return true */\n      swap2\n      pop\n      pop\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":27273:27559  function transferFrom(... */\n    tag_32:\n        /* \"money_flattened.sol\":27400:27404  bool */\n      0x00\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":27456:27494  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"money_flattened.sol\":27472:27476  from */\n      dup6\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup3\n        /* \"money_flattened.sol\":27487:27493  amount */\n      dup6\n        /* \"money_flattened.sol\":27456:27471  _spendAllowance */\n      tag_79\n        /* \"money_flattened.sol\":27456:27494  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"money_flattened.sol\":27504:27531  _transfer(from, to, amount) */\n      tag_80\n        /* \"money_flattened.sol\":27514:27518  from */\n      dup6\n        /* \"money_flattened.sol\":27520:27522  to */\n      dup6\n        /* \"money_flattened.sol\":27524:27530  amount */\n      dup6\n        /* \"money_flattened.sol\":27504:27513  _transfer */\n      tag_81\n        /* \"money_flattened.sol\":27504:27531  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"money_flattened.sol\":27548:27552  true */\n      0x01\n      swap5\n        /* \"money_flattened.sol\":27273:27559  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":27954:28190  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":28042:28046  bool */\n      0x00\n        /* \"money_flattened.sol\":28121:28139  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"money_flattened.sol\":28121:28132  _allowances */\n      0x01\n        /* \"money_flattened.sol\":28121:28139  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":28121:28148  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"money_flattened.sol\":28042:28046  bool */\n      swap1\n      swap2\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      swap1\n        /* \"money_flattened.sol\":28096:28162  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_73\n      swap1\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup3\n      swap1\n        /* \"money_flattened.sol\":28121:28148  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"money_flattened.sol\":28121:28161  _allowances[owner][spender] + addedValue */\n      tag_86\n      swap1\n        /* \"money_flattened.sol\":28151:28161  addedValue */\n      dup8\n      swap1\n        /* \"money_flattened.sol\":28121:28161  _allowances[owner][spender] + addedValue */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"money_flattened.sol\":28096:28104  _approve */\n      tag_74\n        /* \"money_flattened.sol\":28096:28162  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"money_flattened.sol\":24448:24550  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"money_flattened.sol\":24504:24517  string memory */\n      0x60\n        /* \"money_flattened.sol\":24536:24543  _symbol */\n      0x04\n        /* \"money_flattened.sol\":24529:24543  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"money_flattened.sol\":28677:29106  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":28770:28774  bool */\n      0x00\n        /* \"money_flattened.sol\":28851:28869  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"money_flattened.sol\":28851:28862  _allowances */\n      0x01\n        /* \"money_flattened.sol\":28851:28869  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":28851:28878  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"money_flattened.sol\":28770:28774  bool */\n      swap1\n      swap2\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      swap1\n        /* \"money_flattened.sol\":28896:28931  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"money_flattened.sol\":28888:28973  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"money_flattened.sol\":28888:28973  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"money_flattened.sol\":28888:28973  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"money_flattened.sol\":29007:29067  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"money_flattened.sol\":29016:29021  owner */\n      dup3\n        /* \"money_flattened.sol\":29023:29030  spender */\n      dup7\n        /* \"money_flattened.sol\":29051:29066  subtractedValue */\n      dup7\n        /* \"money_flattened.sol\":29032:29048  currentAllowance */\n      dup5\n        /* \"money_flattened.sol\":29032:29066  currentAllowance - subtractedValue */\n      sub\n        /* \"money_flattened.sol\":29007:29015  _approve */\n      tag_74\n        /* \"money_flattened.sol\":29007:29067  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"money_flattened.sol\":25810:25999  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"money_flattened.sol\":25889:25893  bool */\n      0x00\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":25943:25971  _transfer(owner, to, amount) */\n      tag_73\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup2\n        /* \"money_flattened.sol\":25960:25962  to */\n      dup6\n        /* \"money_flattened.sol\":25964:25970  amount */\n      dup6\n        /* \"money_flattened.sol\":25943:25952  _transfer */\n      tag_81\n        /* \"money_flattened.sol\":25943:25971  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"money_flattened.sol\":32204:32574  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":32335:32354  owner != address(0) */\n      dup4\n      and\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":32413:32434  spender != address(0) */\n      dup3\n      and\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":32484:32502  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"money_flattened.sol\":32484:32495  _allowances */\n      0x01\n        /* \"money_flattened.sol\":32484:32502  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"money_flattened.sol\":32484:32511  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"money_flattened.sol\":32484:32520  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"money_flattened.sol\":32535:32567  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"money_flattened.sol\":32535:32567  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"money_flattened.sol\":32535:32567  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"money_flattened.sol\":32204:32574  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":32851:33292  function _spendAllowance(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"money_flattened.sol\":32981:33005  uint256 currentAllowance */\n      0x00\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"money_flattened.sol\":26172:26183  _allowances */\n      0x01\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"money_flattened.sol\":26172:26199  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"money_flattened.sol\":33047:33084  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"money_flattened.sol\":33043:33286  if (currentAllowance != type(uint256).max) {... */\n      tag_120\n      jumpi\n        /* \"money_flattened.sol\":33128:33134  amount */\n      dup2\n        /* \"money_flattened.sol\":33108:33124  currentAllowance */\n      dup2\n        /* \"money_flattened.sol\":33108:33134  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_98\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_117:\n        /* \"money_flattened.sol\":33210:33261  _approve(owner, spender, currentAllowance - amount) */\n      tag_120\n        /* \"money_flattened.sol\":33219:33224  owner */\n      dup5\n        /* \"money_flattened.sol\":33226:33233  spender */\n      dup5\n        /* \"money_flattened.sol\":33254:33260  amount */\n      dup5\n        /* \"money_flattened.sol\":33235:33251  currentAllowance */\n      dup5\n        /* \"money_flattened.sol\":33235:33260  currentAllowance - amount */\n      sub\n        /* \"money_flattened.sol\":33210:33218  _approve */\n      tag_74\n        /* \"money_flattened.sol\":33210:33261  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_120:\n        /* \"money_flattened.sol\":32971:33292  {... */\n      pop\n        /* \"money_flattened.sol\":32851:33292  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":29569:30220  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":29695:29713  from != address(0) */\n      dup4\n      and\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":29773:29789  to != address(0) */\n      dup3\n      and\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":29911:29926  _balances[from] */\n      dup4\n      and\n        /* \"money_flattened.sol\":29889:29908  uint256 fromBalance */\n      0x00\n        /* \"money_flattened.sol\":29911:29926  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"money_flattened.sol\":29944:29965  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_98\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":30042:30057  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"money_flattened.sol\":30042:30051  _balances */\n      0x00\n        /* \"money_flattened.sol\":30042:30057  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"money_flattened.sol\":30060:30080  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"money_flattened.sol\":30042:30080  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"money_flattened.sol\":30100:30113  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"money_flattened.sol\":30100:30123  _balances[to] += amount */\n      dup1\n      sload\n        /* \"money_flattened.sol\":30074:30080  amount */\n      dup5\n      swap3\n        /* \"money_flattened.sol\":30042:30051  _balances */\n      swap1\n        /* \"money_flattened.sol\":30100:30123  _balances[to] += amount */\n      tag_133\n      swap1\n        /* \"money_flattened.sol\":30074:30080  amount */\n      dup5\n      swap1\n        /* \"money_flattened.sol\":30100:30123  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"money_flattened.sol\":30154:30156  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n      and\n        /* \"money_flattened.sol\":30148:30152  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"money_flattened.sol\":30158:30164  amount */\n      dup5\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_134\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"money_flattened.sol\":30176:30213  _afterTokenTransfer(from, to, amount) */\n      tag_120\n        /* \"money_flattened.sol\":33876:33997  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_142:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_142)\n    tag_144:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_139:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_146:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_148:\n        /* \"#utility.yul\":913:942   */\n      tag_149\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_139\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_153:\n        /* \"#utility.yul\":1563:1592   */\n      tag_154\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_139\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_155\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_139\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_158:\n        /* \"#utility.yul\":2051:2080   */\n      tag_159\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_139\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_161:\n        /* \"#utility.yul\":2259:2288   */\n      tag_162\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_139\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_163\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_139\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_165:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_166:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_87:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa264697066735822122078ec7c7050c52330a3f1d742824a79c40a3acf6e9d514348b9656afa8d15052764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:1"
															},
															"nodeType": "YulIf",
															"src": "698:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:1",
																"statements": []
															},
															"src": "779:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:1"
															},
															"nodeType": "YulIf",
															"src": "1119:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:1"
															},
															"nodeType": "YulIf",
															"src": "1256:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:1"
															},
															"nodeType": "YulIf",
															"src": "1429:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:1",
														"type": ""
													}
												],
												"src": "991:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:1"
															},
															"nodeType": "YulIf",
															"src": "1701:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:1"
															},
															"nodeType": "YulIf",
															"src": "1771:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:1",
														"type": ""
													}
												],
												"src": "1558:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:1",
														"type": ""
													}
												],
												"src": "1943:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:1",
																			"statements": []
																		},
																		"src": "2516:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:1"
															},
															"nodeType": "YulIf",
															"src": "2160:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:1",
														"type": ""
													}
												],
												"src": "2069:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:1",
														"type": ""
													}
												],
												"src": "2619:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:1"
															},
															"nodeType": "YulIf",
															"src": "2929:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:1",
																					"statements": []
																				},
																				"src": "3376:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:1",
														"type": ""
													}
												],
												"src": "2790:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000bb738038062000bb783398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108c380620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070d565b60405180910390f35b6100df6100da366004610777565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a1565b610272565b604051601281526020016100c3565b6100df610131366004610777565b610296565b6100f36101443660046107dd565b6001600160a01b031660009081526020819052604090205490565b6100b66102d5565b6100df610175366004610777565b6102e4565b6100df610188366004610777565b61037b565b6100f361019b3660046107ff565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610832565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610832565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610389565b60019150505b92915050565b6000336102808582856104ad565b61028b85858561053f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102d090879061086c565b610389565b6060600480546101d590610832565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61028b8286868403610389565b60003361026681858561053f565b6001600160a01b0383166103eb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610365565b6001600160a01b03821661044c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610365565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610539578181101561052c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610365565b6105398484848403610389565b50505050565b6001600160a01b0383166105a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610365565b6001600160a01b0382166106055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610365565b6001600160a01b0383166000908152602081905260409020548181101561067d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610365565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b490849061086c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070091815260200190565b60405180910390a3610539565b600060208083528351808285015260005b8181101561073a5785810183015185820160400152820161071e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461077257600080fd5b919050565b6000806040838503121561078a57600080fd5b6107938361075b565b946020939093013593505050565b6000806000606084860312156107b657600080fd5b6107bf8461075b565b92506107cd6020850161075b565b9150604084013590509250925092565b6000602082840312156107ef57600080fd5b6107f88261075b565b9392505050565b6000806040838503121561081257600080fd5b61081b8361075b565b91506108296020840161075b565b90509250929050565b600181811c9082168061084657607f821691505b60208210810361086657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026c57634e487b7160e01b600052601160045260246000fdfea264697066735822122078ec7c7050c52330a3f1d742824a79c40a3acf6e9d514348b9656afa8d15052764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBB7 CODESIZE SUB DUP1 PUSH3 0xBB7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8C3 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x280 DUP6 DUP3 DUP6 PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x28B DUP6 DUP6 DUP6 PUSH2 0x53F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2D0 SWAP1 DUP8 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x832 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x389 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x539 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x365 JUMP JUMPDEST PUSH2 0x539 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x389 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x86C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x71E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BF DUP5 PUSH2 0x75B JUMP JUMPDEST SWAP3 POP PUSH2 0x7CD PUSH1 0x20 DUP6 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F8 DUP3 PUSH2 0x75B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x829 PUSH1 0x20 DUP5 ADD PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x846 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x866 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xEC7C7050C52330A3F1D742824A79C40A3ACF6E9D514348B965 PUSH11 0xFA8D15052764736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "23484:11223:0:-:0;;;24059:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24125:5;:13;24133:5;24125;:13;:::i;:::-;-1:-1:-1;24148:7:0;:17;24158:7;24148;:17;:::i;:::-;;24059:113;;23484:11223;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:1:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:1;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:1;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:1;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:1;;;3992:26;3943:89;-1:-1:-1;;2747:1:1;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:1;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:1;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:1;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:1:o;:::-;23484:11223:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1361": {
									"entryPoint": null,
									"id": 1361,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1296": {
									"entryPoint": 905,
									"id": 1296,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1350": {
									"entryPoint": null,
									"id": 1350,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1339": {
									"entryPoint": 1197,
									"id": 1339,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1123": {
									"entryPoint": 1343,
									"id": 1123,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_916": {
									"entryPoint": null,
									"id": 916,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_941": {
									"entryPoint": 600,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_873": {
									"entryPoint": null,
									"id": 873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_849": {
									"entryPoint": null,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1046": {
									"entryPoint": 740,
									"id": 1046,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_1004": {
									"entryPoint": 662,
									"id": 1004,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_829": {
									"entryPoint": 454,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_839": {
									"entryPoint": 725,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_859": {
									"entryPoint": null,
									"id": 859,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_974": {
									"entryPoint": 626,
									"id": 974,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_898": {
									"entryPoint": 891,
									"id": 898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"nodeType": "YulIf",
															"src": "2188:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"src": "2091:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:1"
															},
															"nodeType": "YulIf",
															"src": "2499:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:1"
															},
															"nodeType": "YulIf",
															"src": "2569:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:1",
														"type": ""
													}
												],
												"src": "2356:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:1"
															},
															"nodeType": "YulIf",
															"src": "2824:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:1",
														"type": ""
													}
												],
												"src": "2741:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:1",
														"type": ""
													}
												],
												"src": "2968:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:1",
														"type": ""
													}
												],
												"src": "3374:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:1",
														"type": ""
													}
												],
												"src": "3779:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:1",
														"type": ""
													}
												],
												"src": "4182:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:1",
														"type": ""
													}
												],
												"src": "4540:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:1",
														"type": ""
													}
												],
												"src": "4946:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:1",
														"type": ""
													}
												],
												"src": "5350:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070d565b60405180910390f35b6100df6100da366004610777565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a1565b610272565b604051601281526020016100c3565b6100df610131366004610777565b610296565b6100f36101443660046107dd565b6001600160a01b031660009081526020819052604090205490565b6100b66102d5565b6100df610175366004610777565b6102e4565b6100df610188366004610777565b61037b565b6100f361019b3660046107ff565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610832565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610832565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600033610266818585610389565b60019150505b92915050565b6000336102808582856104ad565b61028b85858561053f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061026690829086906102d090879061086c565b610389565b6060600480546101d590610832565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561036e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61028b8286868403610389565b60003361026681858561053f565b6001600160a01b0383166103eb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610365565b6001600160a01b03821661044c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610365565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610539578181101561052c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610365565b6105398484848403610389565b50505050565b6001600160a01b0383166105a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610365565b6001600160a01b0382166106055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610365565b6001600160a01b0383166000908152602081905260409020548181101561067d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610365565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106b490849061086c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070091815260200190565b60405180910390a3610539565b600060208083528351808285015260005b8181101561073a5785810183015185820160400152820161071e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461077257600080fd5b919050565b6000806040838503121561078a57600080fd5b6107938361075b565b946020939093013593505050565b6000806000606084860312156107b657600080fd5b6107bf8461075b565b92506107cd6020850161075b565b9150604084013590509250925092565b6000602082840312156107ef57600080fd5b6107f88261075b565b9392505050565b6000806040838503121561081257600080fd5b61081b8361075b565b91506108296020840161075b565b90509250929050565b600181811c9082168061084657607f821691505b60208210810361086657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026c57634e487b7160e01b600052601160045260246000fdfea264697066735822122078ec7c7050c52330a3f1d742824a79c40a3acf6e9d514348b9656afa8d15052764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x832 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x832 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x280 DUP6 DUP3 DUP6 PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x28B DUP6 DUP6 DUP6 PUSH2 0x53F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x266 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2D0 SWAP1 DUP8 SWAP1 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x832 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x389 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x266 DUP2 DUP6 DUP6 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x539 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x365 JUMP JUMPDEST PUSH2 0x539 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x389 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x365 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x86C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x71E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BF DUP5 PUSH2 0x75B JUMP JUMPDEST SWAP3 POP PUSH2 0x7CD PUSH1 0x20 DUP6 ADD PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F8 DUP3 PUSH2 0x75B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x829 PUSH1 0x20 DUP5 ADD PUSH2 0x75B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x846 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x866 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xEC7C7050C52330A3F1D742824A79C40A3ACF6E9D514348B965 PUSH11 0xFA8D15052764736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "23484:11223:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24237:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26514:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;26514:197:0;1004:187:1;25325:106:0;25412:12;;25325:106;;;1342:25:1;;;1330:2;1315:18;25325:106:0;1196:177:1;27273:286:0;;;;;;:::i;:::-;;:::i;25174:91::-;;;25256:2;1853:36:1;;1841:2;1826:18;25174:91:0;1711:184:1;27954:236:0;;;;;;:::i;:::-;;:::i;25489:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;25589:18:0;25563:7;25589:18;;;;;;;;;;;;25489:125;24448:102;;;:::i;28677:429::-;;;;;;:::i;:::-;;:::i;25810:189::-;;;;;;:::i;:::-;;:::i;26057:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;26172:18:0;;;26146:7;26172:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;26057:149;24237:98;24291:13;24323:5;24316:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24237:98;:::o;26514:197::-;26597:4;11889:10;26651:32;11889:10;26667:7;26676:6;26651:8;:32::i;:::-;26700:4;26693:11;;;26514:197;;;;;:::o;27273:286::-;27400:4;11889:10;27456:38;27472:4;11889:10;27487:6;27456:15;:38::i;:::-;27504:27;27514:4;27520:2;27524:6;27504:9;:27::i;:::-;-1:-1:-1;27548:4:0;;27273:286;-1:-1:-1;;;;27273:286:0:o;27954:236::-;11889:10;28042:4;28121:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;28121:27:0;;;;;;;;;;28042:4;;11889:10;28096:66;;11889:10;;28121:27;;:40;;28151:10;;28121:40;:::i;:::-;28096:8;:66::i;24448:102::-;24504:13;24536:7;24529:14;;;;;:::i;28677:429::-;11889:10;28770:4;28851:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;28851:27:0;;;;;;;;;;28770:4;;11889:10;28896:35;;;;28888:85;;;;-1:-1:-1;;;28888:85:0;;3170:2:1;28888:85:0;;;3152:21:1;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:1;;;3292:35;3344:19;;28888:85:0;;;;;;;;;29007:60;29016:5;29023:7;29051:15;29032:16;:34;29007:8;:60::i;25810:189::-;25889:4;11889:10;25943:28;11889:10;25960:2;25964:6;25943:9;:28::i;32204:370::-;-1:-1:-1;;;;;32335:19:0;;32327:68;;;;-1:-1:-1;;;32327:68:0;;3576:2:1;32327:68:0;;;3558:21:1;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:1;;;3698:34;3749:19;;32327:68:0;3374:400:1;32327:68:0;-1:-1:-1;;;;;32413:21:0;;32405:68;;;;-1:-1:-1;;;32405:68:0;;3981:2:1;32405:68:0;;;3963:21:1;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:1;;;4103:32;4152:19;;32405:68:0;3779:398:1;32405:68:0;-1:-1:-1;;;;;32484:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;32535:32;;1342:25:1;;;32535:32:0;;1315:18:1;32535:32:0;;;;;;;32204:370;;;:::o;32851:441::-;-1:-1:-1;;;;;26172:18:0;;;32981:24;26172:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;33047:37:0;;33043:243;;33128:6;33108:16;:26;;33100:68;;;;-1:-1:-1;;;33100:68:0;;4384:2:1;33100:68:0;;;4366:21:1;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;33100:68:0;4182:353:1;33100:68:0;33210:51;33219:5;33226:7;33254:6;33235:16;:25;33210:8;:51::i;:::-;32971:321;32851:441;;;:::o;29569:651::-;-1:-1:-1;;;;;29695:18:0;;29687:68;;;;-1:-1:-1;;;29687:68:0;;4742:2:1;29687:68:0;;;4724:21:1;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:1;;;4864:35;4916:19;;29687:68:0;4540:401:1;29687:68:0;-1:-1:-1;;;;;29773:16:0;;29765:64;;;;-1:-1:-1;;;29765:64:0;;5148:2:1;29765:64:0;;;5130:21:1;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:1;;;5270:33;5320:19;;29765:64:0;4946:399:1;29765:64:0;-1:-1:-1;;;;;29911:15:0;;29889:19;29911:15;;;;;;;;;;;29944:21;;;;29936:72;;;;-1:-1:-1;;;29936:72:0;;5552:2:1;29936:72:0;;;5534:21:1;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:1;;;5674:36;5727:19;;29936:72:0;5350:402:1;29936:72:0;-1:-1:-1;;;;;30042:15:0;;;:9;:15;;;;;;;;;;;30060:20;;;30042:38;;30100:13;;;;;;;;:23;;30074:6;;30042:9;30100:23;;30074:6;;30100:23;:::i;:::-;;;;;;;;30154:2;-1:-1:-1;;;;;30139:26:0;30148:4;-1:-1:-1;;;;;30139:26:0;;30158:6;30139:26;;;;1342:25:1;;1330:2;1315:18;;1196:177;30139:26:0;;;;;;;;30176:37;33876:121;14:548:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26966",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23484,
									"end": 34707,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24059,
									"end": 24172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24130,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24133,
									"end": 24138,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24130,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24125,
									"end": 24138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 24148,
									"end": 24155,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24158,
									"end": 24165,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24155,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24148,
									"end": 24165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23484,
									"end": 34707,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078ec7c7050c52330a3f1d742824a79c40a3acf6e9d514348b9656afa8d15052764736f6c63430008120033",
									".code": [
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23484,
											"end": 34707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24237,
											"end": 24335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24237,
											"end": 24335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26514,
											"end": 26711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26514,
											"end": 26711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25412,
											"end": 25424,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25412,
											"end": 25424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 27273,
											"end": 27559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27273,
											"end": 27559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25256,
											"end": 25258,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27954,
											"end": 28190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27954,
											"end": 28190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25489,
											"end": 25614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24448,
											"end": 24550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28677,
											"end": 29106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28677,
											"end": 29106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25810,
											"end": 25999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25810,
											"end": 25999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26057,
											"end": 26206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26146,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24291,
											"end": 24304,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24323,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24316,
											"end": 24328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24316,
											"end": 24328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26597,
											"end": 26601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26651,
											"end": 26683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26667,
											"end": 26674,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26676,
											"end": 26682,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26651,
											"end": 26659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26651,
											"end": 26683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26651,
											"end": 26683,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26651,
											"end": 26683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26700,
											"end": 26704,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26693,
											"end": 26704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27400,
											"end": 27404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27456,
											"end": 27494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 27472,
											"end": 27476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27487,
											"end": 27493,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27456,
											"end": 27471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27456,
											"end": 27494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27456,
											"end": 27494,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 27456,
											"end": 27494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27514,
											"end": 27518,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27522,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27524,
											"end": 27530,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 27504,
											"end": 27531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27531,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27504,
											"end": 27531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27548,
											"end": 27552,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27548,
											"end": 27552,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27273,
											"end": 27559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28042,
											"end": 28046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28042,
											"end": 28046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28042,
											"end": 28046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28096,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28096,
											"end": 28162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28161,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28121,
											"end": 28161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28096,
											"end": 28104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 28096,
											"end": 28162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24517,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24536,
											"end": 24543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24529,
											"end": 24543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28862,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29007,
											"end": 29067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29016,
											"end": 29021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29023,
											"end": 29030,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29051,
											"end": 29066,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29032,
											"end": 29048,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29032,
											"end": 29066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29007,
											"end": 29015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29007,
											"end": 29067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25889,
											"end": 25893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 25971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 25962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 25970,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 25952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25943,
											"end": 25971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32335,
											"end": 32354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32413,
											"end": 32434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32413,
											"end": 32434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 33292,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 32851,
											"end": 33292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 33005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33047,
											"end": 33084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33084,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33043,
											"end": 33286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33043,
											"end": 33286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33128,
											"end": 33134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33210,
											"end": 33261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33219,
											"end": 33224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33226,
											"end": 33233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33254,
											"end": 33260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33235,
											"end": 33251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33235,
											"end": 33260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33210,
											"end": 33218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 33210,
											"end": 33261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33210,
											"end": 33261,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33210,
											"end": 33261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32971,
											"end": 33292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 33292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 33292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 33292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 33292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29569,
											"end": 30220,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 29569,
											"end": 30220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29695,
											"end": 29713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29695,
											"end": 29713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29773,
											"end": 29789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29773,
											"end": 29789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29889,
											"end": 29908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30080,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30100,
											"end": 30123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30154,
											"end": 30156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30158,
											"end": 30164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33876,
											"end": 33997,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"money_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 790,
								"contract": "money_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 796,
								"contract": "money_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 798,
								"contract": "money_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "money_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 802,
								"contract": "money_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MoneyAvaxReflectionToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableTrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lpPair",
									"type": "address"
								}
							],
							"name": "setLpPair",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"money_flattened.sol\":34759:37383  contract MoneyAvaxReflectionToken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"money_flattened.sol\":34867:34944  IERC20 private wethToken = IERC20(0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB) */\n  0x07\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"money_flattened.sol\":34901:34943  0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB */\n  0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab\n    /* \"money_flattened.sol\":34867:34944  IERC20 private wethToken = IERC20(0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB) */\n  or\n  swap1\n  sstore\n    /* \"money_flattened.sol\":35114:35147  bool private tradeEnabled = false */\n  0x09\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"money_flattened.sol\":35154:35404  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"money_flattened.sol\":24059:24172  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  0x4d6f6e65792041766178205265666c656374696f6e20546f6b656e0000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x14\n  dup2\n  mstore\n  0x20\n  add\n  0x4d6f6e6579417661785265666c656374696f6e73000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"money_flattened.sol\":24133:24138  name_ */\n  dup2\n    /* \"money_flattened.sol\":24125:24130  _name */\n  0x03\n    /* \"money_flattened.sol\":24125:24138  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"money_flattened.sol\":24148:24155  _symbol */\n  0x04\n    /* \"money_flattened.sol\":24148:24165  _symbol = symbol_ */\n  tag_11\n    /* \"money_flattened.sol\":24158:24165  symbol_ */\n  dup3\n    /* \"money_flattened.sol\":24148:24155  _symbol */\n  dup3\n    /* \"money_flattened.sol\":24148:24165  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"money_flattened.sol\":24059:24172  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"money_flattened.sol\":12986:13018  _transferOwnership(_msgSender()) */\n  tag_13\n    /* \"money_flattened.sol\":13005:13017  _msgSender() */\n  tag_14\n    /* \"money_flattened.sol\":13005:13015  _msgSender */\n  shl(0x20, tag_15)\n    /* \"money_flattened.sol\":13005:13017  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"money_flattened.sol\":12986:13004  _transferOwnership */\n  tag_16\n    /* \"money_flattened.sol\":12986:13018  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_13:\n    /* \"money_flattened.sol\":1793:1794  1 */\n  0x01\n    /* \"money_flattened.sol\":1898:1905  _status */\n  0x06\n    /* \"money_flattened.sol\":1898:1920  _status = _NOT_ENTERED */\n  sstore\n    /* \"money_flattened.sol\":35277:35292  marketingWallet */\n  0x09\n    /* \"money_flattened.sol\":35277:35311  marketingWallet = _marketingWallet */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"money_flattened.sol\":35321:35346  _mint(msg.sender, 10**24) */\n  tag_19\n    /* \"money_flattened.sol\":35327:35337  msg.sender */\n  caller\n    /* \"money_flattened.sol\":35339:35345  10**24 */\n  0xd3c21bcecceda1000000\n    /* \"money_flattened.sol\":35321:35326  _mint */\n  tag_20\n    /* \"money_flattened.sol\":35321:35346  _mint(msg.sender, 10**24) */\n  jump\t// in\ntag_19:\n    /* \"money_flattened.sol\":35154:35404  constructor(... */\n  pop\n    /* \"money_flattened.sol\":34759:37383  contract MoneyAvaxReflectionToken is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_44)\n    /* \"money_flattened.sol\":11810:11906  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"money_flattened.sol\":11889:11899  msg.sender */\n  caller\n  swap1\n    /* \"money_flattened.sol\":11810:11906  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"money_flattened.sol\":14335:14522  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"money_flattened.sol\":14427:14433  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"money_flattened.sol\":14443:14460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"money_flattened.sol\":14475:14515  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"money_flattened.sol\":14427:14433  _owner */\n  swap2\n  and\n  swap2\n    /* \"money_flattened.sol\":14443:14460  _owner = newOwner */\n  swap1\n    /* \"money_flattened.sol\":14427:14433  _owner */\n  dup3\n  swap1\n    /* \"money_flattened.sol\":14475:14515  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"money_flattened.sol\":14408:14424  address oldOwner */\n  0x00\n  swap1\n    /* \"money_flattened.sol\":14475:14515  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"money_flattened.sol\":14398:14522  {... */\n  pop\n    /* \"money_flattened.sol\":14335:14522  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"money_flattened.sol\":30496:30885  function _mint(address account, uint256 amount) internal virtual {... */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"money_flattened.sol\":30579:30600  account != address(0) */\n  dup3\n  and\n    /* \"money_flattened.sol\":30571:30636  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3232:3234   */\n  0x20\n    /* \"money_flattened.sol\":30571:30636  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3214:3235   */\n  mstore\n    /* \"#utility.yul\":3271:3273   */\n  0x1f\n    /* \"#utility.yul\":3251:3269   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3244:3274   */\n  mstore\n    /* \"#utility.yul\":3310:3343   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":3290:3308   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3283:3344   */\n  mstore\n    /* \"#utility.yul\":3361:3379   */\n  0x64\n  add\n    /* \"money_flattened.sol\":30571:30636  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"money_flattened.sol\":30723:30729  amount */\n  dup1\n    /* \"money_flattened.sol\":30707:30719  _totalSupply */\n  0x02\n  0x00\n    /* \"money_flattened.sol\":30707:30729  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"money_flattened.sol\":30739:30757  _balances[account] */\n  dup3\n  and\n    /* \"money_flattened.sol\":30739:30748  _balances */\n  0x00\n    /* \"money_flattened.sol\":30739:30757  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"money_flattened.sol\":30739:30767  _balances[account] += amount */\n  dup1\n  sload\n    /* \"money_flattened.sol\":30761:30767  amount */\n  dup4\n  swap3\n    /* \"money_flattened.sol\":30739:30748  _balances */\n  swap1\n    /* \"money_flattened.sol\":30739:30767  _balances[account] += amount */\n  tag_32\n  swap1\n    /* \"money_flattened.sol\":30761:30767  amount */\n  dup5\n  swap1\n    /* \"money_flattened.sol\":30739:30767  _balances[account] += amount */\n  tag_31\n  jump\t// in\ntag_32:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"money_flattened.sol\":30782:30819  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":3763:3788   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"money_flattened.sol\":30782:30819  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"money_flattened.sol\":30799:30800  0 */\n  0x00\n  swap1\n    /* \"money_flattened.sol\":30782:30819  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":3751:3753   */\n  0x20\n    /* \"#utility.yul\":3736:3754   */\n  add\n    /* \"money_flattened.sol\":30782:30819  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"money_flattened.sol\":30496:30885  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"money_flattened.sol\":33876:33997  function _beforeTokenTransfer(... */\ntag_29:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_46:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_47:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_39:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_40:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_50:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_51:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1497   */\ntag_42:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1491   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1111:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1121   */\n  mstore\n    /* \"#utility.yul\":1160:1164   */\n  0x20\n    /* \"#utility.yul\":1156:1158   */\n  dup2\n    /* \"#utility.yul\":1146:1165   */\n  keccak256\n    /* \"#utility.yul\":1230:1232   */\n  0x1f\n    /* \"#utility.yul\":1218:1228   */\n  dup6\n    /* \"#utility.yul\":1214:1233   */\n  add\n    /* \"#utility.yul\":1211:1212   */\n  0x05\n    /* \"#utility.yul\":1207:1234   */\n  shr\n    /* \"#utility.yul\":1201:1205   */\n  dup2\n    /* \"#utility.yul\":1197:1235   */\n  add\n    /* \"#utility.yul\":1266:1270   */\n  0x20\n    /* \"#utility.yul\":1254:1264   */\n  dup7\n    /* \"#utility.yul\":1251:1271   */\n  lt\n    /* \"#utility.yul\":1248:1295   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":1289:1293   */\n  dup1\n    /* \"#utility.yul\":1248:1295   */\ntag_55:\n    /* \"#utility.yul\":1344:1346   */\n  0x1f\n    /* \"#utility.yul\":1339:1342   */\n  dup6\n    /* \"#utility.yul\":1335:1347   */\n  add\n    /* \"#utility.yul\":1332:1333   */\n  0x05\n    /* \"#utility.yul\":1328:1348   */\n  shr\n    /* \"#utility.yul\":1322:1326   */\n  dup3\n    /* \"#utility.yul\":1318:1349   */\n  add\n    /* \"#utility.yul\":1308:1349   */\n  swap2\n  pop\n    /* \"#utility.yul\":1399:1481   */\ntag_56:\n    /* \"#utility.yul\":1417:1419   */\n  dup2\n    /* \"#utility.yul\":1410:1415   */\n  dup2\n    /* \"#utility.yul\":1407:1420   */\n  lt\n    /* \"#utility.yul\":1399:1481   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1462:1479   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1443:1444   */\n  0x01\n    /* \"#utility.yul\":1432:1445   */\n  add\n    /* \"#utility.yul\":1399:1481   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":1403:1406   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":952:1497   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1673:3025   */\ntag_10:\n    /* \"#utility.yul\":1793:1803   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1815:1845   */\n  dup2\n  gt\n    /* \"#utility.yul\":1812:1868   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1848:1866   */\n  tag_62\n  tag_39\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1877:1974   */\n  tag_63\n    /* \"#utility.yul\":1967:1973   */\n  dup2\n    /* \"#utility.yul\":1927:1965   */\n  tag_64\n    /* \"#utility.yul\":1959:1963   */\n  dup5\n    /* \"#utility.yul\":1953:1964   */\n  sload\n    /* \"#utility.yul\":1927:1965   */\n  tag_40\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1921:1925   */\n  dup5\n    /* \"#utility.yul\":1877:1974   */\n  tag_42\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2029:2033   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2093:2095   */\n  0x1f\n    /* \"#utility.yul\":2082:2096   */\n  dup4\n  gt\n    /* \"#utility.yul\":2110:2111   */\n  0x01\n    /* \"#utility.yul\":2105:2768   */\n  dup2\n  eq\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2812:2813   */\n  0x00\n    /* \"#utility.yul\":2829:2835   */\n  dup5\n    /* \"#utility.yul\":2826:2915   */\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":2881:2900   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2875:2901   */\n  mload\n    /* \"#utility.yul\":2826:2915   */\ntag_67:\n  not(0x00)\n    /* \"#utility.yul\":1630:1631   */\n  0x03\n    /* \"#utility.yul\":1626:1637   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1622:1646   */\n  shr\n    /* \"#utility.yul\":1618:1647   */\n  not\n    /* \"#utility.yul\":1608:1648   */\n  and\n    /* \"#utility.yul\":1654:1655   */\n  0x01\n    /* \"#utility.yul\":1650:1661   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1605:1662   */\n  or\n    /* \"#utility.yul\":2928:3009   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2075:3019   */\n  jump(tag_58)\n    /* \"#utility.yul\":2105:2768   */\ntag_66:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2141:2161   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2259:2495   */\ntag_70:\n    /* \"#utility.yul\":2273:2280   */\n  dup3\n    /* \"#utility.yul\":2270:2271   */\n  dup2\n    /* \"#utility.yul\":2267:2281   */\n  lt\n    /* \"#utility.yul\":2259:2495   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2362:2381   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2356:2382   */\n  mload\n    /* \"#utility.yul\":2341:2383   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2454:2481   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2422:2423   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2289:2308   */\n  dup5\n  add\n    /* \"#utility.yul\":2259:2495   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":2263:2266   */\n  pop\n    /* \"#utility.yul\":2523:2529   */\n  dup6\n    /* \"#utility.yul\":2514:2521   */\n  dup3\n    /* \"#utility.yul\":2511:2530   */\n  lt\n    /* \"#utility.yul\":2508:2709   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2584:2603   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2578:2604   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2667:2668   */\n  0x03\n    /* \"#utility.yul\":2663:2677   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2679:2682   */\n  0xf8\n    /* \"#utility.yul\":2659:2683   */\n  and\n    /* \"#utility.yul\":2655:2692   */\n  shr\n    /* \"#utility.yul\":2651:2693   */\n  not\n    /* \"#utility.yul\":2636:2694   */\n  and\n    /* \"#utility.yul\":2621:2695   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2508:2709   */\ntag_73:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2755:2756   */\n  0x01\n    /* \"#utility.yul\":2739:2753   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2735:2757   */\n  add\n    /* \"#utility.yul\":2722:2758   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1673:3025   */\n  jump\t// out\n    /* \"#utility.yul\":3390:3612   */\ntag_31:\n    /* \"#utility.yul\":3455:3464   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3476:3486   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3473:3606   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3528:3538   */\n  0x4e487b71\n    /* \"#utility.yul\":3523:3526   */\n  0xe0\n    /* \"#utility.yul\":3519:3539   */\n  shl\n    /* \"#utility.yul\":3516:3517   */\n  0x00\n    /* \"#utility.yul\":3509:3540   */\n  mstore\n    /* \"#utility.yul\":3563:3567   */\n  0x11\n    /* \"#utility.yul\":3560:3561   */\n  0x04\n    /* \"#utility.yul\":3553:3568   */\n  mstore\n    /* \"#utility.yul\":3591:3595   */\n  0x24\n    /* \"#utility.yul\":3588:3589   */\n  0x00\n    /* \"#utility.yul\":3581:3596   */\n  revert\n    /* \"#utility.yul\":3473:3606   */\ntag_76:\n    /* \"#utility.yul\":3390:3612   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3617:3794   */\ntag_44:\n    /* \"money_flattened.sol\":34759:37383  contract MoneyAvaxReflectionToken is ERC20, Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"money_flattened.sol\":34759:37383  contract MoneyAvaxReflectionToken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa35f942a\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa35f942a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x452ed4f1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x99d386\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"money_flattened.sol\":35504:35641  function enableTrade() external onlyOwner {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"money_flattened.sol\":24237:24335  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"money_flattened.sol\":25325:25431  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"money_flattened.sol\":25412:25424  _totalSupply */\n      sload(0x02)\n        /* \"money_flattened.sol\":25325:25431  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"money_flattened.sol\":25325:25431  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"money_flattened.sol\":36241:36557  function transferFrom(address from, address to, uint256 amount) public override nonReentrant returns (bool) {... */\n    tag_7:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"money_flattened.sol\":25174:25265  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"money_flattened.sol\":25256:25258  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"money_flattened.sol\":25174:25265  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"money_flattened.sol\":27954:28190  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"money_flattened.sol\":34951:34972  address public lpPair */\n    tag_10:\n      sload(0x08)\n      tag_53\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_53:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2064:2096   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2046:2097   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"money_flattened.sol\":34951:34972  address public lpPair */\n      tag_28\n        /* \"#utility.yul\":1900:2103   */\n      jump\n        /* \"money_flattened.sol\":25489:25614  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_36\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":25589:25607  _balances[account] */\n      and\n        /* \"money_flattened.sol\":25563:25570  uint256 */\n      0x00\n        /* \"money_flattened.sol\":25589:25607  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"money_flattened.sol\":25489:25614  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"money_flattened.sol\":35844:35941  function renounceOwnership() public override onlyOwner {... */\n    tag_12:\n      tag_24\n      tag_63\n      jump\t// in\n        /* \"money_flattened.sol\":34978:35008  address public marketingWallet */\n    tag_13:\n      sload(0x09)\n      tag_53\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"money_flattened.sol\":13101:13186  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":13101:13186  function owner() public view virtual returns (address) {... */\n      jump(tag_53)\n        /* \"money_flattened.sol\":24448:24550  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_71\n      jump\t// in\n        /* \"money_flattened.sol\":35410:35498  function setLpPair(address _lpPair) external onlyOwner {... */\n    tag_16:\n      tag_24\n      tag_74\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"money_flattened.sol\":28677:29106  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_17:\n      tag_30\n      tag_77\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"money_flattened.sol\":35947:36235  function transfer(address to, uint256 amount) public override nonReentrant returns (bool) {... */\n    tag_18:\n      tag_30\n      tag_81\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"money_flattened.sol\":26057:26206  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_19:\n      tag_36\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"money_flattened.sol\":26146:26153  uint256 */\n      0x00\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"money_flattened.sol\":26172:26183  _allowances */\n      0x01\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"money_flattened.sol\":26172:26199  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"money_flattened.sol\":26057:26206  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"money_flattened.sol\":35647:35838  function transferOwnership(address newOwner) public override onlyOwner {... */\n    tag_20:\n      tag_24\n      tag_90\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"money_flattened.sol\":35504:35641  function enableTrade() external onlyOwner {... */\n    tag_25:\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":13313:13336  owner() == _msgSender() */\n      eq\n        /* \"money_flattened.sol\":13305:13373  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"money_flattened.sol\":35565:35577  tradeEnabled */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"money_flattened.sol\":35564:35577  !tradeEnabled */\n      iszero\n        /* \"money_flattened.sol\":35556:35605  require(!tradeEnabled, \"Trading already enabled\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3127:3129   */\n      0x20\n        /* \"money_flattened.sol\":35556:35605  require(!tradeEnabled, \"Trading already enabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3109:3130   */\n      mstore\n        /* \"#utility.yul\":3166:3168   */\n      0x17\n        /* \"#utility.yul\":3146:3164   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3139:3169   */\n      mstore\n        /* \"#utility.yul\":3205:3230   */\n      0x54726164696e6720616c726561647920656e61626c6564000000000000000000\n        /* \"#utility.yul\":3185:3203   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3178:3231   */\n      mstore\n        /* \"#utility.yul\":3248:3266   */\n      0x64\n      add\n        /* \"money_flattened.sol\":35556:35605  require(!tradeEnabled, \"Trading already enabled\") */\n      tag_97\n        /* \"#utility.yul\":2925:3272   */\n      jump\n        /* \"money_flattened.sol\":35556:35605  require(!tradeEnabled, \"Trading already enabled\") */\n    tag_100:\n        /* \"money_flattened.sol\":35615:35627  tradeEnabled */\n      0x09\n        /* \"money_flattened.sol\":35615:35634  tradeEnabled = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"money_flattened.sol\":35504:35641  function enableTrade() external onlyOwner {... */\n      jump\t// out\n        /* \"money_flattened.sol\":24237:24335  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"money_flattened.sol\":24291:24304  string memory */\n      0x60\n        /* \"money_flattened.sol\":24323:24328  _name */\n      0x03\n        /* \"money_flattened.sol\":24316:24328  return _name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"money_flattened.sol\":24237:24335  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"money_flattened.sol\":26597:26601  bool */\n      0x00\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":26651:26683  _approve(owner, spender, amount) */\n      tag_112\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup2\n        /* \"money_flattened.sol\":26667:26674  spender */\n      dup6\n        /* \"money_flattened.sol\":26676:26682  amount */\n      dup6\n        /* \"money_flattened.sol\":26651:26659  _approve */\n      tag_113\n        /* \"money_flattened.sol\":26651:26683  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_112:\n        /* \"money_flattened.sol\":26700:26704  true */\n      0x01\n        /* \"money_flattened.sol\":26693:26704  return true */\n      swap2\n      pop\n      pop\n        /* \"money_flattened.sol\":26514:26711  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_110:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":36241:36557  function transferFrom(address from, address to, uint256 amount) public override nonReentrant returns (bool) {... */\n    tag_43:\n        /* \"money_flattened.sol\":36343:36347  bool */\n      0x00\n        /* \"money_flattened.sol\":1836:1837  2 */\n      0x02\n        /* \"money_flattened.sol\":2417:2424  _status */\n      sload(0x06)\n        /* \"money_flattened.sol\":2417:2436  _status != _ENTERED */\n      sub\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3864:3866   */\n      0x20\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3846:3867   */\n      mstore\n        /* \"#utility.yul\":3903:3905   */\n      0x1f\n        /* \"#utility.yul\":3883:3901   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3876:3906   */\n      mstore\n        /* \"#utility.yul\":3942:3975   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3922:3940   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3915:3976   */\n      mstore\n        /* \"#utility.yul\":3993:4011   */\n      0x64\n      add\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_97\n        /* \"#utility.yul\":3662:4017   */\n      jump\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_116:\n        /* \"money_flattened.sol\":1836:1837  2 */\n      0x02\n        /* \"money_flattened.sol\":2547:2554  _status */\n      0x06\n        /* \"money_flattened.sol\":2547:2565  _status = _ENTERED */\n      sstore\n        /* \"money_flattened.sol\":36359:36378  _checkMaxTx(amount) */\n      tag_120\n        /* \"money_flattened.sol\":36371:36377  amount */\n      dup3\n        /* \"money_flattened.sol\":36359:36370  _checkMaxTx */\n      tag_121\n        /* \"money_flattened.sol\":36359:36378  _checkMaxTx(amount) */\n      jump\t// in\n    tag_120:\n        /* \"money_flattened.sol\":36388:36416  _tokenReflection(to, amount) */\n      tag_122\n        /* \"money_flattened.sol\":36405:36407  to */\n      dup4\n        /* \"money_flattened.sol\":36409:36415  amount */\n      dup4\n        /* \"money_flattened.sol\":36388:36404  _tokenReflection */\n      tag_123\n        /* \"money_flattened.sol\":36388:36416  _tokenReflection(to, amount) */\n      jump\t// in\n    tag_122:\n        /* \"money_flattened.sol\":36426:36446  _tokenLP(to, amount) */\n      tag_124\n        /* \"money_flattened.sol\":36435:36437  to */\n      dup4\n        /* \"money_flattened.sol\":36439:36445  amount */\n      dup4\n        /* \"money_flattened.sol\":36426:36434  _tokenLP */\n      tag_125\n        /* \"money_flattened.sol\":36426:36446  _tokenLP(to, amount) */\n      jump\t// in\n    tag_124:\n        /* \"money_flattened.sol\":36456:36483  _tokenMarketing(to, amount) */\n      tag_126\n        /* \"money_flattened.sol\":36472:36474  to */\n      dup4\n        /* \"money_flattened.sol\":36476:36482  amount */\n      dup4\n        /* \"money_flattened.sol\":36456:36471  _tokenMarketing */\n      tag_127\n        /* \"money_flattened.sol\":36456:36483  _tokenMarketing(to, amount) */\n      jump\t// in\n    tag_126:\n        /* \"money_flattened.sol\":36493:36529  super.transferFrom(from, to, amount) */\n      tag_128\n        /* \"money_flattened.sol\":36512:36516  from */\n      dup5\n        /* \"money_flattened.sol\":36518:36520  to */\n      dup5\n        /* \"money_flattened.sol\":36522:36528  amount */\n      dup5\n        /* \"money_flattened.sol\":36493:36511  super.transferFrom */\n      tag_129\n        /* \"money_flattened.sol\":36493:36529  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"money_flattened.sol\":36546:36550  true */\n      0x01\n        /* \"money_flattened.sol\":36539:36550  return true */\n      swap1\n      pop\n        /* \"money_flattened.sol\":1793:1794  1 */\n      0x01\n        /* \"money_flattened.sol\":2720:2727  _status */\n      0x06\n        /* \"money_flattened.sol\":2720:2742  _status = _NOT_ENTERED */\n      sstore\n        /* \"money_flattened.sol\":36241:36557  function transferFrom(address from, address to, uint256 amount) public override nonReentrant returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":27954:28190  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_51:\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":28042:28046  bool */\n      0x00\n        /* \"money_flattened.sol\":28121:28139  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"money_flattened.sol\":28121:28132  _allowances */\n      0x01\n        /* \"money_flattened.sol\":28121:28139  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":28121:28148  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"money_flattened.sol\":28042:28046  bool */\n      swap1\n      swap2\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      swap1\n        /* \"money_flattened.sol\":28096:28162  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      tag_112\n      swap1\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup3\n      swap1\n        /* \"money_flattened.sol\":28121:28148  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"money_flattened.sol\":28121:28161  _allowances[owner][spender] + addedValue */\n      tag_134\n      swap1\n        /* \"money_flattened.sol\":28151:28161  addedValue */\n      dup8\n      swap1\n        /* \"money_flattened.sol\":28121:28161  _allowances[owner][spender] + addedValue */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"money_flattened.sol\":28096:28104  _approve */\n      tag_113\n        /* \"money_flattened.sol\":28096:28162  _approve(owner, spender, _allowances[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"money_flattened.sol\":35844:35941  function renounceOwnership() public override onlyOwner {... */\n    tag_63:\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":13313:13336  owner() == _msgSender() */\n      eq\n        /* \"money_flattened.sol\":13305:13373  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_140:\n        /* \"money_flattened.sol\":35909:35934  super.renounceOwnership() */\n      tag_143\n        /* \"money_flattened.sol\":35909:35932  super.renounceOwnership */\n      tag_144\n        /* \"money_flattened.sol\":35909:35934  super.renounceOwnership() */\n      jump\t// in\n    tag_143:\n        /* \"money_flattened.sol\":35844:35941  function renounceOwnership() public override onlyOwner {... */\n      jump\t// out\n        /* \"money_flattened.sol\":24448:24550  function symbol() public view virtual override returns (string memory) {... */\n    tag_71:\n        /* \"money_flattened.sol\":24504:24517  string memory */\n      0x60\n        /* \"money_flattened.sol\":24536:24543  _symbol */\n      0x04\n        /* \"money_flattened.sol\":24529:24543  return _symbol */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n        /* \"money_flattened.sol\":35410:35498  function setLpPair(address _lpPair) external onlyOwner {... */\n    tag_75:\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":13313:13336  owner() == _msgSender() */\n      eq\n        /* \"money_flattened.sol\":13305:13373  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_155:\n        /* \"money_flattened.sol\":35475:35481  lpPair */\n      0x08\n        /* \"money_flattened.sol\":35475:35491  lpPair = _lpPair */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"money_flattened.sol\":35410:35498  function setLpPair(address _lpPair) external onlyOwner {... */\n      jump\t// out\n        /* \"money_flattened.sol\":28677:29106  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_78:\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":28770:28774  bool */\n      0x00\n        /* \"money_flattened.sol\":28851:28869  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"money_flattened.sol\":28851:28862  _allowances */\n      0x01\n        /* \"money_flattened.sol\":28851:28869  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":28851:28878  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"money_flattened.sol\":28770:28774  bool */\n      swap1\n      swap2\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      swap1\n        /* \"money_flattened.sol\":28896:28931  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"money_flattened.sol\":28888:28973  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4486:4488   */\n      0x20\n        /* \"money_flattened.sol\":28888:28973  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4468:4489   */\n      mstore\n        /* \"#utility.yul\":4525:4527   */\n      0x25\n        /* \"#utility.yul\":4505:4523   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4498:4528   */\n      mstore\n        /* \"#utility.yul\":4564:4598   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4544:4562   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4537:4599   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4615:4633   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4608:4643   */\n      mstore\n        /* \"#utility.yul\":4660:4679   */\n      0x84\n      add\n        /* \"money_flattened.sol\":28888:28973  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_97\n        /* \"#utility.yul\":4284:4685   */\n      jump\n        /* \"money_flattened.sol\":28888:28973  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_160:\n        /* \"money_flattened.sol\":29007:29067  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_163\n        /* \"money_flattened.sol\":29016:29021  owner */\n      dup3\n        /* \"money_flattened.sol\":29023:29030  spender */\n      dup7\n        /* \"money_flattened.sol\":29051:29066  subtractedValue */\n      dup7\n        /* \"money_flattened.sol\":29032:29048  currentAllowance */\n      dup5\n        /* \"money_flattened.sol\":29032:29066  currentAllowance - subtractedValue */\n      sub\n        /* \"money_flattened.sol\":29007:29015  _approve */\n      tag_113\n        /* \"money_flattened.sol\":29007:29067  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_163:\n      pop\n        /* \"money_flattened.sol\":29095:29099  true */\n      0x01\n      swap5\n        /* \"money_flattened.sol\":28677:29106  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":35947:36235  function transfer(address to, uint256 amount) public override nonReentrant returns (bool) {... */\n    tag_82:\n        /* \"money_flattened.sol\":36031:36035  bool */\n      0x00\n        /* \"money_flattened.sol\":1836:1837  2 */\n      0x02\n        /* \"money_flattened.sol\":2417:2424  _status */\n      sload(0x06)\n        /* \"money_flattened.sol\":2417:2436  _status != _ENTERED */\n      sub\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3864:3866   */\n      0x20\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3846:3867   */\n      mstore\n        /* \"#utility.yul\":3903:3905   */\n      0x1f\n        /* \"#utility.yul\":3883:3901   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3876:3906   */\n      mstore\n        /* \"#utility.yul\":3942:3975   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3922:3940   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3915:3976   */\n      mstore\n        /* \"#utility.yul\":3993:4011   */\n      0x64\n      add\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_97\n        /* \"#utility.yul\":3662:4017   */\n      jump\n        /* \"money_flattened.sol\":2409:2472  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_165:\n        /* \"money_flattened.sol\":1836:1837  2 */\n      0x02\n        /* \"money_flattened.sol\":2547:2554  _status */\n      0x06\n        /* \"money_flattened.sol\":2547:2565  _status = _ENTERED */\n      sstore\n        /* \"money_flattened.sol\":36047:36066  _checkMaxTx(amount) */\n      tag_168\n        /* \"money_flattened.sol\":36059:36065  amount */\n      dup3\n        /* \"money_flattened.sol\":36047:36058  _checkMaxTx */\n      tag_121\n        /* \"money_flattened.sol\":36047:36066  _checkMaxTx(amount) */\n      jump\t// in\n    tag_168:\n        /* \"money_flattened.sol\":36076:36104  _tokenReflection(to, amount) */\n      tag_169\n        /* \"money_flattened.sol\":36093:36095  to */\n      dup4\n        /* \"money_flattened.sol\":36097:36103  amount */\n      dup4\n        /* \"money_flattened.sol\":36076:36092  _tokenReflection */\n      tag_123\n        /* \"money_flattened.sol\":36076:36104  _tokenReflection(to, amount) */\n      jump\t// in\n    tag_169:\n        /* \"money_flattened.sol\":36114:36134  _tokenLP(to, amount) */\n      tag_170\n        /* \"money_flattened.sol\":36123:36125  to */\n      dup4\n        /* \"money_flattened.sol\":36127:36133  amount */\n      dup4\n        /* \"money_flattened.sol\":36114:36122  _tokenLP */\n      tag_125\n        /* \"money_flattened.sol\":36114:36134  _tokenLP(to, amount) */\n      jump\t// in\n    tag_170:\n        /* \"money_flattened.sol\":36144:36171  _tokenMarketing(to, amount) */\n      tag_171\n        /* \"money_flattened.sol\":36160:36162  to */\n      dup4\n        /* \"money_flattened.sol\":36164:36170  amount */\n      dup4\n        /* \"money_flattened.sol\":36144:36159  _tokenMarketing */\n      tag_127\n        /* \"money_flattened.sol\":36144:36171  _tokenMarketing(to, amount) */\n      jump\t// in\n    tag_171:\n        /* \"money_flattened.sol\":36181:36207  super.transfer(to, amount) */\n      tag_172\n        /* \"money_flattened.sol\":36196:36198  to */\n      dup4\n        /* \"money_flattened.sol\":36200:36206  amount */\n      dup4\n        /* \"money_flattened.sol\":36181:36195  super.transfer */\n      tag_173\n        /* \"money_flattened.sol\":36181:36207  super.transfer(to, amount) */\n      jump\t// in\n    tag_172:\n      pop\n        /* \"money_flattened.sol\":36224:36228  true */\n      0x01\n        /* \"money_flattened.sol\":36217:36228  return true */\n      swap1\n      pop\n        /* \"money_flattened.sol\":1793:1794  1 */\n      0x01\n        /* \"money_flattened.sol\":2720:2727  _status */\n      0x06\n        /* \"money_flattened.sol\":2720:2742  _status = _NOT_ENTERED */\n      sstore\n        /* \"money_flattened.sol\":35947:36235  function transfer(address to, uint256 amount) public override nonReentrant returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":35647:35838  function transferOwnership(address newOwner) public override onlyOwner {... */\n    tag_91:\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":13313:13336  owner() == _msgSender() */\n      eq\n        /* \"money_flattened.sol\":13305:13373  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":35736:35758  newOwner != address(0) */\n      dup2\n      and\n        /* \"money_flattened.sol\":35728:35788  require(newOwner != address(0), \"Invalid new owner address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4892:4894   */\n      0x20\n        /* \"money_flattened.sol\":35728:35788  require(newOwner != address(0), \"Invalid new owner address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4874:4895   */\n      mstore\n        /* \"#utility.yul\":4931:4933   */\n      0x19\n        /* \"#utility.yul\":4911:4929   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4904:4934   */\n      mstore\n        /* \"#utility.yul\":4970:4997   */\n      0x496e76616c6964206e6577206f776e6572206164647265737300000000000000\n        /* \"#utility.yul\":4950:4968   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4943:4998   */\n      mstore\n        /* \"#utility.yul\":5015:5033   */\n      0x64\n      add\n        /* \"money_flattened.sol\":35728:35788  require(newOwner != address(0), \"Invalid new owner address\") */\n      tag_97\n        /* \"#utility.yul\":4690:5039   */\n      jump\n        /* \"money_flattened.sol\":35728:35788  require(newOwner != address(0), \"Invalid new owner address\") */\n    tag_181:\n        /* \"money_flattened.sol\":35798:35831  super.transferOwnership(newOwner) */\n      tag_184\n        /* \"money_flattened.sol\":35822:35830  newOwner */\n      dup2\n        /* \"money_flattened.sol\":35798:35821  super.transferOwnership */\n      tag_185\n        /* \"money_flattened.sol\":35798:35831  super.transferOwnership(newOwner) */\n      jump\t// in\n    tag_184:\n        /* \"money_flattened.sol\":35647:35838  function transferOwnership(address newOwner) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":32204:32574  function _approve(... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":32335:32354  owner != address(0) */\n      dup4\n      and\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5246:5248   */\n      0x20\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5228:5249   */\n      mstore\n        /* \"#utility.yul\":5285:5287   */\n      0x24\n        /* \"#utility.yul\":5265:5283   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5258:5288   */\n      mstore\n        /* \"#utility.yul\":5324:5358   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5304:5322   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5297:5359   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5375:5393   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5368:5402   */\n      mstore\n        /* \"#utility.yul\":5419:5438   */\n      0x84\n      add\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_97\n        /* \"#utility.yul\":5044:5444   */\n      jump\n        /* \"money_flattened.sol\":32327:32395  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":32413:32434  spender != address(0) */\n      dup3\n      and\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5651:5653   */\n      0x20\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5633:5654   */\n      mstore\n        /* \"#utility.yul\":5690:5692   */\n      0x22\n        /* \"#utility.yul\":5670:5688   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5663:5693   */\n      mstore\n        /* \"#utility.yul\":5729:5763   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5709:5727   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5702:5764   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5780:5798   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5773:5805   */\n      mstore\n        /* \"#utility.yul\":5822:5841   */\n      0x84\n      add\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_97\n        /* \"#utility.yul\":5449:5847   */\n      jump\n        /* \"money_flattened.sol\":32405:32473  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":32484:32502  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"money_flattened.sol\":32484:32495  _allowances */\n      0x01\n        /* \"money_flattened.sol\":32484:32502  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"money_flattened.sol\":32484:32511  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"money_flattened.sol\":32484:32520  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"money_flattened.sol\":32535:32567  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"money_flattened.sol\":32535:32567  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"money_flattened.sol\":32535:32567  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"money_flattened.sol\":32204:32574  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":36563:36802  function _checkMaxTx(uint256 amount) internal view {... */\n    tag_121:\n        /* \"money_flattened.sol\":36674:36677  100 */\n      0x64\n        /* \"money_flattened.sol\":36643:36670  MAX_TX_PERCENT * MAX_SUPPLY */\n      tag_196\n        /* \"money_flattened.sol\":35053:35059  10**24 */\n      0xd3c21bcecceda1000000\n        /* \"money_flattened.sol\":35107:35108  1 */\n      0x01\n        /* \"money_flattened.sol\":36643:36670  MAX_TX_PERCENT * MAX_SUPPLY */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"money_flattened.sol\":36642:36677  (MAX_TX_PERCENT * MAX_SUPPLY) / 100 */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"money_flattened.sol\":36632:36638  amount */\n      dup2\n        /* \"money_flattened.sol\":36632:36677  amount <= (MAX_TX_PERCENT * MAX_SUPPLY) / 100 */\n      gt\n      iszero\n        /* \"money_flattened.sol\":36624:36712  require(amount <= (MAX_TX_PERCENT * MAX_SUPPLY) / 100, \"Exceeds max transaction amount\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6449:6451   */\n      0x20\n        /* \"money_flattened.sol\":36624:36712  require(amount <= (MAX_TX_PERCENT * MAX_SUPPLY) / 100, \"Exceeds max transaction amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6431:6452   */\n      mstore\n        /* \"#utility.yul\":6488:6490   */\n      0x1e\n        /* \"#utility.yul\":6468:6486   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6461:6491   */\n      mstore\n        /* \"#utility.yul\":6527:6559   */\n      0x45786365656473206d6178207472616e73616374696f6e20616d6f756e740000\n        /* \"#utility.yul\":6507:6525   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6500:6560   */\n      mstore\n        /* \"#utility.yul\":6577:6595   */\n      0x64\n      add\n        /* \"money_flattened.sol\":36624:36712  require(amount <= (MAX_TX_PERCENT * MAX_SUPPLY) / 100, \"Exceeds max transaction amount\") */\n      tag_97\n        /* \"#utility.yul\":6247:6601   */\n      jump\n        /* \"money_flattened.sol\":36624:36712  require(amount <= (MAX_TX_PERCENT * MAX_SUPPLY) / 100, \"Exceeds max transaction amount\") */\n    tag_200:\n        /* \"money_flattened.sol\":36730:36742  tradeEnabled */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"money_flattened.sol\":36730:36767  tradeEnabled || msg.sender == owner() */\n      tag_203\n      jumpi\n      pop\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":36746:36756  msg.sender */\n      caller\n        /* \"money_flattened.sol\":36746:36767  msg.sender == owner() */\n      eq\n        /* \"money_flattened.sol\":36730:36767  tradeEnabled || msg.sender == owner() */\n    tag_203:\n        /* \"money_flattened.sol\":36722:36795  require(tradeEnabled || msg.sender == owner(), \"Trading not yet enabled\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"money_flattened.sol\":36722:36795  require(tradeEnabled || msg.sender == owner(), \"Trading not yet enabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6790:6811   */\n      mstore\n        /* \"#utility.yul\":6847:6849   */\n      0x17\n        /* \"#utility.yul\":6827:6845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6820:6850   */\n      mstore\n        /* \"#utility.yul\":6886:6911   */\n      0x54726164696e67206e6f742079657420656e61626c6564000000000000000000\n        /* \"#utility.yul\":6866:6884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6859:6912   */\n      mstore\n        /* \"#utility.yul\":6929:6947   */\n      0x64\n      add\n        /* \"money_flattened.sol\":36722:36795  require(tradeEnabled || msg.sender == owner(), \"Trading not yet enabled\") */\n      tag_97\n        /* \"#utility.yul\":6606:6953   */\n      jump\n        /* \"money_flattened.sol\":36808:36983  function _tokenReflection(address to, uint256 amount) internal {... */\n    tag_123:\n        /* \"money_flattened.sol\":36881:36905  uint256 reflectionAmount */\n      0x00\n        /* \"money_flattened.sol\":36923:36926  100 */\n      0x64\n        /* \"money_flattened.sol\":36909:36919  amount * 5 */\n      tag_209\n        /* \"money_flattened.sol\":36909:36915  amount */\n      dup4\n        /* \"money_flattened.sol\":36918:36919  5 */\n      0x05\n        /* \"money_flattened.sol\":36909:36919  amount * 5 */\n      tag_197\n      jump\t// in\n    tag_209:\n        /* \"money_flattened.sol\":36908:36926  (amount * 5) / 100 */\n      tag_210\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_210:\n        /* \"money_flattened.sol\":36936:36945  wethToken */\n      sload(0x07)\n        /* \"money_flattened.sol\":36936:36976  wethToken.transfer(to, reflectionAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7150:7182   */\n      dup7\n      dup2\n      and\n        /* \"money_flattened.sol\":36936:36976  wethToken.transfer(to, reflectionAmount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7132:7183   */\n      mstore\n        /* \"#utility.yul\":7199:7217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7192:7226   */\n      dup5\n      swap1\n      mstore\n        /* \"money_flattened.sol\":36881:36926  uint256 reflectionAmount = (amount * 5) / 100 */\n      swap3\n      swap4\n      pop\n        /* \"money_flattened.sol\":36936:36945  wethToken */\n      swap2\n      and\n      swap1\n        /* \"money_flattened.sol\":36936:36954  wethToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7105:7123   */\n      0x44\n      add\n        /* \"money_flattened.sol\":36936:36976  wethToken.transfer(to, reflectionAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      pop\n        /* \"money_flattened.sol\":36871:36983  {... */\n      pop\n        /* \"money_flattened.sol\":36808:36983  function _tokenReflection(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":36989:37194  function _tokenLP(address to, uint256 amount) internal {... */\n    tag_125:\n        /* \"money_flattened.sol\":37058:37064  lpPair */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"money_flattened.sol\":37058:37078  lpPair != address(0) */\n      iszero\n        /* \"money_flattened.sol\":37054:37188  if (lpPair != address(0)) {... */\n      tag_218\n      jumpi\n        /* \"money_flattened.sol\":37094:37110  uint256 lpAmount */\n      0x00\n        /* \"money_flattened.sol\":37128:37131  100 */\n      0x64\n        /* \"money_flattened.sol\":37114:37124  amount * 2 */\n      tag_219\n        /* \"money_flattened.sol\":37114:37120  amount */\n      dup4\n        /* \"money_flattened.sol\":37123:37124  2 */\n      0x02\n        /* \"money_flattened.sol\":37114:37124  amount * 2 */\n      tag_197\n      jump\t// in\n    tag_219:\n        /* \"money_flattened.sol\":37113:37131  (amount * 2) / 100 */\n      tag_220\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_220:\n        /* \"money_flattened.sol\":37160:37166  lpPair */\n      sload(0x08)\n        /* \"money_flattened.sol\":37094:37131  uint256 lpAmount = (amount * 2) / 100 */\n      swap1\n      swap2\n      pop\n        /* \"money_flattened.sol\":37145:37177  super.transfer(lpPair, lpAmount) */\n      tag_215\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":37160:37166  lpPair */\n      and\n        /* \"money_flattened.sol\":37094:37131  uint256 lpAmount = (amount * 2) / 100 */\n      dup3\n        /* \"money_flattened.sol\":37145:37159  super.transfer */\n      tag_173\n        /* \"money_flattened.sol\":37145:37177  super.transfer(lpPair, lpAmount) */\n      jump\t// in\n        /* \"money_flattened.sol\":37054:37188  if (lpPair != address(0)) {... */\n    tag_218:\n        /* \"money_flattened.sol\":36989:37194  function _tokenLP(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"money_flattened.sol\":37200:37381  function _tokenMarketing(address to, uint256 amount) internal {... */\n    tag_127:\n        /* \"money_flattened.sol\":37272:37295  uint256 marketingAmount */\n      0x00\n        /* \"money_flattened.sol\":37313:37316  100 */\n      0x64\n        /* \"money_flattened.sol\":37299:37309  amount * 1 */\n      tag_223\n        /* \"money_flattened.sol\":37299:37305  amount */\n      dup4\n        /* \"money_flattened.sol\":37308:37309  1 */\n      0x01\n        /* \"money_flattened.sol\":37299:37309  amount * 1 */\n      tag_197\n      jump\t// in\n    tag_223:\n        /* \"money_flattened.sol\":37298:37316  (amount * 1) / 100 */\n      tag_224\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_224:\n        /* \"money_flattened.sol\":37341:37356  marketingWallet */\n      sload(0x09)\n        /* \"money_flattened.sol\":37272:37316  uint256 marketingAmount = (amount * 1) / 100 */\n      swap1\n      swap2\n      pop\n        /* \"money_flattened.sol\":37326:37374  super.transfer(marketingWallet, marketingAmount) */\n      tag_215\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":37341:37356  marketingWallet */\n      and\n        /* \"money_flattened.sol\":37272:37316  uint256 marketingAmount = (amount * 1) / 100 */\n      dup3\n        /* \"money_flattened.sol\":37326:37340  super.transfer */\n      tag_173\n        /* \"money_flattened.sol\":37326:37374  super.transfer(marketingWallet, marketingAmount) */\n      jump\t// in\n        /* \"money_flattened.sol\":27273:27559  function transferFrom(... */\n    tag_129:\n        /* \"money_flattened.sol\":27400:27404  bool */\n      0x00\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":27456:27494  _spendAllowance(from, spender, amount) */\n      tag_228\n        /* \"money_flattened.sol\":27472:27476  from */\n      dup6\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup3\n        /* \"money_flattened.sol\":27487:27493  amount */\n      dup6\n        /* \"money_flattened.sol\":27456:27471  _spendAllowance */\n      tag_229\n        /* \"money_flattened.sol\":27456:27494  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_228:\n        /* \"money_flattened.sol\":27504:27531  _transfer(from, to, amount) */\n      tag_163\n        /* \"money_flattened.sol\":27514:27518  from */\n      dup6\n        /* \"money_flattened.sol\":27520:27522  to */\n      dup6\n        /* \"money_flattened.sol\":27524:27530  amount */\n      dup6\n        /* \"money_flattened.sol\":27504:27513  _transfer */\n      tag_231\n        /* \"money_flattened.sol\":27504:27531  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"money_flattened.sol\":13733:13834  function renounceOwnership() public virtual onlyOwner {... */\n    tag_144:\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":13313:13336  owner() == _msgSender() */\n      eq\n        /* \"money_flattened.sol\":13305:13373  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_235:\n        /* \"money_flattened.sol\":13797:13827  _transferOwnership(address(0)) */\n      tag_143\n        /* \"money_flattened.sol\":13824:13825  0 */\n      0x00\n        /* \"money_flattened.sol\":13797:13815  _transferOwnership */\n      tag_239\n        /* \"money_flattened.sol\":13797:13827  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"money_flattened.sol\":25810:25999  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_173:\n        /* \"money_flattened.sol\":25889:25893  bool */\n      0x00\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":25943:25971  _transfer(owner, to, amount) */\n      tag_112\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      dup2\n        /* \"money_flattened.sol\":25960:25962  to */\n      dup6\n        /* \"money_flattened.sol\":25964:25970  amount */\n      dup6\n        /* \"money_flattened.sol\":25943:25952  _transfer */\n      tag_231\n        /* \"money_flattened.sol\":25943:25971  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"money_flattened.sol\":13983:14181  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_185:\n        /* \"money_flattened.sol\":13173:13179  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"money_flattened.sol\":11889:11899  msg.sender */\n      caller\n        /* \"money_flattened.sol\":13313:13336  owner() == _msgSender() */\n      eq\n        /* \"money_flattened.sol\":13305:13373  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":14071:14093  newOwner != address(0) */\n      dup2\n      and\n        /* \"money_flattened.sol\":14063:14136  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7721:7723   */\n      0x20\n        /* \"money_flattened.sol\":14063:14136  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7703:7724   */\n      mstore\n        /* \"#utility.yul\":7760:7762   */\n      0x26\n        /* \"#utility.yul\":7740:7758   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7733:7763   */\n      mstore\n        /* \"#utility.yul\":7799:7833   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7779:7797   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7772:7834   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7850:7868   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7843:7879   */\n      mstore\n        /* \"#utility.yul\":7896:7915   */\n      0x84\n      add\n        /* \"money_flattened.sol\":14063:14136  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_97\n        /* \"#utility.yul\":7519:7921   */\n      jump\n        /* \"money_flattened.sol\":14063:14136  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_249:\n        /* \"money_flattened.sol\":14146:14174  _transferOwnership(newOwner) */\n      tag_184\n        /* \"money_flattened.sol\":14165:14173  newOwner */\n      dup2\n        /* \"money_flattened.sol\":14146:14164  _transferOwnership */\n      tag_239\n        /* \"money_flattened.sol\":14146:14174  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"money_flattened.sol\":32851:33292  function _spendAllowance(... */\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"money_flattened.sol\":32981:33005  uint256 currentAllowance */\n      0x00\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"money_flattened.sol\":26172:26183  _allowances */\n      0x01\n        /* \"money_flattened.sol\":26172:26190  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"money_flattened.sol\":26172:26199  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"money_flattened.sol\":33047:33084  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"money_flattened.sol\":33043:33286  if (currentAllowance != type(uint256).max) {... */\n      tag_215\n      jumpi\n        /* \"money_flattened.sol\":33128:33134  amount */\n      dup2\n        /* \"money_flattened.sol\":33108:33124  currentAllowance */\n      dup2\n        /* \"money_flattened.sol\":33108:33134  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8128:8130   */\n      0x20\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8110:8131   */\n      mstore\n        /* \"#utility.yul\":8167:8169   */\n      0x1d\n        /* \"#utility.yul\":8147:8165   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8140:8170   */\n      mstore\n        /* \"#utility.yul\":8206:8237   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":8186:8204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8179:8238   */\n      mstore\n        /* \"#utility.yul\":8255:8273   */\n      0x64\n      add\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_97\n        /* \"#utility.yul\":7926:8279   */\n      jump\n        /* \"money_flattened.sol\":33100:33168  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_256:\n        /* \"money_flattened.sol\":33210:33261  _approve(owner, spender, currentAllowance - amount) */\n      tag_215\n        /* \"money_flattened.sol\":33219:33224  owner */\n      dup5\n        /* \"money_flattened.sol\":33226:33233  spender */\n      dup5\n        /* \"money_flattened.sol\":33254:33260  amount */\n      dup5\n        /* \"money_flattened.sol\":33235:33251  currentAllowance */\n      dup5\n        /* \"money_flattened.sol\":33235:33260  currentAllowance - amount */\n      sub\n        /* \"money_flattened.sol\":33210:33218  _approve */\n      tag_113\n        /* \"money_flattened.sol\":33210:33261  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"money_flattened.sol\":29569:30220  function _transfer(... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":29695:29713  from != address(0) */\n      dup4\n      and\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8486:8488   */\n      0x20\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8468:8489   */\n      mstore\n        /* \"#utility.yul\":8525:8527   */\n      0x25\n        /* \"#utility.yul\":8505:8523   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8498:8528   */\n      mstore\n        /* \"#utility.yul\":8564:8598   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":8544:8562   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8537:8599   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":8615:8633   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8608:8643   */\n      mstore\n        /* \"#utility.yul\":8660:8679   */\n      0x84\n      add\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_97\n        /* \"#utility.yul\":8284:8685   */\n      jump\n        /* \"money_flattened.sol\":29687:29755  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":29773:29789  to != address(0) */\n      dup3\n      and\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8892:8894   */\n      0x20\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8874:8895   */\n      mstore\n        /* \"#utility.yul\":8931:8933   */\n      0x23\n        /* \"#utility.yul\":8911:8929   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8904:8934   */\n      mstore\n        /* \"#utility.yul\":8970:9004   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8950:8968   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8943:9005   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9021:9039   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9014:9047   */\n      mstore\n        /* \"#utility.yul\":9064:9083   */\n      0x84\n      add\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n        /* \"#utility.yul\":8690:9089   */\n      jump\n        /* \"money_flattened.sol\":29765:29829  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":29911:29926  _balances[from] */\n      dup4\n      and\n        /* \"money_flattened.sol\":29889:29908  uint256 fromBalance */\n      0x00\n        /* \"money_flattened.sol\":29911:29926  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"money_flattened.sol\":29944:29965  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9296:9298   */\n      0x20\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9278:9299   */\n      mstore\n        /* \"#utility.yul\":9335:9337   */\n      0x26\n        /* \"#utility.yul\":9315:9333   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9308:9338   */\n      mstore\n        /* \"#utility.yul\":9374:9408   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":9354:9372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9347:9409   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":9425:9443   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9418:9454   */\n      mstore\n        /* \"#utility.yul\":9471:9490   */\n      0x84\n      add\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_97\n        /* \"#utility.yul\":9094:9496   */\n      jump\n        /* \"money_flattened.sol\":29936:30008  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":30042:30057  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"money_flattened.sol\":30042:30051  _balances */\n      0x00\n        /* \"money_flattened.sol\":30042:30057  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"money_flattened.sol\":30060:30080  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"money_flattened.sol\":30042:30080  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"money_flattened.sol\":30100:30113  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"money_flattened.sol\":30100:30123  _balances[to] += amount */\n      dup1\n      sload\n        /* \"money_flattened.sol\":30074:30080  amount */\n      dup5\n      swap3\n        /* \"money_flattened.sol\":30042:30051  _balances */\n      swap1\n        /* \"money_flattened.sol\":30100:30123  _balances[to] += amount */\n      tag_272\n      swap1\n        /* \"money_flattened.sol\":30074:30080  amount */\n      dup5\n      swap1\n        /* \"money_flattened.sol\":30100:30123  _balances[to] += amount */\n      tag_135\n      jump\t// in\n    tag_272:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"money_flattened.sol\":30154:30156  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n      and\n        /* \"money_flattened.sol\":30148:30152  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"money_flattened.sol\":30158:30164  amount */\n      dup5\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_273\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"money_flattened.sol\":30139:30165  Transfer(from, to, amount) */\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"money_flattened.sol\":30176:30213  _afterTokenTransfer(from, to, amount) */\n      tag_215\n        /* \"money_flattened.sol\":33876:33997  function _beforeTokenTransfer(... */\n      jump\n        /* \"money_flattened.sol\":14335:14522  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_239:\n        /* \"money_flattened.sol\":14427:14433  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"money_flattened.sol\":14443:14460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"money_flattened.sol\":14475:14515  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"money_flattened.sol\":14427:14433  _owner */\n      swap2\n      and\n      swap2\n        /* \"money_flattened.sol\":14443:14460  _owner = newOwner */\n      swap1\n        /* \"money_flattened.sol\":14427:14433  _owner */\n      dup3\n      swap1\n        /* \"money_flattened.sol\":14475:14515  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"money_flattened.sol\":14408:14424  address oldOwner */\n      0x00\n      swap1\n        /* \"money_flattened.sol\":14475:14515  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"money_flattened.sol\":14398:14522  {... */\n      pop\n        /* \"money_flattened.sol\":14335:14522  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_29:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_283:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_283)\n    tag_285:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_279:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_287:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_32:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_289:\n        /* \"#utility.yul\":913:942   */\n      tag_290\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_279\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_42:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_294:\n        /* \"#utility.yul\":1563:1592   */\n      tag_295\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_279\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_296\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_279\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2108:2294   */\n    tag_59:\n        /* \"#utility.yul\":2167:2173   */\n      0x00\n        /* \"#utility.yul\":2220:2222   */\n      0x20\n        /* \"#utility.yul\":2208:2217   */\n      dup3\n        /* \"#utility.yul\":2199:2206   */\n      dup5\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_300:\n        /* \"#utility.yul\":2259:2288   */\n      tag_301\n        /* \"#utility.yul\":2278:2287   */\n      dup3\n        /* \"#utility.yul\":2259:2288   */\n      tag_279\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2249:2288   */\n      swap4\n        /* \"#utility.yul\":2108:2294   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2559   */\n    tag_86:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_303:\n        /* \"#utility.yul\":2467:2496   */\n      tag_304\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_279\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_305\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_279\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2920   */\n    tag_98:\n        /* \"#utility.yul\":2766:2768   */\n      0x20\n        /* \"#utility.yul\":2748:2769   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2785:2803   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2778:2808   */\n      mstore\n        /* \"#utility.yul\":2844:2878   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2839:2841   */\n      0x40\n        /* \"#utility.yul\":2824:2842   */\n      dup3\n      add\n        /* \"#utility.yul\":2817:2879   */\n      mstore\n        /* \"#utility.yul\":2911:2913   */\n      0x60\n        /* \"#utility.yul\":2896:2914   */\n      add\n      swap1\n        /* \"#utility.yul\":2564:2920   */\n      jump\t// out\n        /* \"#utility.yul\":3277:3657   */\n    tag_105:\n        /* \"#utility.yul\":3356:3357   */\n      0x01\n        /* \"#utility.yul\":3352:3364   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3399:3411   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3420:3481   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3474:3478   */\n      0x7f\n        /* \"#utility.yul\":3466:3472   */\n      dup3\n        /* \"#utility.yul\":3462:3479   */\n      and\n        /* \"#utility.yul\":3452:3479   */\n      swap2\n      pop\n        /* \"#utility.yul\":3420:3481   */\n    tag_309:\n        /* \"#utility.yul\":3527:3529   */\n      0x20\n        /* \"#utility.yul\":3519:3525   */\n      dup3\n        /* \"#utility.yul\":3516:3530   */\n      lt\n        /* \"#utility.yul\":3496:3514   */\n      dup2\n        /* \"#utility.yul\":3493:3531   */\n      sub\n        /* \"#utility.yul\":3490:3651   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3573:3583   */\n      0x4e487b71\n        /* \"#utility.yul\":3568:3571   */\n      0xe0\n        /* \"#utility.yul\":3564:3584   */\n      shl\n        /* \"#utility.yul\":3561:3562   */\n      0x00\n        /* \"#utility.yul\":3554:3585   */\n      mstore\n        /* \"#utility.yul\":3608:3612   */\n      0x22\n        /* \"#utility.yul\":3605:3606   */\n      0x04\n        /* \"#utility.yul\":3598:3613   */\n      mstore\n        /* \"#utility.yul\":3636:3640   */\n      0x24\n        /* \"#utility.yul\":3633:3634   */\n      0x00\n        /* \"#utility.yul\":3626:3641   */\n      revert\n        /* \"#utility.yul\":3490:3651   */\n    tag_310:\n      pop\n        /* \"#utility.yul\":3277:3657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4022:4149   */\n    tag_280:\n        /* \"#utility.yul\":4083:4093   */\n      0x4e487b71\n        /* \"#utility.yul\":4078:4081   */\n      0xe0\n        /* \"#utility.yul\":4074:4094   */\n      shl\n        /* \"#utility.yul\":4071:4072   */\n      0x00\n        /* \"#utility.yul\":4064:4095   */\n      mstore\n        /* \"#utility.yul\":4114:4118   */\n      0x11\n        /* \"#utility.yul\":4111:4112   */\n      0x04\n        /* \"#utility.yul\":4104:4119   */\n      mstore\n        /* \"#utility.yul\":4138:4142   */\n      0x24\n        /* \"#utility.yul\":4135:4136   */\n      0x00\n        /* \"#utility.yul\":4128:4143   */\n      revert\n        /* \"#utility.yul\":4154:4279   */\n    tag_135:\n        /* \"#utility.yul\":4219:4228   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4240:4250   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4237:4273   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4253:4271   */\n      tag_110\n      tag_280\n      jump\t// in\n        /* \"#utility.yul\":5852:6020   */\n    tag_197:\n        /* \"#utility.yul\":5925:5934   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5956:5965   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5973:5988   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5967:5989   */\n      dup5\n      eq\n        /* \"#utility.yul\":5953:5990   */\n      or\n        /* \"#utility.yul\":5943:6014   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":5994:6012   */\n      tag_110\n      tag_280\n      jump\t// in\n        /* \"#utility.yul\":6025:6242   */\n    tag_199:\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6091:6092   */\n      dup3\n        /* \"#utility.yul\":6081:6213   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6135:6145   */\n      0x4e487b71\n        /* \"#utility.yul\":6130:6133   */\n      0xe0\n        /* \"#utility.yul\":6126:6146   */\n      shl\n        /* \"#utility.yul\":6123:6124   */\n      0x00\n        /* \"#utility.yul\":6116:6147   */\n      mstore\n        /* \"#utility.yul\":6170:6174   */\n      0x12\n        /* \"#utility.yul\":6167:6168   */\n      0x04\n        /* \"#utility.yul\":6160:6175   */\n      mstore\n        /* \"#utility.yul\":6198:6202   */\n      0x24\n        /* \"#utility.yul\":6195:6196   */\n      0x00\n        /* \"#utility.yul\":6188:6203   */\n      revert\n        /* \"#utility.yul\":6081:6213   */\n    tag_324:\n      pop\n        /* \"#utility.yul\":6227:6236   */\n      div\n      swap1\n        /* \"#utility.yul\":6025:6242   */\n      jump\t// out\n        /* \"#utility.yul\":7237:7514   */\n    tag_216:\n        /* \"#utility.yul\":7304:7310   */\n      0x00\n        /* \"#utility.yul\":7357:7359   */\n      0x20\n        /* \"#utility.yul\":7345:7354   */\n      dup3\n        /* \"#utility.yul\":7336:7343   */\n      dup5\n        /* \"#utility.yul\":7332:7355   */\n      sub\n        /* \"#utility.yul\":7328:7360   */\n      slt\n        /* \"#utility.yul\":7325:7377   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":7373:7374   */\n      0x00\n        /* \"#utility.yul\":7370:7371   */\n      dup1\n        /* \"#utility.yul\":7363:7375   */\n      revert\n        /* \"#utility.yul\":7325:7377   */\n    tag_329:\n        /* \"#utility.yul\":7405:7414   */\n      dup2\n        /* \"#utility.yul\":7399:7415   */\n      mload\n        /* \"#utility.yul\":7458:7463   */\n      dup1\n        /* \"#utility.yul\":7451:7464   */\n      iszero\n        /* \"#utility.yul\":7444:7465   */\n      iszero\n        /* \"#utility.yul\":7437:7442   */\n      dup2\n        /* \"#utility.yul\":7434:7466   */\n      eq\n        /* \"#utility.yul\":7424:7484   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":7480:7481   */\n      0x00\n        /* \"#utility.yul\":7477:7478   */\n      dup1\n        /* \"#utility.yul\":7470:7482   */\n      revert\n\n    auxdata: 0xa2646970667358221220f08aa8e4fd264ba76f0c1da284c22559ad50c9541cf03aa3bd6287a484c5692864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1416": {
									"entryPoint": null,
									"id": 1416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_376": {
									"entryPoint": null,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1361": {
									"entryPoint": null,
									"id": 1361,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1350": {
									"entryPoint": 651,
									"id": 1350,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1179": {
									"entryPoint": 419,
									"id": 1179,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_344": {
									"entryPoint": 333,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_456": {
									"entryPoint": 337,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3796:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "341:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "365:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "370:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "351:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "351:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "398:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "391:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "415:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "520:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "573:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "541:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "614:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "616:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "587:26:1"
															},
															"nodeType": "YulIf",
															"src": "584:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "704:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "732:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "737:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "769:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "772:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "800:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "691:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:38:1"
															},
															"nodeType": "YulIf",
															"src": "654:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "476:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "485:6:1",
														"type": ""
													}
												],
												"src": "441:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "882:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "892:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "915:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "873:4:1",
														"type": ""
													}
												],
												"src": "826:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1033:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1066:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1080:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1090:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1084:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1111:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1104:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1104:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1134:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1156:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1146:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1138:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1178:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1201:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1211:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1218:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1230:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1214:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1214:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1207:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1207:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1197:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1197:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1182:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1272:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1274:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "1289:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "1274:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "1254:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1266:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1251:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1251:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "1248:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1308:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1322:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1332:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1339:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1344:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1335:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1335:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1328:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1328:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1318:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1312:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1362:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1375:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1366:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1460:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1469:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1476:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1462:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1462:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1462:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1410:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1417:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1407:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1407:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1421:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1423:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1436:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1443:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1432:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1432:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1423:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1403:3:1",
																			"statements": []
																		},
																		"src": "1399:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:11:1"
															},
															"nodeType": "YulIf",
															"src": "1043:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1005:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1012:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1017:10:1",
														"type": ""
													}
												],
												"src": "952:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1587:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1597:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1612:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1630:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1633:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1626:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1626:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1643:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1639:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1639:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1622:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1622:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1618:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1618:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1654:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1657:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1650:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1605:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1605:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1597:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1564:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1578:4:1",
														"type": ""
													}
												],
												"src": "1502:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1779:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1799:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1793:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1783:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1846:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1848:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1848:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1848:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1818:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1834:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1838:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1830:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1830:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1842:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1815:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:30:1"
															},
															"nodeType": "YulIf",
															"src": "1812:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1921:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1959:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1953:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1953:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1927:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1927:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1967:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1877:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1877:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1983:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2000:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1987:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2010:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2029:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2014:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2042:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2055:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2042:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2112:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2126:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2145:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2157:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2153:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2153:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2141:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2141:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2130:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2174:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2218:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2188:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2188:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2178:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2236:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2245:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2240:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2323:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2348:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2366:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2371:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2362:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2362:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2356:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2356:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2341:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2341:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2341:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2400:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2414:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2422:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2410:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2410:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2400:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2441:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2458:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2469:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2454:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2454:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2441:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2270:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2273:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2267:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2267:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2282:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2284:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "2293:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2296:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2289:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2289:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2284:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2263:3:1",
																					"statements": []
																				},
																				"src": "2259:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2543:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2561:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2588:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2593:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2584:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2584:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2578:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2578:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2565:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2628:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2640:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2667:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2670:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2663:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2663:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2679:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2659:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2659:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2689:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2685:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2685:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2655:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2655:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2651:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2651:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2636:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2636:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2621:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2621:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2621:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2514:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2523:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2511:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2511:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2508:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2729:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2743:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2746:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2739:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2739:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2755:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2735:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2735:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2722:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2722:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2722:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2105:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2785:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2799:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2812:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2803:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2848:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2866:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2885:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2890:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2881:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2881:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2875:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2875:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2866:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2829:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2826:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2935:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2994:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3001:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2941:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2941:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2928:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2928:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2928:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2777:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2085:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2082:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "2075:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1754:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1760:3:1",
														"type": ""
													}
												],
												"src": "1673:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3204:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3221:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3232:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3214:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3214:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3266:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3251:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3271:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3244:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3294:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3305:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3290:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3310:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3353:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3365:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3376:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3361:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3353:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3181:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3195:4:1",
														"type": ""
													}
												],
												"src": "3030:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3438:174:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3448:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3459:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3462:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3455:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3448:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3495:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3516:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3523:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3528:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3519:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3519:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3509:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3509:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3563:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3553:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3553:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3553:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3588:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3591:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3581:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3581:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3479:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3482:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3476:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3476:10:1"
															},
															"nodeType": "YulIf",
															"src": "3473:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3421:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3424:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3430:3:1",
														"type": ""
													}
												],
												"src": "3390:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3718:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3728:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3728:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3770:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3781:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3763:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3687:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3698:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3709:4:1",
														"type": ""
													}
												],
												"src": "3617:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x49D5C2BDFFAC6CE2BFDB6640F4F80F226BC10BAB OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x149E CODESIZE SUB DUP1 PUSH3 0x149E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x67 SWAP2 PUSH3 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F6E65792041766178205265666C656374696F6E20546F6B656E0000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D6F6E6579417661785265666C656374696F6E73000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xE4 SWAP2 SWAP1 PUSH3 0x366 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xF3 DUP3 DUP3 PUSH3 0x366 JUMP JUMPDEST POP POP POP PUSH3 0x110 PUSH3 0x10A PUSH3 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0x146 CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x1A3 JUMP JUMPDEST POP PUSH3 0x45A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x212 SWAP2 SWAP1 PUSH3 0x432 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x241 SWAP1 DUP5 SWAP1 PUSH3 0x432 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x30E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x28B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x33D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x35E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x349 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x382 JUMPI PUSH3 0x382 PUSH3 0x2C2 JUMP JUMPDEST PUSH3 0x39A DUP2 PUSH3 0x393 DUP5 SLOAD PUSH3 0x2D8 JUMP JUMPDEST DUP5 PUSH3 0x314 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3D2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3B9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x35E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x403 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3E2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x422 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x454 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1034 DUP1 PUSH3 0x46A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA35F942A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA35F942A EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x452ED4F1 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x99D386 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x165 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH2 0x2B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7A JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x12C PUSH2 0x516 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x169 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C726561647920656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0xF40 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0xF40 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FB DUP2 DUP6 DUP6 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x469 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x473 DUP4 DUP4 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x47D DUP4 DUP4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x492 DUP5 DUP5 DUP5 PUSH2 0xA47 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP PUSH1 0x1 PUSH1 0x6 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3FB SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x4DD SWAP1 DUP8 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x514 PUSH2 0xA60 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x603 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x734 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x670 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x67A DUP4 DUP4 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x684 DUP4 DUP4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x68E DUP4 DUP4 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x698 DUP4 DUP4 PUSH2 0xA94 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP PUSH1 0x1 PUSH1 0x6 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E6577206F776E6572206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0xAA2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH2 0x86F PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x8EA JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206E6F742079657420656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x945 DUP4 PUSH1 0x5 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x94F SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x64 PUSH2 0x9EE DUP4 PUSH1 0x2 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x9C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xA94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xA24 DUP4 PUSH1 0x1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x9C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xA55 DUP6 DUP3 DUP6 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x603 DUP6 DUP6 DUP6 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FB DUP2 DUP6 DUP6 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x9C8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD3B SWAP1 DUP5 SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD87 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE13 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xDF7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6C DUP4 PUSH2 0xE34 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE98 DUP5 PUSH2 0xE34 JUMP JUMPDEST SWAP3 POP PUSH2 0xEA6 PUSH1 0x20 DUP6 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED1 DUP3 PUSH2 0xE34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP PUSH2 0xF02 PUSH1 0x20 DUP5 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF54 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF74 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0xF7A JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFD7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE DUP11 0xA8 0xE4 REVERT 0x26 0x4B 0xA7 PUSH16 0xC1DA284C22559AD50C9541CF03AA3BD PUSH3 0x87A484 0xC5 PUSH10 0x2864736F6C6343000812 STOP CALLER ",
							"sourceMap": "34759:2624:0:-:0;;;34867:77;;;-1:-1:-1;;;;;;34867:77:0;34901:42;34867:77;;;35114:33;;;-1:-1:-1;;;;35114:33:0;;;35154:250;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24059:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24133:5;24125;:13;;;;;;:::i;:::-;-1:-1:-1;24148:7:0;:17;24158:7;24148;:17;:::i;:::-;;24059:113;;12986:32;13005:12;:10;;;:12;;:::i;:::-;12986:18;:32::i;:::-;1793:1;1898:7;:22;35277:15:::1;:34:::0;;-1:-1:-1;;;;;;35277:34:0::1;-1:-1:-1::0;;;;;35277:34:0;::::1;;::::0;;35321:25:::1;35327:10;35339:6;35321:5;:25::i;:::-;35154:250:::0;34759:2624;;11810:96;11889:10;;11810:96::o;14335:187::-;14427:6;;;-1:-1:-1;;;;;14443:17:0;;;-1:-1:-1;;;;;;14443:17:0;;;;;;;14475:40;;14427:6;;;14443:17;14427:6;;14475:40;;14408:16;;14475:40;14398:124;14335:187;:::o;30496:389::-;-1:-1:-1;;;;;30579:21:0;;30571:65;;;;-1:-1:-1;;;30571:65:0;;3232:2:1;30571:65:0;;;3214:21:1;3271:2;3251:18;;;3244:30;3310:33;3290:18;;;3283:61;3361:18;;30571:65:0;;;;;;;;30723:6;30707:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;30739:18:0;;:9;:18;;;;;;;;;;:28;;30761:6;;30739:9;:28;;30761:6;;30739:28;:::i;:::-;;;;-1:-1:-1;;30782:37:0;;3763:25:1;;;-1:-1:-1;;;;;30782:37:0;;;30799:1;;30782:37;;3751:2:1;3736:18;30782:37:0;;;;;;;30496:389;;:::o;33876:121::-;;;;:::o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:1;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:1;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:1;;;2875:26;2826:89;-1:-1:-1;;1630:1:1;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:1;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:1;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:1;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:1:o;3390:222::-;3455:9;;;3476:10;;;3473:133;;;3528:10;3523:3;3519:20;3516:1;3509:31;3563:4;3560:1;3553:15;3591:4;3588:1;3581:15;3473:133;3390:222;;;;:::o;3617:177::-;34759:2624:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1361": {
									"entryPoint": null,
									"id": 1361,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1296": {
									"entryPoint": 1844,
									"id": 1296,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1350": {
									"entryPoint": null,
									"id": 1350,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkMaxTx_1595": {
									"entryPoint": 2136,
									"id": 1595,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_344": {
									"entryPoint": null,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1339": {
									"entryPoint": 2874,
									"id": 1339,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_tokenLP_1651": {
									"entryPoint": 2510,
									"id": 1651,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_tokenMarketing_1675": {
									"entryPoint": 2581,
									"id": 1675,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_tokenReflection_1619": {
									"entryPoint": 2358,
									"id": 1619,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_456": {
									"entryPoint": 3476,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1123": {
									"entryPoint": 3014,
									"id": 1123,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_916": {
									"entryPoint": null,
									"id": 916,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_941": {
									"entryPoint": 1005,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_873": {
									"entryPoint": null,
									"id": 873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_849": {
									"entryPoint": null,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1046": {
									"entryPoint": 1393,
									"id": 1046,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@enableTrade_1444": {
									"entryPoint": 697,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_1004": {
									"entryPoint": 1187,
									"id": 1004,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lpPair_1381": {
									"entryPoint": null,
									"id": 1381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1383": {
									"entryPoint": null,
									"id": 1383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_829": {
									"entryPoint": 859,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1481": {
									"entryPoint": 1250,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_413": {
									"entryPoint": 2656,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLpPair_1428": {
									"entryPoint": 1317,
									"id": 1428,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_839": {
									"entryPoint": 1302,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_859": {
									"entryPoint": null,
									"id": 859,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1566": {
									"entryPoint": 1031,
									"id": 1566,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_974": {
									"entryPoint": 2631,
									"id": 974,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1469": {
									"entryPoint": 1704,
									"id": 1469,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_436": {
									"entryPoint": 2722,
									"id": 436,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1522": {
									"entryPoint": 1550,
									"id": 1522,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_898": {
									"entryPoint": 2708,
									"id": 898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9498:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2011:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2023:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2034:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2084:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2089:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2080:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2080:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2093:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2076:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2076:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2064:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2046:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1970:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1981:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1992:4:1",
														"type": ""
													}
												],
												"src": "1900:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"nodeType": "YulIf",
															"src": "2188:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2144:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2155:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"src": "2108:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2432:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:32:1"
															},
															"nodeType": "YulIf",
															"src": "2396:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2505:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2375:6:1",
														"type": ""
													}
												],
												"src": "2299:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2755:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2766:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2748:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2748:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2800:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2785:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2785:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2778:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2839:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2824:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2844:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2888:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2900:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2911:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2896:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2888:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2715:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2729:4:1",
														"type": ""
													}
												],
												"src": "2564:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3099:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3116:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3127:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3109:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3109:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3161:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3166:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3139:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3189:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3200:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:18:1"
																	},
																	{
																		"hexValue": "54726164696e6720616c726561647920656e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3205:25:1",
																		"type": "",
																		"value": "Trading already enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3178:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3178:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3240:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3252:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3263:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3240:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3076:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3090:4:1",
														"type": ""
													}
												],
												"src": "2925:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3332:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3342:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3356:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3359:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3373:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3403:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3409:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3377:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3450:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3452:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3466:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3474:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3462:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3462:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3452:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3430:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:26:1"
															},
															"nodeType": "YulIf",
															"src": "3420:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3561:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3568:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3573:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3564:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3564:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3554:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3554:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3554:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3605:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3608:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3598:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3633:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3636:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3626:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3626:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3626:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3496:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3519:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3527:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3516:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3516:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3493:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:38:1"
															},
															"nodeType": "YulIf",
															"src": "3490:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3312:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3321:6:1",
														"type": ""
													}
												],
												"src": "3277:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3836:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3853:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3864:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3846:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3887:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3898:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3883:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3903:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3876:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3876:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3926:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3942:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3915:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3985:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3997:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3813:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3827:4:1",
														"type": ""
													}
												],
												"src": "3662:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4054:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4078:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4083:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4064:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4104:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4138:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4128:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4022:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4202:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4212:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4223:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4226:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4219:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4219:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4212:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4251:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4253:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4253:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4253:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4243:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4246:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4240:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:10:1"
															},
															"nodeType": "YulIf",
															"src": "4237:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4185:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4188:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4194:3:1",
														"type": ""
													}
												],
												"src": "4154:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4458:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4475:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4486:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4520:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4525:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4498:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4559:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4544:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4564:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4537:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4619:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4630:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4635:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4608:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4608:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4664:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4675:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4652:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4435:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4449:4:1",
														"type": ""
													}
												],
												"src": "4284:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4864:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4881:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4874:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4926:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4911:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4904:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4965:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:18:1"
																	},
																	{
																		"hexValue": "496e76616c6964206e6577206f776e65722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4970:27:1",
																		"type": "",
																		"value": "Invalid new owner address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4943:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4943:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5007:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5019:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5030:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5007:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4841:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4855:4:1",
														"type": ""
													}
												],
												"src": "4690:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5218:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5235:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5228:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5228:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5269:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5280:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5265:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5258:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5308:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5319:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5304:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5324:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5297:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5297:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5297:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5390:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5375:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5395:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5368:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5411:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5423:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5434:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5419:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5419:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5411:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5195:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5209:4:1",
														"type": ""
													}
												],
												"src": "5044:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5640:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5651:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5633:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5674:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5685:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5670:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5690:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5663:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5663:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5713:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5724:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5709:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5709:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5729:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5702:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5702:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5784:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5795:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5780:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5800:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5773:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5814:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5826:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5822:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5814:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5600:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5614:4:1",
														"type": ""
													}
												],
												"src": "5449:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5904:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5914:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5929:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5932:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5914:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5992:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5994:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5994:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5994:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5963:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5956:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5956:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5970:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5977:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5986:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5973:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5973:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5967:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5967:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5953:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5953:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:45:1"
															},
															"nodeType": "YulIf",
															"src": "5943:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5883:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5886:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5892:7:1",
														"type": ""
													}
												],
												"src": "5852:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6071:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6102:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6130:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6135:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6126:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6126:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6116:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6116:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6167:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6170:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6160:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6160:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6160:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6195:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6198:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6188:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6188:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6188:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6091:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:9:1"
															},
															"nodeType": "YulIf",
															"src": "6081:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6222:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6231:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6234:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6227:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6222:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6056:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6059:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6065:1:1",
														"type": ""
													}
												],
												"src": "6025:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6438:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6431:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6472:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6483:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6468:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6488:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6461:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6461:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6511:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6522:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6507:18:1"
																	},
																	{
																		"hexValue": "45786365656473206d6178207472616e73616374696f6e20616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6527:32:1",
																		"type": "",
																		"value": "Exceeds max transaction amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6500:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6500:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6569:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6581:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6592:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6577:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6569:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6398:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6412:4:1",
														"type": ""
													}
												],
												"src": "6247:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6780:173:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6790:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6831:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6842:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6827:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6847:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6820:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:1"
																	},
																	{
																		"hexValue": "54726164696e67206e6f742079657420656e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6886:25:1",
																		"type": "",
																		"value": "Trading not yet enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6859:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6859:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6859:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6921:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6933:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6944:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6921:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6757:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6771:4:1",
														"type": ""
													}
												],
												"src": "6606:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7087:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7097:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7109:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7120:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7105:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7097:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7139:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7154:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7170:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7175:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7166:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7166:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7179:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7162:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7162:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7150:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7132:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7203:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7214:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7199:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7219:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7192:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7192:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7048:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7059:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7067:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7078:4:1",
														"type": ""
													}
												],
												"src": "6958:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7315:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7361:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7373:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7363:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7363:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7363:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7336:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7345:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7332:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7357:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7328:32:1"
															},
															"nodeType": "YulIf",
															"src": "7325:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7386:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7405:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7399:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7399:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7390:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7477:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7480:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7470:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7458:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7451:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7451:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7444:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7444:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7434:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7427:40:1"
															},
															"nodeType": "YulIf",
															"src": "7424:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7493:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7503:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7281:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7292:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7304:6:1",
														"type": ""
													}
												],
												"src": "7237:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7693:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7710:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7721:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7703:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7744:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7755:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7740:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7760:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7733:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7733:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7783:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7779:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7799:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7772:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7854:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7865:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7850:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7850:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7870:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7843:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7888:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7900:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7896:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7888:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7670:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7684:4:1",
														"type": ""
													}
												],
												"src": "7519:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8100:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8117:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8128:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8110:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8162:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8147:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8167:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8140:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8140:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8201:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8186:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8206:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8179:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8179:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8247:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8259:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8270:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8255:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8255:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8247:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8077:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8091:4:1",
														"type": ""
													}
												],
												"src": "7926:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8458:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8475:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8486:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8468:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8468:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8520:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8505:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8525:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8498:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8498:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8498:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8559:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8544:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8564:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8537:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8537:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8619:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8630:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8615:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8635:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8652:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8664:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8675:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8660:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8652:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8435:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8449:4:1",
														"type": ""
													}
												],
												"src": "8284:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8864:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8881:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8892:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8874:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8874:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8915:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8926:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8911:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8931:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8904:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8965:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8950:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8970:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8943:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8943:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9025:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9036:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9021:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9021:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9041:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9014:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9056:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9068:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9079:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9064:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9056:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8841:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8855:4:1",
														"type": ""
													}
												],
												"src": "8690:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9268:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9285:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9278:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9278:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9278:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9330:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9315:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9335:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9308:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9308:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9308:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9369:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9354:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9374:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9347:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9429:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9440:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9445:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9418:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9418:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9463:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9475:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9486:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9471:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9463:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9245:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9259:4:1",
														"type": ""
													}
												],
												"src": "9094:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Trading already enabled\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid new owner address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Exceeds max transaction amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Trading not yet enabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA35F942A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA35F942A EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x452ED4F1 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x99D386 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x165 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH2 0x2B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xDE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7A JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x12C PUSH2 0x516 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x169 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E6720616C726561647920656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0xF40 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x396 SWAP1 PUSH2 0xF40 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FB DUP2 DUP6 DUP6 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x469 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x473 DUP4 DUP4 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x47D DUP4 DUP4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x487 DUP4 DUP4 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x492 DUP5 DUP5 DUP5 PUSH2 0xA47 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP PUSH1 0x1 PUSH1 0x6 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3FB SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x4DD SWAP1 DUP8 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x514 PUSH2 0xA60 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x36A SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x603 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x734 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x670 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH2 0x67A DUP4 DUP4 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x684 DUP4 DUP4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x68E DUP4 DUP4 PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x698 DUP4 DUP4 PUSH2 0xA94 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP PUSH1 0x1 PUSH1 0x6 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E6577206F776E6572206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0xAA2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH2 0x86F PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E73616374696F6E20616D6F756E740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x8EA JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206E6F742079657420656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x945 DUP4 PUSH1 0x5 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x94F SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xFDC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 PUSH1 0x64 PUSH2 0x9EE DUP4 PUSH1 0x2 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x9C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xA94 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xA24 DUP4 PUSH1 0x1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x9C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xA55 DUP6 DUP3 DUP6 PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x603 DUP6 DUP6 DUP6 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x514 PUSH1 0x0 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FB DUP2 DUP6 DUP6 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9C8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x9C8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x734 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD3B SWAP1 DUP5 SWAP1 PUSH2 0xF90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD87 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE13 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xDF7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6C DUP4 PUSH2 0xE34 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE98 DUP5 PUSH2 0xE34 JUMP JUMPDEST SWAP3 POP PUSH2 0xEA6 PUSH1 0x20 DUP6 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED1 DUP3 PUSH2 0xE34 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP PUSH2 0xF02 PUSH1 0x20 DUP5 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF54 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF74 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0xF7A JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFD7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE DUP11 0xA8 0xE4 REVERT 0x26 0x4B 0xA7 PUSH16 0xC1DA284C22559AD50C9541CF03AA3BD PUSH3 0x87A484 0xC5 PUSH10 0x2864736F6C6343000812 STOP CALLER ",
							"sourceMap": "34759:2624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35504:137;;;:::i;:::-;;24237:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26514:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;26514:197:0;1004:187:1;25325:106:0;25412:12;;25325:106;;;1342:25:1;;;1330:2;1315:18;25325:106:0;1196:177:1;36241:316:0;;;;;;:::i;:::-;;:::i;25174:91::-;;;25256:2;1853:36:1;;1841:2;1826:18;25174:91:0;1711:184:1;27954:236:0;;;;;;:::i;:::-;;:::i;34951:21::-;;;;;-1:-1:-1;;;;;34951:21:0;;;;;;-1:-1:-1;;;;;2064:32:1;;;2046:51;;2034:2;2019:18;34951:21:0;1900:203:1;25489:125:0;;;;;;:::i;:::-;-1:-1:-1;;;;;25589:18:0;25563:7;25589:18;;;;;;;;;;;;25489:125;35844:97;;;:::i;34978:30::-;;;;;-1:-1:-1;;;;;34978:30:0;;;13101:85;13173:6;;-1:-1:-1;;;;;13173:6:0;13101:85;;24448:102;;;:::i;35410:88::-;;;;;;:::i;:::-;;:::i;28677:429::-;;;;;;:::i;:::-;;:::i;35947:288::-;;;;;;:::i;:::-;;:::i;26057:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;26172:18:0;;;26146:7;26172:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;26057:149;35647:191;;;;;;:::i;:::-;;:::i;35504:137::-;13173:6;;-1:-1:-1;;;;;13173:6:0;11889:10;13313:23;13305:68;;;;-1:-1:-1;;;13305:68:0;;;;;;;:::i;:::-;;;;;;;;;35565:12:::1;::::0;-1:-1:-1;;;35565:12:0;::::1;;;35564:13;35556:49;;;::::0;-1:-1:-1;;;35556:49:0;;3127:2:1;35556:49:0::1;::::0;::::1;3109:21:1::0;3166:2;3146:18;;;3139:30;3205:25;3185:18;;;3178:53;3248:18;;35556:49:0::1;2925:347:1::0;35556:49:0::1;35615:12;:19:::0;;-1:-1:-1;;;;35615:19:0::1;-1:-1:-1::0;;;35615:19:0::1;::::0;;35504:137::o;24237:98::-;24291:13;24323:5;24316:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24237:98;:::o;26514:197::-;26597:4;11889:10;26651:32;11889:10;26667:7;26676:6;26651:8;:32::i;:::-;26700:4;26693:11;;;26514:197;;;;;:::o;36241:316::-;36343:4;1836:1;2417:7;;:19;2409:63;;;;-1:-1:-1;;;2409:63:0;;3864:2:1;2409:63:0;;;3846:21:1;3903:2;3883:18;;;3876:30;3942:33;3922:18;;;3915:61;3993:18;;2409:63:0;3662:355:1;2409:63:0;1836:1;2547:7;:18;36359:19:::1;36371:6:::0;36359:11:::1;:19::i;:::-;36388:28;36405:2;36409:6;36388:16;:28::i;:::-;36426:20;36435:2;36439:6;36426:8;:20::i;:::-;36456:27;36472:2;36476:6;36456:15;:27::i;:::-;36493:36;36512:4;36518:2;36522:6;36493:18;:36::i;:::-;;36546:4;36539:11;;1793:1:::0;2720:7;:22;36241:316;;-1:-1:-1;;;36241:316:0:o;27954:236::-;11889:10;28042:4;28121:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;28121:27:0;;;;;;;;;;28042:4;;11889:10;28096:66;;11889:10;;28121:27;;:40;;28151:10;;28121:40;:::i;:::-;28096:8;:66::i;35844:97::-;13173:6;;-1:-1:-1;;;;;13173:6:0;11889:10;13313:23;13305:68;;;;-1:-1:-1;;;13305:68:0;;;;;;;:::i;:::-;35909:25:::1;:23;:25::i;:::-;35844:97::o:0;24448:102::-;24504:13;24536:7;24529:14;;;;;:::i;35410:88::-;13173:6;;-1:-1:-1;;;;;13173:6:0;11889:10;13313:23;13305:68;;;;-1:-1:-1;;;13305:68:0;;;;;;;:::i;:::-;35475:6:::1;:16:::0;;-1:-1:-1;;;;;;35475:16:0::1;-1:-1:-1::0;;;;;35475:16:0;;;::::1;::::0;;;::::1;::::0;;35410:88::o;28677:429::-;11889:10;28770:4;28851:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;28851:27:0;;;;;;;;;;28770:4;;11889:10;28896:35;;;;28888:85;;;;-1:-1:-1;;;28888:85:0;;4486:2:1;28888:85:0;;;4468:21:1;4525:2;4505:18;;;4498:30;4564:34;4544:18;;;4537:62;-1:-1:-1;;;4615:18:1;;;4608:35;4660:19;;28888:85:0;4284:401:1;28888:85:0;29007:60;29016:5;29023:7;29051:15;29032:16;:34;29007:8;:60::i;:::-;-1:-1:-1;29095:4:0;;28677:429;-1:-1:-1;;;;28677:429:0:o;35947:288::-;36031:4;1836:1;2417:7;;:19;2409:63;;;;-1:-1:-1;;;2409:63:0;;3864:2:1;2409:63:0;;;3846:21:1;3903:2;3883:18;;;3876:30;3942:33;3922:18;;;3915:61;3993:18;;2409:63:0;3662:355:1;2409:63:0;1836:1;2547:7;:18;36047:19:::1;36059:6:::0;36047:11:::1;:19::i;:::-;36076:28;36093:2;36097:6;36076:16;:28::i;:::-;36114:20;36123:2;36127:6;36114:8;:20::i;:::-;36144:27;36160:2;36164:6;36144:15;:27::i;:::-;36181:26;36196:2;36200:6;36181:14;:26::i;:::-;;36224:4;36217:11;;1793:1:::0;2720:7;:22;35947:288;;-1:-1:-1;;35947:288:0:o;35647:191::-;13173:6;;-1:-1:-1;;;;;13173:6:0;11889:10;13313:23;13305:68;;;;-1:-1:-1;;;13305:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;35736:22:0;::::1;35728:60;;;::::0;-1:-1:-1;;;35728:60:0;;4892:2:1;35728:60:0::1;::::0;::::1;4874:21:1::0;4931:2;4911:18;;;4904:30;4970:27;4950:18;;;4943:55;5015:18;;35728:60:0::1;4690:349:1::0;35728:60:0::1;35798:33;35822:8;35798:23;:33::i;:::-;35647:191:::0;:::o;32204:370::-;-1:-1:-1;;;;;32335:19:0;;32327:68;;;;-1:-1:-1;;;32327:68:0;;5246:2:1;32327:68:0;;;5228:21:1;5285:2;5265:18;;;5258:30;5324:34;5304:18;;;5297:62;-1:-1:-1;;;5375:18:1;;;5368:34;5419:19;;32327:68:0;5044:400:1;32327:68:0;-1:-1:-1;;;;;32413:21:0;;32405:68;;;;-1:-1:-1;;;32405:68:0;;5651:2:1;32405:68:0;;;5633:21:1;5690:2;5670:18;;;5663:30;5729:34;5709:18;;;5702:62;-1:-1:-1;;;5780:18:1;;;5773:32;5822:19;;32405:68:0;5449:398:1;32405:68:0;-1:-1:-1;;;;;32484:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;32535:32;;1342:25:1;;;32535:32:0;;1315:18:1;32535:32:0;;;;;;;32204:370;;;:::o;36563:239::-;36674:3;36643:27;35053:6;35107:1;36643:27;:::i;:::-;36642:35;;;;:::i;:::-;36632:6;:45;;36624:88;;;;-1:-1:-1;;;36624:88:0;;6449:2:1;36624:88:0;;;6431:21:1;6488:2;6468:18;;;6461:30;6527:32;6507:18;;;6500:60;6577:18;;36624:88:0;6247:354:1;36624:88:0;36730:12;;-1:-1:-1;;;36730:12:0;;;;;:37;;-1:-1:-1;13173:6:0;;-1:-1:-1;;;;;13173:6:0;36746:10;:21;36730:37;36722:73;;;;-1:-1:-1;;;36722:73:0;;6808:2:1;36722:73:0;;;6790:21:1;6847:2;6827:18;;;6820:30;6886:25;6866:18;;;6859:53;6929:18;;36722:73:0;6606:347:1;36808:175:0;36881:24;36923:3;36909:10;:6;36918:1;36909:10;:::i;:::-;36908:18;;;;:::i;:::-;36936:9;;:40;;-1:-1:-1;;;36936:40:0;;-1:-1:-1;;;;;7150:32:1;;;36936:40:0;;;7132:51:1;7199:18;;;7192:34;;;36881:45:0;;-1:-1:-1;36936:9:0;;;:18;;7105::1;;36936:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;36871:112;36808:175;;:::o;36989:205::-;37058:6;;-1:-1:-1;;;;;37058:6:0;:20;37054:134;;37094:16;37128:3;37114:10;:6;37123:1;37114:10;:::i;:::-;37113:18;;;;:::i;:::-;37160:6;;37094:37;;-1:-1:-1;37145:32:0;;-1:-1:-1;;;;;37160:6:0;37094:37;37145:14;:32::i;37054:134::-;36989:205;;:::o;37200:181::-;37272:23;37313:3;37299:10;:6;37308:1;37299:10;:::i;:::-;37298:18;;;;:::i;:::-;37341:15;;37272:44;;-1:-1:-1;37326:48:0;;-1:-1:-1;;;;;37341:15:0;37272:44;37326:14;:48::i;27273:286::-;27400:4;11889:10;27456:38;27472:4;11889:10;27487:6;27456:15;:38::i;:::-;27504:27;27514:4;27520:2;27524:6;27504:9;:27::i;13733:101::-;13173:6;;-1:-1:-1;;;;;13173:6:0;11889:10;13313:23;13305:68;;;;-1:-1:-1;;;13305:68:0;;;;;;;:::i;:::-;13797:30:::1;13824:1;13797:18;:30::i;25810:189::-:0;25889:4;11889:10;25943:28;11889:10;25960:2;25964:6;25943:9;:28::i;13983:198::-;13173:6;;-1:-1:-1;;;;;13173:6:0;11889:10;13313:23;13305:68;;;;-1:-1:-1;;;13305:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;14071:22:0;::::1;14063:73;;;::::0;-1:-1:-1;;;14063:73:0;;7721:2:1;14063:73:0::1;::::0;::::1;7703:21:1::0;7760:2;7740:18;;;7733:30;7799:34;7779:18;;;7772:62;-1:-1:-1;;;7850:18:1;;;7843:36;7896:19;;14063:73:0::1;7519:402:1::0;14063:73:0::1;14146:28;14165:8;14146:18;:28::i;32851:441::-:0;-1:-1:-1;;;;;26172:18:0;;;32981:24;26172:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;33047:37:0;;33043:243;;33128:6;33108:16;:26;;33100:68;;;;-1:-1:-1;;;33100:68:0;;8128:2:1;33100:68:0;;;8110:21:1;8167:2;8147:18;;;8140:30;8206:31;8186:18;;;8179:59;8255:18;;33100:68:0;7926:353:1;33100:68:0;33210:51;33219:5;33226:7;33254:6;33235:16;:25;33210:8;:51::i;29569:651::-;-1:-1:-1;;;;;29695:18:0;;29687:68;;;;-1:-1:-1;;;29687:68:0;;8486:2:1;29687:68:0;;;8468:21:1;8525:2;8505:18;;;8498:30;8564:34;8544:18;;;8537:62;-1:-1:-1;;;8615:18:1;;;8608:35;8660:19;;29687:68:0;8284:401:1;29687:68:0;-1:-1:-1;;;;;29773:16:0;;29765:64;;;;-1:-1:-1;;;29765:64:0;;8892:2:1;29765:64:0;;;8874:21:1;8931:2;8911:18;;;8904:30;8970:34;8950:18;;;8943:62;-1:-1:-1;;;9021:18:1;;;9014:33;9064:19;;29765:64:0;8690:399:1;29765:64:0;-1:-1:-1;;;;;29911:15:0;;29889:19;29911:15;;;;;;;;;;;29944:21;;;;29936:72;;;;-1:-1:-1;;;29936:72:0;;9296:2:1;29936:72:0;;;9278:21:1;9335:2;9315:18;;;9308:30;9374:34;9354:18;;;9347:62;-1:-1:-1;;;9425:18:1;;;9418:36;9471:19;;29936:72:0;9094:402:1;29936:72:0;-1:-1:-1;;;;;30042:15:0;;;:9;:15;;;;;;;;;;;30060:20;;;30042:38;;30100:13;;;;;;;;:23;;30074:6;;30042:9;30100:23;;30074:6;;30100:23;:::i;:::-;;;;;;;;30154:2;-1:-1:-1;;;;;30139:26:0;30148:4;-1:-1:-1;;;;;30139:26:0;;30158:6;30139:26;;;;1342:25:1;;1330:2;1315:18;;1196:177;30139:26:0;;;;;;;;30176:37;33876:121;14335:187;14427:6;;;-1:-1:-1;;;;;14443:17:0;;;-1:-1:-1;;;;;;14443:17:0;;;;;;;14475:40;;14427:6;;;14443:17;14427:6;;14475:40;;14408:16;;14475:40;14398:124;14335:187;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:1:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:356::-;2766:2;2748:21;;;2785:18;;;2778:30;2844:34;2839:2;2824:18;;2817:62;2911:2;2896:18;;2564:356::o;3277:380::-;3356:1;3352:12;;;;3399;;;3420:61;;3474:4;3466:6;3462:17;3452:27;;3420:61;3527:2;3519:6;3516:14;3496:18;3493:38;3490:161;;3573:10;3568:3;3564:20;3561:1;3554:31;3608:4;3605:1;3598:15;3636:4;3633:1;3626:15;3490:161;;3277:380;;;:::o;4022:127::-;4083:10;4078:3;4074:20;4071:1;4064:31;4114:4;4111:1;4104:15;4138:4;4135:1;4128:15;4154:125;4219:9;;;4240:10;;;4237:36;;;4253:18;;:::i;5852:168::-;5925:9;;;5956;;5973:15;;;5967:22;;5953:37;5943:71;;5994:18;;:::i;6025:217::-;6065:1;6091;6081:132;;6135:10;6130:3;6126:20;6123:1;6116:31;6170:4;6167:1;6160:15;6198:4;6195:1;6188:15;6081:132;-1:-1:-1;6227:9:1;;6025:217::o;7237:277::-;7304:6;7357:2;7345:9;7336:7;7332:23;7328:32;7325:52;;;7373:1;7370;7363:12;7325:52;7405:9;7399:16;7458:5;7451:13;7444:21;7437:5;7434:32;7424:60;;7480:1;7477;7470:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "829600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24673",
								"balanceOf(address)": "2651",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26944",
								"enableTrade()": "28687",
								"increaseAllowance(address,uint256)": "infinite",
								"lpPair()": "2426",
								"marketingWallet()": "2382",
								"name()": "infinite",
								"owner()": "2398",
								"renounceOwnership()": "infinite",
								"setLpPair(address)": "26733",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_checkMaxTx(uint256)": "infinite",
								"_tokenLP(address,uint256)": "infinite",
								"_tokenMarketing(address,uint256)": "infinite",
								"_tokenReflection(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34759,
									"end": 37383,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34867,
									"end": 34944,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 34867,
									"end": 34944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34867,
									"end": 34944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 34867,
									"end": 34944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34901,
									"end": 34943,
									"name": "PUSH",
									"source": 0,
									"value": "49D5C2BDFFAC6CE2BFDB6640F4F80F226BC10BAB"
								},
								{
									"begin": 34867,
									"end": 34944,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 34867,
									"end": 34944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34867,
									"end": 34944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35114,
									"end": 35147,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 35114,
									"end": 35147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35114,
									"end": 35147,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 35114,
									"end": 35147,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 35114,
									"end": 35147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35114,
									"end": 35147,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 35154,
									"end": 35404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "4D6F6E65792041766178205265666C656374696F6E20546F6B656E0000000000"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "PUSH",
									"source": 0,
									"value": "4D6F6E6579417661785265666C656374696F6E73000000000000000000000000"
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24133,
									"end": 24138,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24130,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24125,
									"end": 24138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24125,
									"end": 24138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 24148,
									"end": 24155,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24158,
									"end": 24165,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24155,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 24148,
									"end": 24165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24148,
									"end": 24165,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24059,
									"end": 24172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12986,
									"end": 13018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13005,
									"end": 13017,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13005,
									"end": 13015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 13005,
									"end": 13015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13005,
									"end": 13015,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 13005,
									"end": 13017,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13005,
									"end": 13017,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 13005,
									"end": 13017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13005,
									"end": 13017,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13005,
									"end": 13017,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12986,
									"end": 13004,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 12986,
									"end": 13018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12986,
									"end": 13018,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 12986,
									"end": 13018,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1793,
									"end": 1794,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1898,
									"end": 1905,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1898,
									"end": 1920,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35277,
									"end": 35292,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 35277,
									"end": 35311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35277,
									"end": 35311,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 35277,
									"end": 35311,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 35277,
									"end": 35311,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 35277,
									"end": 35311,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 35277,
									"end": 35311,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 35277,
									"end": 35311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35277,
									"end": 35311,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 35321,
									"end": 35346,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 35327,
									"end": 35337,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 35339,
									"end": 35345,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 35321,
									"end": 35326,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 35321,
									"end": 35346,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 35321,
									"end": 35346,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 35321,
									"end": 35346,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35154,
									"end": 35404,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11810,
									"end": 11906,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11810,
									"end": 11906,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11889,
									"end": 11899,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11889,
									"end": 11899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11810,
									"end": 11906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14335,
									"end": 14522,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 14335,
									"end": 14522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14475,
									"end": 14515,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14475,
									"end": 14515,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14443,
									"end": 14460,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14427,
									"end": 14433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14475,
									"end": 14515,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 14475,
									"end": 14515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14408,
									"end": 14424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14408,
									"end": 14424,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14475,
									"end": 14515,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 14398,
									"end": 14522,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14335,
									"end": 14522,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14335,
									"end": 14522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30496,
									"end": 30885,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30496,
									"end": 30885,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 30579,
									"end": 30600,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30579,
									"end": 30600,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3232,
									"end": 3234,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3214,
									"end": 3235,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3271,
									"end": 3273,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3251,
									"end": 3269,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3251,
									"end": 3269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3269,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3274,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3310,
									"end": 3343,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 3290,
									"end": 3308,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3290,
									"end": 3308,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3283,
									"end": 3344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3379,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3361,
									"end": 3379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 30571,
									"end": 30636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30723,
									"end": 30729,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30707,
									"end": 30719,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 30707,
									"end": 30729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30707,
									"end": 30729,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30748,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30757,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30761,
									"end": 30767,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30761,
									"end": 30767,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30748,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30761,
									"end": 30767,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30761,
									"end": 30767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 30739,
									"end": 30767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30739,
									"end": 30767,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3763,
									"end": 3788,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3763,
									"end": 3788,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3763,
									"end": 3788,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30799,
									"end": 30800,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30799,
									"end": 30800,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3736,
									"end": 3754,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30782,
									"end": 30819,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 30496,
									"end": 30885,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30496,
									"end": 30885,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30496,
									"end": 30885,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 33876,
									"end": 33997,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 33876,
									"end": 33997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33876,
									"end": 33997,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33876,
									"end": 33997,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33876,
									"end": 33997,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33876,
									"end": 33997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1497,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 952,
									"end": 1497,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1491,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1043,
									"end": 1491,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1121,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1160,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1146,
									"end": 1165,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1232,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1218,
									"end": 1228,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1214,
									"end": 1233,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1212,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1207,
									"end": 1234,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1201,
									"end": 1205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1197,
									"end": 1235,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1270,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1271,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1248,
									"end": 1295,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1248,
									"end": 1295,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1248,
									"end": 1295,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1289,
									"end": 1293,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1248,
									"end": 1295,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1248,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1344,
									"end": 1346,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1339,
									"end": 1342,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1335,
									"end": 1347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1328,
									"end": 1348,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1326,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1349,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1349,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1349,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1419,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1410,
									"end": 1415,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1407,
									"end": 1420,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1479,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1444,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1432,
									"end": 1445,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1399,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 1406,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 1406,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 1406,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1497,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1497,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1497,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1673,
									"end": 3025,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1673,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1803,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1803,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1815,
									"end": 1845,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1845,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1868,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1812,
									"end": 1868,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1848,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1848,
									"end": 1866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1866,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1848,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1967,
									"end": 1973,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 1965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1959,
									"end": 1963,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1953,
									"end": 1964,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 1965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1927,
									"end": 1965,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1927,
									"end": 1965,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1927,
									"end": 1965,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1877,
									"end": 1974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1974,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1877,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2033,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2095,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2110,
									"end": 2111,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2105,
									"end": 2768,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2105,
									"end": 2768,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2105,
									"end": 2768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2105,
									"end": 2768,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2812,
									"end": 2813,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2835,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2915,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2826,
									"end": 2915,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2881,
									"end": 2900,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2900,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2875,
									"end": 2901,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2915,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2826,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1630,
									"end": 1631,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1626,
									"end": 1637,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1637,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1637,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1622,
									"end": 1646,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1618,
									"end": 1647,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1608,
									"end": 1648,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 1655,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1661,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1661,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1662,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2928,
									"end": 3009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2928,
									"end": 3009,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 3019,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2075,
									"end": 3019,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2105,
									"end": 2768,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2105,
									"end": 2768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2141,
									"end": 2161,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2161,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2161,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2271,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2267,
									"end": 2281,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2381,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2381,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2381,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2382,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2383,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2383,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2454,
									"end": 2481,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2454,
									"end": 2481,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2454,
									"end": 2481,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2454,
									"end": 2481,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2422,
									"end": 2423,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2259,
									"end": 2495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2263,
									"end": 2266,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2523,
									"end": 2529,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2514,
									"end": 2521,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2511,
									"end": 2530,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2709,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2508,
									"end": 2709,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2603,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2603,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2603,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2578,
									"end": 2604,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2667,
									"end": 2668,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2663,
									"end": 2677,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2663,
									"end": 2677,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2663,
									"end": 2677,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2682,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2659,
									"end": 2683,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2655,
									"end": 2692,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2651,
									"end": 2693,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2621,
									"end": 2695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2621,
									"end": 2695,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2709,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2508,
									"end": 2709,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2755,
									"end": 2756,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2739,
									"end": 2753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2753,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2739,
									"end": 2753,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2757,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2758,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2722,
									"end": 2758,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1673,
									"end": 3025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3612,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 3390,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3455,
									"end": 3464,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3455,
									"end": 3464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3455,
									"end": 3464,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3486,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3486,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3486,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3606,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3473,
									"end": 3606,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3528,
									"end": 3538,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3523,
									"end": 3526,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3519,
									"end": 3539,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3509,
									"end": 3540,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3567,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3553,
									"end": 3568,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3591,
									"end": 3595,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3588,
									"end": 3589,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3596,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3473,
									"end": 3606,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3473,
									"end": 3606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3612,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3612,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3612,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3612,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3390,
									"end": 3612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3617,
									"end": 3794,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3617,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34759,
									"end": 37383,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f08aa8e4fd264ba76f0c1da284c22559ad50c9541cf03aa3bd6287a484c5692864736f6c63430008120033",
									".code": [
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "A35F942A"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "A35F942A"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "75F0A874"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "452ED4F1"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "99D386"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34759,
											"end": 37383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35504,
											"end": 35641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24237,
											"end": 24335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24237,
											"end": 24335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26514,
											"end": 26711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26514,
											"end": 26711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25412,
											"end": 25424,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25412,
											"end": 25424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25325,
											"end": 25431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 36241,
											"end": 36557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 36241,
											"end": 36557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25256,
											"end": 25258,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25174,
											"end": 25265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 27954,
											"end": 28190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27954,
											"end": 28190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34951,
											"end": 34972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1900,
											"end": 2103,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25489,
											"end": 25614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25589,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25489,
											"end": 25614,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35844,
											"end": 35941,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 35844,
											"end": 35941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35844,
											"end": 35941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35844,
											"end": 35941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 35844,
											"end": 35941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34978,
											"end": 35008,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13101,
											"end": 13186,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13101,
											"end": 13186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13101,
											"end": 13186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13101,
											"end": 13186,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24448,
											"end": 24550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35410,
											"end": 35498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35410,
											"end": 35498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28677,
											"end": 29106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28677,
											"end": 29106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 35947,
											"end": 36235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 35947,
											"end": 36235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 26057,
											"end": 26206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26146,
											"end": 26153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35647,
											"end": 35838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 35647,
											"end": 35838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35504,
											"end": 35641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13305,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35565,
											"end": 35577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35565,
											"end": 35577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35565,
											"end": 35577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35565,
											"end": 35577,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35565,
											"end": 35577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35565,
											"end": 35577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35564,
											"end": 35577,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35556,
											"end": 35605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35556,
											"end": 35605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3127,
											"end": 3129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35556,
											"end": 35605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "54726164696E6720616C726561647920656E61626C6564000000000000000000"
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2925,
											"end": 3272,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35615,
											"end": 35634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35615,
											"end": 35634,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35615,
											"end": 35634,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35634,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35504,
											"end": 35641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24291,
											"end": 24304,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24323,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24316,
											"end": 24328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24316,
											"end": 24328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24316,
											"end": 24328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24237,
											"end": 24335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26597,
											"end": 26601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26651,
											"end": 26683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26667,
											"end": 26674,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26676,
											"end": 26682,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26651,
											"end": 26659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 26651,
											"end": 26683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26651,
											"end": 26683,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 26651,
											"end": 26683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26700,
											"end": 26704,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26693,
											"end": 26704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26514,
											"end": 26711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36343,
											"end": 36347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3905,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3662,
											"end": 4017,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2547,
											"end": 2554,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36359,
											"end": 36378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 36371,
											"end": 36377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36359,
											"end": 36370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 36359,
											"end": 36378,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36359,
											"end": 36378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 36359,
											"end": 36378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36388,
											"end": 36416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 36405,
											"end": 36407,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36409,
											"end": 36415,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36388,
											"end": 36404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 36388,
											"end": 36416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36388,
											"end": 36416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 36388,
											"end": 36416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36426,
											"end": 36446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 36435,
											"end": 36437,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36439,
											"end": 36445,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36426,
											"end": 36434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36426,
											"end": 36446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36426,
											"end": 36446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 36426,
											"end": 36446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 36472,
											"end": 36474,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36482,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 36456,
											"end": 36483,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 36456,
											"end": 36483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36493,
											"end": 36529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 36512,
											"end": 36516,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36518,
											"end": 36520,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36522,
											"end": 36528,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36493,
											"end": 36511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 36493,
											"end": 36529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36493,
											"end": 36529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 36493,
											"end": 36529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36493,
											"end": 36529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36546,
											"end": 36550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36539,
											"end": 36550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36539,
											"end": 36550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2720,
											"end": 2727,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2720,
											"end": 2742,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36241,
											"end": 36557,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36241,
											"end": 36557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27954,
											"end": 28190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28042,
											"end": 28046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28042,
											"end": 28046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28042,
											"end": 28046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28096,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 28096,
											"end": 28162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28161,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28121,
											"end": 28161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28121,
											"end": 28161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28096,
											"end": 28104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 28096,
											"end": 28162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35844,
											"end": 35941,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 35844,
											"end": 35941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13305,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35909,
											"end": 35934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 35909,
											"end": 35932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 35909,
											"end": 35934,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35909,
											"end": 35934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 35909,
											"end": 35934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35844,
											"end": 35941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24448,
											"end": 24550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24517,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24536,
											"end": 24543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24529,
											"end": 24543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24529,
											"end": 24543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 35410,
											"end": 35498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13305,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35475,
											"end": 35491,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35475,
											"end": 35491,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28862,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28851,
											"end": 28878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4486,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4527,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4598,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 4679,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4660,
											"end": 4679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4284,
											"end": 4685,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28888,
											"end": 28973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29007,
											"end": 29067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 29016,
											"end": 29021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29023,
											"end": 29030,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29051,
											"end": 29066,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29032,
											"end": 29048,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29032,
											"end": 29066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29007,
											"end": 29015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 29007,
											"end": 29067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29007,
											"end": 29067,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 29007,
											"end": 29067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29095,
											"end": 29099,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29095,
											"end": 29099,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28677,
											"end": 29106,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28677,
											"end": 29106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36031,
											"end": 36035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3864,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3905,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3662,
											"end": 4017,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2409,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2547,
											"end": 2554,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36047,
											"end": 36066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 36059,
											"end": 36065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36047,
											"end": 36058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 36047,
											"end": 36066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36047,
											"end": 36066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 36047,
											"end": 36066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36076,
											"end": 36104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 36093,
											"end": 36095,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36097,
											"end": 36103,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36076,
											"end": 36092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 36076,
											"end": 36104,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36076,
											"end": 36104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 36076,
											"end": 36104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36114,
											"end": 36134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 36123,
											"end": 36125,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36127,
											"end": 36133,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36114,
											"end": 36122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36114,
											"end": 36134,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36114,
											"end": 36134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 36114,
											"end": 36134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 36160,
											"end": 36162,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36170,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 36144,
											"end": 36171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 36144,
											"end": 36171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36181,
											"end": 36207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 36196,
											"end": 36198,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36206,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36181,
											"end": 36195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 36181,
											"end": 36207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36181,
											"end": 36207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 36181,
											"end": 36207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36181,
											"end": 36207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36224,
											"end": 36228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36217,
											"end": 36228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36217,
											"end": 36228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2720,
											"end": 2727,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2720,
											"end": 2742,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35947,
											"end": 36235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35947,
											"end": 36235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13305,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35736,
											"end": 35758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35736,
											"end": 35758,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35728,
											"end": 35788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35728,
											"end": 35788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35728,
											"end": 35788,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35728,
											"end": 35788,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4933,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 4997,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964206E6577206F776E6572206164647265737300000000000000"
										},
										{
											"begin": 4950,
											"end": 4968,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4950,
											"end": 4968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4998,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5015,
											"end": 5033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4690,
											"end": 5039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 35728,
											"end": 35788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 35822,
											"end": 35830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 35798,
											"end": 35831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 35798,
											"end": 35831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35647,
											"end": 35838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32335,
											"end": 32354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32335,
											"end": 32354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5044,
											"end": 5444,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 32327,
											"end": 32395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32413,
											"end": 32434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32413,
											"end": 32434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5651,
											"end": 5653,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5633,
											"end": 5654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5692,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5763,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5841,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5822,
											"end": 5841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5449,
											"end": 5847,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 32405,
											"end": 32473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32484,
											"end": 32520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32535,
											"end": 32567,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32204,
											"end": 32574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36563,
											"end": 36802,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 36563,
											"end": 36802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36674,
											"end": 36677,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36643,
											"end": 36670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35053,
											"end": 35059,
											"name": "PUSH",
											"source": 0,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 35107,
											"end": 35108,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36643,
											"end": 36670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 36643,
											"end": 36670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36643,
											"end": 36670,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 36643,
											"end": 36670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36642,
											"end": 36677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36642,
											"end": 36677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36642,
											"end": 36677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36642,
											"end": 36677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 36642,
											"end": 36677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36642,
											"end": 36677,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 36642,
											"end": 36677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36632,
											"end": 36638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36632,
											"end": 36677,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36632,
											"end": 36677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6488,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "PUSH",
											"source": 1,
											"value": "45786365656473206D6178207472616E73616374696F6E20616D6F756E740000"
										},
										{
											"begin": 6507,
											"end": 6525,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6507,
											"end": 6525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6247,
											"end": 6601,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 36624,
											"end": 36712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36742,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 36730,
											"end": 36742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36730,
											"end": 36742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36742,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36742,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 36730,
											"end": 36742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 36730,
											"end": 36767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36746,
											"end": 36756,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36746,
											"end": 36767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36767,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 36730,
											"end": 36767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6911,
											"name": "PUSH",
											"source": 1,
											"value": "54726164696E67206E6F742079657420656E61626C6564000000000000000000"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6859,
											"end": 6912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36722,
											"end": 36795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6606,
											"end": 6953,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36808,
											"end": 36983,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 36808,
											"end": 36983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36881,
											"end": 36905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36923,
											"end": 36926,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 36909,
											"end": 36919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 36909,
											"end": 36915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36918,
											"end": 36919,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 36909,
											"end": 36919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 36909,
											"end": 36919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36909,
											"end": 36919,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 36909,
											"end": 36919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36908,
											"end": 36926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36908,
											"end": 36926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36908,
											"end": 36926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36908,
											"end": 36926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 36908,
											"end": 36926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36908,
											"end": 36926,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36908,
											"end": 36926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36945,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 36936,
											"end": 36945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7182,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7132,
											"end": 7183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 36881,
											"end": 36926,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36881,
											"end": 36926,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36936,
											"end": 36945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36954,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 36936,
											"end": 36954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7105,
											"end": 7123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 36936,
											"end": 36976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36936,
											"end": 36976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36871,
											"end": 36983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36808,
											"end": 36983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36808,
											"end": 36983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36808,
											"end": 36983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36989,
											"end": 37194,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36989,
											"end": 37194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37064,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37058,
											"end": 37064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37058,
											"end": 37064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37054,
											"end": 37188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 37054,
											"end": 37188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37094,
											"end": 37110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37128,
											"end": 37131,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37114,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37114,
											"end": 37120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37123,
											"end": 37124,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37114,
											"end": 37124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 37114,
											"end": 37124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37114,
											"end": 37124,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 37114,
											"end": 37124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37113,
											"end": 37131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37113,
											"end": 37131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37113,
											"end": 37131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37113,
											"end": 37131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 37113,
											"end": 37131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37113,
											"end": 37131,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 37113,
											"end": 37131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37160,
											"end": 37166,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37160,
											"end": 37166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37094,
											"end": 37131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37094,
											"end": 37131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37145,
											"end": 37177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 37145,
											"end": 37177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37160,
											"end": 37166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37094,
											"end": 37131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37145,
											"end": 37159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 37145,
											"end": 37177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37054,
											"end": 37188,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 37054,
											"end": 37188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36989,
											"end": 37194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36989,
											"end": 37194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36989,
											"end": 37194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37200,
											"end": 37381,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 37200,
											"end": 37381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37272,
											"end": 37295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37313,
											"end": 37316,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 37299,
											"end": 37309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 37299,
											"end": 37305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37308,
											"end": 37309,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37299,
											"end": 37309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 37299,
											"end": 37309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37299,
											"end": 37309,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 37299,
											"end": 37309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37298,
											"end": 37316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 37298,
											"end": 37316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37298,
											"end": 37316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37298,
											"end": 37316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 37298,
											"end": 37316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37298,
											"end": 37316,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 37298,
											"end": 37316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37341,
											"end": 37356,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37341,
											"end": 37356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37272,
											"end": 37316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37272,
											"end": 37316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37326,
											"end": 37374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 37326,
											"end": 37374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37341,
											"end": 37356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37272,
											"end": 37316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37326,
											"end": 37340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 37326,
											"end": 37374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27273,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27400,
											"end": 27404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27456,
											"end": 27494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27472,
											"end": 27476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27487,
											"end": 27493,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27456,
											"end": 27471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 27456,
											"end": 27494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27456,
											"end": 27494,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27456,
											"end": 27494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 27514,
											"end": 27518,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27522,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27524,
											"end": 27530,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 27504,
											"end": 27531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13733,
											"end": 13834,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13733,
											"end": 13834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13305,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13824,
											"end": 13825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13797,
											"end": 13815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 13797,
											"end": 13827,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 25810,
											"end": 25999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25889,
											"end": 25893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 25971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 25962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25964,
											"end": 25970,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25943,
											"end": 25952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 25943,
											"end": 25971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13983,
											"end": 14181,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 13983,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13313,
											"end": 13336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13305,
											"end": 13373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 13305,
											"end": 13373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14071,
											"end": 14093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14071,
											"end": 14093,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14063,
											"end": 14136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14063,
											"end": 14136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7723,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14063,
											"end": 14136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7703,
											"end": 7724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7762,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7833,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 7915,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7896,
											"end": 7915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7519,
											"end": 7921,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 14063,
											"end": 14136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 14165,
											"end": 14173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14146,
											"end": 14164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 14146,
											"end": 14174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 33292,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 32851,
											"end": 33292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32981,
											"end": 33005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26172,
											"end": 26199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33047,
											"end": 33084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33084,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33043,
											"end": 33286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 33043,
											"end": 33286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33128,
											"end": 33134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33108,
											"end": 33134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8128,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8167,
											"end": 8169,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8237,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 8186,
											"end": 8204,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8186,
											"end": 8204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8186,
											"end": 8204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8179,
											"end": 8238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8255,
											"end": 8273,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8255,
											"end": 8273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7926,
											"end": 8279,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 33100,
											"end": 33168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33210,
											"end": 33261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 33219,
											"end": 33224,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33226,
											"end": 33233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33254,
											"end": 33260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33235,
											"end": 33251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33235,
											"end": 33260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33210,
											"end": 33218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 33210,
											"end": 33261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29569,
											"end": 30220,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 29569,
											"end": 30220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29695,
											"end": 29713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29695,
											"end": 29713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8486,
											"end": 8488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8468,
											"end": 8489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8527,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8505,
											"end": 8523,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8505,
											"end": 8523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8505,
											"end": 8523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 8544,
											"end": 8562,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8544,
											"end": 8562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8544,
											"end": 8562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8615,
											"end": 8633,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8615,
											"end": 8633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8679,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8660,
											"end": 8679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8284,
											"end": 8685,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29687,
											"end": 29755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29773,
											"end": 29789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29773,
											"end": 29789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8892,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8933,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8904,
											"end": 8934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 9004,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9021,
											"end": 9039,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9021,
											"end": 9039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9014,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9064,
											"end": 9083,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9064,
											"end": 9083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8690,
											"end": 9089,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 29765,
											"end": 29829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29889,
											"end": 29908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29911,
											"end": 29926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29944,
											"end": 29965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9278,
											"end": 9299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9408,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9418,
											"end": 9454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9471,
											"end": 9490,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9471,
											"end": 9490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9094,
											"end": 9496,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 29936,
											"end": 30008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30060,
											"end": 30080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30080,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30042,
											"end": 30051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30074,
											"end": 30080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30100,
											"end": 30123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30100,
											"end": 30123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30154,
											"end": 30156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30148,
											"end": 30152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30158,
											"end": 30164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30139,
											"end": 30165,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 30176,
											"end": 30213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 33876,
											"end": 33997,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14522,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 14335,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14475,
											"end": 14515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14475,
											"end": 14515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14443,
											"end": 14460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14475,
											"end": 14515,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 14475,
											"end": 14515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14408,
											"end": 14424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14408,
											"end": 14424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14475,
											"end": 14515,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14398,
											"end": 14522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14335,
											"end": 14522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2564,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3657,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3277,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3420,
											"end": 3481,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3478,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3452,
											"end": 3479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3452,
											"end": 3479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3420,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3530,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3490,
											"end": 3651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3583,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3564,
											"end": 3584,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3605,
											"end": 3606,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3640,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3490,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3490,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4149,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4022,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4279,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4154,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4250,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4237,
											"end": 4273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4253,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 6020,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5852,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5990,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5943,
											"end": 6014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5994,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6242,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6025,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6081,
											"end": 6213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6130,
											"end": 6133,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6126,
											"end": 6146,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6174,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6160,
											"end": 6175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6202,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6195,
											"end": 6196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6203,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6213,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6081,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7514,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7237,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7345,
											"end": 7354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7355,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7360,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7325,
											"end": 7377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7377,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7325,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7405,
											"end": 7414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7466,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7424,
											"end": 7484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7480,
											"end": 7481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7482,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"money_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"enableTrade()": "0099d386",
							"increaseAllowance(address,uint256)": "39509351",
							"lpPair()": "452ed4f1",
							"marketingWallet()": "75f0a874",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setLpPair(address)": "a35f942a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpPair\",\"type\":\"address\"}],\"name\":\"setLpPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"MoneyAvaxReflectionToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 790,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 796,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 798,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 802,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 360,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 10,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1379,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "wethToken",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IERC20)534"
							},
							{
								"astId": 1381,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "lpPair",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1383,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1394,
								"contract": "money_flattened.sol:MoneyAvaxReflectionToken",
								"label": "tradeEnabled",
								"offset": 20,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)534": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 360,
								"contract": "money_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "money_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"money_flattened.sol\":18058:21328  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"money_flattened.sol\":18058:21328  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220855326b3e446a3dfd3bf890afc64bfe854ef328490f9868667fc7ab8934066d164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220855326b3e446a3dfd3bf890afc64bfe854ef328490f9868667fc7ab8934066d164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 MSTORE8 0x26 0xB3 0xE4 CHAINID LOG3 0xDF 0xD3 0xBF DUP10 EXP 0xFC PUSH5 0xBFE854EF32 DUP5 SWAP1 0xF9 DUP7 DUP7 PUSH8 0xFC7AB8934066D164 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "18058:3270:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;18058:3270:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220855326b3e446a3dfd3bf890afc64bfe854ef328490f9868667fc7ab8934066d164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 MSTORE8 0x26 0xB3 0xE4 CHAINID LOG3 0xDF 0xD3 0xBF DUP10 EXP 0xFC PUSH5 0xBFE854EF32 DUP5 SWAP1 0xF9 DUP7 DUP7 PUSH8 0xFC7AB8934066D164 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "18058:3270:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18058,
									"end": 21328,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220855326b3e446a3dfd3bf890afc64bfe854ef328490f9868667fc7ab8934066d164736f6c63430008120033",
									".code": [
										{
											"begin": 18058,
											"end": 21328,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 21328,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"money_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"money_flattened.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"money_flattened.sol\":{\"keccak256\":\"0xa877bb6cd651ffba8fbbfd4426a67c55064c1b818711edceeb054ace3928f7f4\",\"urls\":[\"bzz-raw://07d046acd3925540875bab48a0e06f5ee683ff65c33a8d25ebfa4de87212cd2c\",\"dweb:/ipfs/QmcJ7oeLMWY6oHfjG2GGPBbF6RS16GH98o38UvxjFptpzY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> money_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "money_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> money_flattened.sol:1073:23:\n     |\n1073 |     function _tokenLP(address to, uint256 amount) internal {\n     |                       ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 37017,
					"file": "money_flattened.sol",
					"start": 37007
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> money_flattened.sol:1080:30:\n     |\n1080 |     function _tokenMarketing(address to, uint256 amount) internal {\n     |                              ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 37235,
					"file": "money_flattened.sol",
					"start": 37225
				},
				"type": "Warning"
			}
		],
		"sources": {
			"money_flattened.sol": {
				"ast": {
					"absolutePath": "money_flattened.sol",
					"exportedSymbols": {
						"Address": [
							333
						],
						"Context": [
							354
						],
						"ERC20": [
							1362
						],
						"IERC20": [
							534
						],
						"IERC20Metadata": [
							778
						],
						"MoneyAvaxReflectionToken": [
							1676
						],
						"Ownable": [
							457
						],
						"ReentrancyGuard": [
							39
						],
						"SafeERC20": [
							755
						]
					},
					"id": 1677,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "189:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "214:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "983:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1778:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1753:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1753:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1793:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1825:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1800:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1800:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1836:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1860:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1844:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1844:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1888:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1908:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1898:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1898:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1888:0:0"
									},
									"scope": 39,
									"src": "1874:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2328:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2428:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2417:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2438:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2409:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2409:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2557:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2547:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2547:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2576:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2730:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2720:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2720:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1933:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2313:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2325:2:0"
									},
									"src": "2304:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1677,
							"src": "965:1786:0",
							"usedErrors": []
						},
						{
							"id": 40,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "2934:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 41,
								"nodeType": "StructuredDocumentation",
								"src": "2959:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "Address",
							"nameLocation": "3035:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "4074:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 49,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "4298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4306:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4298:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4311:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4298:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4320:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4298:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 54,
												"nodeType": "Return",
												"src": "4291:30:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "3049:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "4017:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4036:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "4028:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:17:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "4068:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4068:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4067:6:0"
									},
									"scope": 333,
									"src": "4008:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "5316:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 67,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5342:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$333",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$333",
																				"typeString": "library Address"
																			}
																		],
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5334:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 65,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5334:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5334:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5348:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5334:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 70,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "5359:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5334:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5367:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "5326:73:0"
											},
											{
												"assignments": [
													76,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5416:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "5411:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 75,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 83,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5459:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 77,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "5429:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5439:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5429:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 79,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "5451:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5429:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5410:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "5480:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5489:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5472:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "5472:78:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "4334:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "5254:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5280:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "5264:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5264:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5299:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "5291:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:43:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5316:0:0"
									},
									"scope": 333,
									"src": "5245:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "6388:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "6418:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "6426:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6432:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 100,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															127
														],
														"referencedDeclaration": 127,
														"src": "6405:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6405:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 105,
												"nodeType": "Return",
												"src": "6398:67:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "5563:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "6308:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6329:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6321:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6337:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6320:35:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6374:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6373:14:0"
									},
									"scope": 333,
									"src": "6299:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "6841:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 120,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "6888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6894:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 123,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6897:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 119,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															147,
															197
														],
														"referencedDeclaration": 197,
														"src": "6858:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 118,
												"id": 125,
												"nodeType": "Return",
												"src": "6851:59:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "6478:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "6703:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6733:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "6725:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "6749:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6749:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6790:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "6776:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6715:93:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "6827:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6826:14:0"
									},
									"scope": 333,
									"src": "6694:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7422:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "7461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "7469:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 142,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "7475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7482:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 139,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															147,
															197
														],
														"referencedDeclaration": 197,
														"src": "7439:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7439:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 138,
												"id": 145,
												"nodeType": "Return",
												"src": "7432:94:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "6923:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "7288:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7327:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7356:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7343:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7343:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7309:80:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7408:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7407:14:0"
									},
									"scope": 333,
									"src": "7279:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "7960:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 164,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7986:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$333",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$333",
																				"typeString": "library Address"
																			}
																		],
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7978:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 162,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7978:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7978:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7992:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7978:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 167,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "8003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8010:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7970:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "7970:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 174,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "8080:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 173,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "8069:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8089:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8061:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "8061:60:0"
											},
											{
												"assignments": [
													180,
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8138:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 196,
														"src": "8133:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8133:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "8160:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 196,
														"src": "8147:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"arguments": [
														{
															"id": 187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "8200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 183,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "8174:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8181:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8174:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 185,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "8193:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8174:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8174:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8132:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "8239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 192,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "8248:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 193,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "8260:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 190,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "8222:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8222:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 160,
												"id": 195,
												"nodeType": "Return",
												"src": "8215:58:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "7539:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "7790:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7829:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7821:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7845:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7880:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7872:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7909:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7895:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7895:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7811:116:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7946:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7946:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:14:0"
									},
									"scope": 333,
									"src": "7781:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "8557:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "8593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "8601:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8607:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 207,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															214,
															249
														],
														"referencedDeclaration": 249,
														"src": "8574:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8574:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "8567:80:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "8286:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "8466:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8493:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "8485:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8514:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "8501:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8484:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "8543:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8543:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8542:14:0"
									},
									"scope": 333,
									"src": "8457:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "8996:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 228,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "9025:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 227,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "9014:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9014:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9034:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9006:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "9006:67:0"
											},
											{
												"assignments": [
													234,
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9090:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "9085:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 233,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9112:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "9099:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 235,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9099:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"arguments": [
														{
															"id": 239,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "9144:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 237,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "9126:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9133:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "9126:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9126:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9084:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "9183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 244,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "9192:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "9204:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "9166:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9166:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 225,
												"id": 247,
												"nodeType": "Return",
												"src": "9159:58:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "8660:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "8847:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8883:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8912:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8899:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8899:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8940:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8926:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8926:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8865:93:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "8982:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8982:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8981:14:0"
									},
									"scope": 333,
									"src": "8838:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9500:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 260,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "9538:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 261,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "9546:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9552:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 259,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															266,
															301
														],
														"referencedDeclaration": 301,
														"src": "9517:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9517:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 258,
												"id": 264,
												"nodeType": "Return",
												"src": "9510:84:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "9230:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "9412:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9441:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9433:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9462:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9449:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9449:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9432:35:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9486:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9485:14:0"
									},
									"scope": 333,
									"src": "9403:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "9942:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 280,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "9971:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 279,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "9960:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9960:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9980:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9952:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "9952:69:0"
											},
											{
												"assignments": [
													286,
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10038:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "10033:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10033:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10060:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "10047:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 287,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10047:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"arguments": [
														{
															"id": 291,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "10094:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 289,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "10074:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10081:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10074:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10074:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10032:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "10133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 296,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "10142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "10154:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 294,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "10116:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10116:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 277,
												"id": 299,
												"nodeType": "Return",
												"src": "10109:58:0"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "9607:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "9796:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9834:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "9826:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9863:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "9850:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9850:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9891:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "9877:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9877:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9816:93:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "9928:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9928:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9927:14:0"
									},
									"scope": 333,
									"src": "9787:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "10554:532:0",
										"statements": [
											{
												"condition": {
													"id": 313,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "10568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 329,
													"nodeType": "Block",
													"src": "10625:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 317,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "10709:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10720:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "10709:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10729:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10709:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 327,
																"nodeType": "Block",
																"src": "11017:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 324,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 308,
																					"src": "11042:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 323,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "11035:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11035:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 326,
																		"nodeType": "ExpressionStatement",
																		"src": "11035:20:0"
																	}
																]
															},
															"id": 328,
															"nodeType": "IfStatement",
															"src": "10705:365:0",
															"trueBody": {
																"id": 322,
																"nodeType": "Block",
																"src": "10732:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "10852:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "10874:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "10903:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "10897:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10897:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "10878:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10946:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "10950:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10942:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10942:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "10963:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "10935:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10935:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10935:44:0"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 306,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "10903:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 306,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "10950:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 321,
																		"nodeType": "InlineAssembly",
																		"src": "10843:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 330,
												"nodeType": "IfStatement",
												"src": "10564:516:0",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "10577:42:0",
													"statements": [
														{
															"expression": {
																"id": 314,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10598:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 312,
															"id": 315,
															"nodeType": "Return",
															"src": "10591:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "10180:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "10403:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "10434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10429:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "10464:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10451:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10451:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10498:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10484:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10484:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10419:97:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10540:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:14:0"
									},
									"scope": 333,
									"src": "10394:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1677,
							"src": "3027:8061:0",
							"usedErrors": []
						},
						{
							"id": 334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11256:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "11281:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "Context",
							"nameLocation": "11796:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "11872:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 340,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "11889:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11893:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "11889:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 339,
												"id": 342,
												"nodeType": "Return",
												"src": "11882:17:0"
											}
										]
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "11819:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11829:2:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "11863:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11862:9:0"
									},
									"scope": 354,
									"src": "11810:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "11979:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 349,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "11996:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12000:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "11996:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "11989:15:0"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "11921:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11929:2:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "11963:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11962:16:0"
									},
									"scope": 354,
									"src": "11912:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1677,
							"src": "11778:235:0",
							"usedErrors": []
						},
						{
							"id": 355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12183:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 357,
										"name": "Context",
										"nameLocations": [
											"12733:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 354,
										"src": "12733:7:0"
									},
									"id": 358,
									"nodeType": "InheritanceSpecifier",
									"src": "12733:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "12209:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457,
								354
							],
							"name": "Ownable",
							"nameLocation": "12722:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 360,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "12763:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "12747:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 359,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12747:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 366,
									"name": "OwnershipTransferred",
									"nameLocation": "12782:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "12819:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "12803:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "12850:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "12834:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12802:57:0"
									},
									"src": "12776:84:0"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "12976:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 371,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "13005:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13005:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 370,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "12986:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12986:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "12986:32:0"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "12866:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12973:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12976:0:0"
									},
									"scope": 457,
									"src": "12962:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "13156:30:0",
										"statements": [
											{
												"expression": {
													"id": 382,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 360,
													"src": "13173:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 381,
												"id": 383,
												"nodeType": "Return",
												"src": "13166:13:0"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "13031:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "13110:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13115:2:0"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "13147:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13146:9:0"
									},
									"scope": 457,
									"src": "13101:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "13295:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 389,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "13313:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13313:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 391,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "13324:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13324:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13313:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13338:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13305:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "13305:68:0"
											},
											{
												"id": 397,
												"nodeType": "PlaceholderStatement",
												"src": "13383:1:0"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "13192:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 399,
									"name": "onlyOwner",
									"nameLocation": "13283:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13292:2:0"
									},
									"src": "13274:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "13787:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13824:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13816:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13816:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13816:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 405,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "13797:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13797:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "13797:30:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "13397:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 402,
												"name": "onlyOwner",
												"nameLocations": [
													"13777:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 399,
												"src": "13777:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13777:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "13742:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13759:2:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13787:0:0"
									},
									"scope": 457,
									"src": "13733:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "14053:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "14071:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14091:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14083:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 423,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14083:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14083:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14071:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14095:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14063:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "14063:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "14165:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 431,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "14146:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14146:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "14146:28:0"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "13840:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 419,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 418,
												"name": "onlyOwner",
												"nameLocations": [
													"14043:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 399,
												"src": "14043:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14043:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "13992:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "14018:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "14010:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14009:18:0"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14053:0:0"
									},
									"scope": 457,
									"src": "13983:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "14398:124:0",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "14416:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "14408:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 442,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14408:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"id": 444,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 360,
													"src": "14427:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14408:25:0"
											},
											{
												"expression": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 446,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "14443:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 447,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "14452:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14443:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "14443:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 451,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "14496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "14506:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 450,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "14475:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14475:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "EmitStatement",
												"src": "14470:45:0"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "14187:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "14344:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "14371:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14363:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14362:18:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14398:0:0"
									},
									"scope": 457,
									"src": "14335:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1677,
							"src": "12704:1820:0",
							"usedErrors": []
						},
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14717:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "14742:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "IERC20",
							"nameLocation": "14823:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "14836:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14916:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14927:2:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "14953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14952:9:0"
									},
									"scope": 534,
									"src": "14907:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "14968:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "15054:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15072:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "15064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15063:17:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "15104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15103:9:0"
									},
									"scope": 534,
									"src": "15045:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "15119:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "15335:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15352:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "15344:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15364:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "15356:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15343:28:0"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "15390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15389:6:0"
									},
									"scope": 534,
									"src": "15326:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "15402:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "15680:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15698:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "15690:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15713:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "15705:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15689:32:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "15745:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15744:9:0"
									},
									"scope": 534,
									"src": "15671:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "15760:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16416:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16432:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "16424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16449:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "16441:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16423:33:0"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "16475:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16474:6:0"
									},
									"scope": 534,
									"src": "16407:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "16487:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "16788:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16818:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "16810:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16840:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "16832:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16860:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "16852:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16800:72:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "16891:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16891:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16890:6:0"
									},
									"scope": 534,
									"src": "16779:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "16903:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 524,
									"name": "Transfer",
									"nameLocation": "17072:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17097:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "17081:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17119:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "17103:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "17123:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17080:57:0"
									},
									"src": "17066:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "17144:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 533,
									"name": "Approval",
									"nameLocation": "17303:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "17312:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17351:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "17335:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17368:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "17360:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17311:63:0"
									},
									"src": "17297:78:0"
								}
							],
							"scope": 1677,
							"src": "14813:2564:0",
							"usedErrors": []
						},
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17573:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "17600:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "SafeERC20",
							"nameLocation": "18066:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 539,
									"libraryName": {
										"id": 537,
										"name": "Address",
										"nameLocations": [
											"18088:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 333,
										"src": "18088:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18082:26:0",
									"typeName": {
										"id": 538,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18100:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "18216:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "18246:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 553,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "18276:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$534",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18282:8:0",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 483,
																		"src": "18276:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18291:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "18276:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 556,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "18301:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "18305:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18253:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18257:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18253:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18253:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 549,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "18226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$534_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18226:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "18226:86:0"
											}
										]
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "18123:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18152:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "18145:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$534",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"18145:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 534,
														"src": "18145:6:0"
													},
													"referencedDeclaration": 534,
													"src": "18145:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$534",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18175:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "18167:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18195:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "18187:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18135:71:0"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18216:0:0"
									},
									"scope": 755,
									"src": "18114:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "18453:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "18483:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 578,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 565,
																			"src": "18513:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$534",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18519:12:0",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 515,
																		"src": "18513:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18532:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "18513:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 581,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "18542:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 582,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "18548:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 583,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "18552:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 576,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18490:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "18494:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18490:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18490:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 574,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "18463:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$534_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18463:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "18463:96:0"
											}
										]
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "18334:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18367:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "18360:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$534",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 563,
														"name": "IERC20",
														"nameLocations": [
															"18360:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 534,
														"src": "18360:6:0"
													},
													"referencedDeclaration": 534,
													"src": "18360:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$534",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18390:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "18382:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18412:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "18404:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18432:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "18424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18350:93:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18453:0:0"
									},
									"scope": 755,
									"src": "18325:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "18932:497:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 596,
																			"src": "19181:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19190:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19181:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 603,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19180:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 608,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "19221:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$755",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$755",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 607,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19213:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 606,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "19213:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 609,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19213:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 610,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 594,
																					"src": "19228:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 604,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 592,
																					"src": "19197:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$534",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19203:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 493,
																				"src": "19197:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19197:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19240:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19197:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 614,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19196:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19180:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19256:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19159:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "19159:163:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 620,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "19352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 623,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "19382:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$534",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19388:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 503,
																		"src": "19382:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19396:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19382:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 626,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "19406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "19415:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 621,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19359:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19363:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19359:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19359:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 619,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "19332:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$534_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19332:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "19332:90:0"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "18572:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "18835:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18863:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "18856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$534",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 591,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 590,
														"name": "IERC20",
														"nameLocations": [
															"18856:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 534,
														"src": "18856:6:0"
													},
													"referencedDeclaration": 534,
													"src": "18856:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$534",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "18886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "18878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18911:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "18903:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18846:76:0"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18932:0:0"
									},
									"scope": 755,
									"src": "18826:603:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "19551:194:0",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "19569:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 667,
														"src": "19561:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19561:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 648,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "19608:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$755",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$755",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19600:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19600:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19600:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 650,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "19615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 644,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "19584:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$534",
																	"typeString": "contract IERC20"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19590:9:0",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 493,
															"src": "19584:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19584:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 652,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "19626:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19584:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19561:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 656,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "19661:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 659,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "19691:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$534",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19697:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 503,
																		"src": "19691:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19705:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19691:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 662,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "19715:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 663,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "19724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 657,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19668:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19672:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19668:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19668:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 655,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "19641:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$534_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19641:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "19641:97:0"
											}
										]
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "19444:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "19475:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$534",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 634,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 633,
														"name": "IERC20",
														"nameLocations": [
															"19475:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 534,
														"src": "19475:6:0"
													},
													"referencedDeclaration": 534,
													"src": "19475:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$534",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19505:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "19497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "19522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19465:76:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19551:0:0"
									},
									"scope": 755,
									"src": "19435:310:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "19867:370:0",
										"statements": [
											{
												"id": 714,
												"nodeType": "UncheckedBlock",
												"src": "19877:354:0",
												"statements": [
													{
														"assignments": [
															679
														],
														"declarations": [
															{
																"constant": false,
																"id": 679,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "19909:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 714,
																"src": "19901:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 678,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19901:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 688,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 684,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "19948:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 682,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "19940:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19940:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 686,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "19955:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 680,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "19924:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$534",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19930:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 493,
																"src": "19924:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19924:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19901:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 690,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "19985:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 691,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "20001:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19985:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20008:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 689,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "19977:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19977:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "19977:75:0"
													},
													{
														"assignments": [
															697
														],
														"declarations": [
															{
																"constant": false,
																"id": 697,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "20074:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 714,
																"src": "20066:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 696,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20066:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 701,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 698,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "20089:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 699,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "20104:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20089:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20066:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 703,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "20143:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$534",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 706,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 671,
																					"src": "20173:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$534",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "20179:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 503,
																				"src": "20173:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "20187:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "20173:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 709,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "20197:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 710,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 697,
																			"src": "20206:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 704,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "20150:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "20154:18:0",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "20150:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20150:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$534",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 702,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "20123:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$534_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20123:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 713,
														"nodeType": "ExpressionStatement",
														"src": "20123:97:0"
													}
												]
											}
										]
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "19760:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19798:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "19791:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$534",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 669,
														"name": "IERC20",
														"nameLocations": [
															"19791:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 534,
														"src": "19791:6:0"
													},
													"referencedDeclaration": 534,
													"src": "19791:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$534",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "19813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19846:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "19838:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19781:76:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19867:0:0"
									},
									"scope": 755,
									"src": "19751:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "20690:636:0",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "21052:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "21039:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 725,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21039:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "21093:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21099:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 729,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "21073:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$534",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$534",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21065:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21065:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21065:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21080:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 127,
														"src": "21065:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21065:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21039:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 736,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "21148:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21159:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21148:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21148:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "21144:176:0",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "21171:149:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 743,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "21243:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21256:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 744,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "21256:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 746,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "21255:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 741,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "21232:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "21236:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "21232:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21232:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21264:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 740,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "21224:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21224:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "21224:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "20243:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "20629:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20656:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "20649:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$534",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 718,
														"name": "IERC20",
														"nameLocations": [
															"20649:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 534,
														"src": "20649:6:0"
													},
													"referencedDeclaration": 534,
													"src": "20649:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$534",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "20663:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20663:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20648:33:0"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20690:0:0"
									},
									"scope": 755,
									"src": "20620:706:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1677,
							"src": "18058:3270:0",
							"usedErrors": []
						},
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21544:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 758,
										"name": "IERC20",
										"nameLocations": [
											"21715:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 534,
										"src": "21715:6:0"
									},
									"id": 759,
									"nodeType": "InheritanceSpecifier",
									"src": "21715:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 757,
								"nodeType": "StructuredDocumentation",
								"src": "21570:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 778,
							"linearizedBaseContracts": [
								778,
								534
							],
							"name": "IERC20Metadata",
							"nameLocation": "21697:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "21728:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "21796:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21800:2:0"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "21826:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 762,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21826:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21825:15:0"
									},
									"scope": 778,
									"src": "21787:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "21847:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "21917:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21923:2:0"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "21949:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21949:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21948:15:0"
									},
									"scope": 778,
									"src": "21908:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "21970:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "22049:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22057:2:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "22083:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 774,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22083:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22082:7:0"
									},
									"scope": 778,
									"src": "22040:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1677,
							"src": "21687:405:0",
							"usedErrors": []
						},
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22283:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "Context",
										"nameLocations": [
											"23502:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 354,
										"src": "23502:7:0"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "23502:7:0"
								},
								{
									"baseName": {
										"id": 783,
										"name": "IERC20",
										"nameLocations": [
											"23511:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 534,
										"src": "23511:6:0"
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "23511:6:0"
								},
								{
									"baseName": {
										"id": 785,
										"name": "IERC20Metadata",
										"nameLocations": [
											"23519:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 778,
										"src": "23519:14:0"
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "23519:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "22311:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1362,
							"linearizedBaseContracts": [
								1362,
								778,
								534,
								354
							],
							"name": "ERC20",
							"nameLocation": "23493:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "23576:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "23540:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 789,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 787,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23548:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23540:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 788,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "23559:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "23648:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "23592:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 795,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 791,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23600:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23592:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 794,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 792,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "23619:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "23611:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23630:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "23682:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "23666:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23666:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "23716:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "23701:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 799,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "23701:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "23742:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "23727:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 801,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "23727:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "24115:57:0",
										"statements": [
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 810,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "24125:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 811,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "24133:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24125:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "24125:13:0"
											},
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "24148:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 815,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "24158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24148:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "24148:17:0"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "23756:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "24085:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "24071:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24071:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "24106:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "24092:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24092:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24070:44:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24115:0:0"
									},
									"scope": 1362,
									"src": "24059:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										765
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "24306:29:0",
										"statements": [
											{
												"expression": {
													"id": 826,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 800,
													"src": "24323:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 825,
												"id": 827,
												"nodeType": "Return",
												"src": "24316:12:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "24178:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "24246:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 822,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24273:8:0"
									},
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24250:2:0"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "24291:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 823,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24291:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24290:15:0"
									},
									"scope": 1362,
									"src": "24237:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "24519:31:0",
										"statements": [
											{
												"expression": {
													"id": 836,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 802,
													"src": "24536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 835,
												"id": 837,
												"nodeType": "Return",
												"src": "24529:14:0"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "24341:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "24457:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 832,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24486:8:0"
									},
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24463:2:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "24504:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24504:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24503:15:0"
									},
									"scope": 1362,
									"src": "24448:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										777
									],
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "25239:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25256:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 845,
												"id": 847,
												"nodeType": "Return",
												"src": "25249:9:0"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "24556:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "25183:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 842,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25214:8:0"
									},
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25191:2:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "25232:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 843,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "25232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25231:7:0"
									},
									"scope": 1362,
									"src": "25174:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										465
									],
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "25395:36:0",
										"statements": [
											{
												"expression": {
													"id": 856,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "25412:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 855,
												"id": 857,
												"nodeType": "Return",
												"src": "25405:19:0"
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "25271:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "25334:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 852,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25368:8:0"
									},
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25345:2:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "25386:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25385:9:0"
									},
									"scope": 1362,
									"src": "25325:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										473
									],
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "25572:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 868,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "25589:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 870,
													"indexExpression": {
														"id": 869,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "25599:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25589:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 867,
												"id": 871,
												"nodeType": "Return",
												"src": "25582:25:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "25437:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "25498:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 864,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25545:8:0"
									},
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "25508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25507:17:0"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "25563:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25562:9:0"
									},
									"scope": 1362,
									"src": "25489:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										483
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "25895:104:0",
										"statements": [
											{
												"assignments": [
													885
												],
												"declarations": [
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "25913:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "25905:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 884,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25905:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 886,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "25921:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25921:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25905:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 890,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "25953:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25960:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "25964:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 889,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "25943:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25943:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "25943:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 883,
												"id": 896,
												"nodeType": "Return",
												"src": "25981:11:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "25620:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "25819:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 880,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25871:8:0"
									},
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "25828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25848:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "25840:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25827:28:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "25889:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25889:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25888:6:0"
									},
									"scope": 1362,
									"src": "25810:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										493
									],
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "26155:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 909,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "26172:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 911,
														"indexExpression": {
															"id": 910,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "26184:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26172:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 913,
													"indexExpression": {
														"id": 912,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "26191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26172:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 908,
												"id": 914,
												"nodeType": "Return",
												"src": "26165:34:0"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "26005:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "26066:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 905,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26128:8:0"
									},
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26084:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "26076:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "26091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26075:32:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "26146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26145:9:0"
									},
									"scope": 1362,
									"src": "26057:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										503
									],
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "26603:108:0",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "26621:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "26613:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 927,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26613:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 929,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "26629:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26629:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26613:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "26660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "26667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "26676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "26651:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26651:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "26651:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 926,
												"id": 939,
												"nodeType": "Return",
												"src": "26693:11:0"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "26212:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "26523:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 923,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26579:8:0"
									},
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26539:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "26531:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26556:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "26548:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26530:33:0"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "26597:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26596:6:0"
									},
									"scope": 1362,
									"src": "26514:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										515
									],
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "27406:153:0",
										"statements": [
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "27424:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "27416:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 954,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27416:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 956,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "27434:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27434:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27416:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "27472:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "27478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "27487:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "27456:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27456:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "27456:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "27514:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "27520:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "27524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 965,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "27504:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27504:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "27504:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27548:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 953,
												"id": 972,
												"nodeType": "Return",
												"src": "27541:11:0"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "26717:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "27282:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 950,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27382:8:0"
									},
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27312:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "27304:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27334:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "27326:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27354:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "27346:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27294:72:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "27400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27399:6:0"
									},
									"scope": 1362,
									"src": "27273:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "28048:142:0",
										"statements": [
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "28066:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1003,
														"src": "28058:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 984,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28058:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 986,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "28074:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28074:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28058:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "28105:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "28112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 992,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "28121:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 994,
																	"indexExpression": {
																		"id": 993,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "28133:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28121:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 996,
																"indexExpression": {
																	"id": 995,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "28140:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28121:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 997,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "28151:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28121:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "28096:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28096:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "28096:66:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 983,
												"id": 1002,
												"nodeType": "Return",
												"src": "28172:11:0"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "27565:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "27963:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27989:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "27981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "28006:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "27998:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27980:37:0"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "28042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28041:6:0"
									},
									"scope": 1362,
									"src": "27954:236:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "28776:330:0",
										"statements": [
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "28794:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "28786:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1014,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28786:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1016,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "28802:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28802:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28786:28:0"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "28832:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "28824:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28824:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1021,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "28851:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1023,
														"indexExpression": {
															"id": 1022,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "28863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "28851:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1025,
													"indexExpression": {
														"id": 1024,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "28870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "28851:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28824:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "28896:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1029,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "28916:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28896:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28933:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28888:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "28888:85:0"
											},
											{
												"id": 1042,
												"nodeType": "UncheckedBlock",
												"src": "28983:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1035,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "29016:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1036,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "29023:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1037,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "29032:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1038,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "29051:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29032:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1034,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "29007:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29007:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1041,
														"nodeType": "ExpressionStatement",
														"src": "29007:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1013,
												"id": 1044,
												"nodeType": "Return",
												"src": "29088:11:0"
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "28196:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "28686:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28712:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "28704:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "28729:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "28721:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28703:42:0"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "28770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28769:6:0"
									},
									"scope": 1362,
									"src": "28677:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "29677:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1057,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "29695:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29711:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29703:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1058,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29703:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29703:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29695:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29715:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29687:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "29687:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1067,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "29773:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29787:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29779:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1068,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29779:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29779:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29773:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29791:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29765:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "29765:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "29861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "29867:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "29871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1076,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "29840:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29840:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "29840:38:0"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "29897:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "29889:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"baseExpression": {
														"id": 1084,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "29911:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1086,
													"indexExpression": {
														"id": 1085,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "29921:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29911:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29889:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1089,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "29944:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1090,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "29959:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29944:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29967:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29936:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "29936:72:0"
											},
											{
												"id": 1103,
												"nodeType": "UncheckedBlock",
												"src": "30018:73:0",
												"statements": [
													{
														"expression": {
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1095,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "30042:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1097,
																"indexExpression": {
																	"id": 1096,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "30052:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30042:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1098,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "30060:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1099,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "30074:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30060:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30042:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1102,
														"nodeType": "ExpressionStatement",
														"src": "30042:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1104,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "30100:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1106,
														"indexExpression": {
															"id": 1105,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "30110:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30100:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1107,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "30117:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30100:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "30100:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1111,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "30148:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "30154:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "30158:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1110,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "30139:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30139:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "EmitStatement",
												"src": "30134:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1117,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "30196:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "30202:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "30206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "30176:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30176:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "30176:37:0"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "29112:452:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "29578:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "29597:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29627:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "29619:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29647:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "29639:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29587:72:0"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29677:0:0"
									},
									"scope": 1362,
									"src": "29569:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "30561:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1132,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "30579:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30598:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30590:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1133,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30590:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30590:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30579:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30602:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30571:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "30571:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30676:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30668:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30668:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30668:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "30680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "30689:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "30647:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30647:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "30647:49:0"
											},
											{
												"expression": {
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1150,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "30707:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1151,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "30723:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30707:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "30707:22:0"
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1154,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "30739:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1156,
														"indexExpression": {
															"id": 1155,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "30749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30739:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1157,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "30761:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30739:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "30739:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30799:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30791:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30791:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "30803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "30812:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1160,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "30782:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30782:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "EmitStatement",
												"src": "30777:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30850:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30850:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30850:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "30862:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "30871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1169,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "30830:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30830:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "30830:48:0"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "30226:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "30505:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "30511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30536:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "30528:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30510:33:0"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30561:0:0"
									},
									"scope": 1362,
									"src": "30496:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "31270:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "31288:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31307:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31299:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1189,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31299:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31299:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31288:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31311:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31280:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31280:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "31280:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "31379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31388:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1199,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31388:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31388:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "31400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "31358:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31358:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "31358:49:0"
											},
											{
												"assignments": [
													1207
												],
												"declarations": [
													{
														"constant": false,
														"id": 1207,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "31426:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1250,
														"src": "31418:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1206,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31418:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"baseExpression": {
														"id": 1208,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "31443:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1210,
													"indexExpression": {
														"id": 1209,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "31453:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31443:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31418:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1213,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "31479:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "31497:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31479:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31505:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31471:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "31471:71:0"
											},
											{
												"id": 1227,
												"nodeType": "UncheckedBlock",
												"src": "31552:79:0",
												"statements": [
													{
														"expression": {
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1219,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "31576:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1221,
																"indexExpression": {
																	"id": 1220,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "31586:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31576:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1222,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "31597:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1223,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "31614:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31597:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31576:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1226,
														"nodeType": "ExpressionStatement",
														"src": "31576:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "31640:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1229,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "31656:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31640:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "31640:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1233,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "31687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31704:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31696:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31696:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31696:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "31708:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1232,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "31678:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31678:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "EmitStatement",
												"src": "31673:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "31746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31763:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31755:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1243,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31755:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31755:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "31767:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "31726:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31726:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "31726:48:0"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "30891:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "31214:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "31228:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "31220:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "31237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31219:33:0"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31270:0:0"
									},
									"scope": 1362,
									"src": "31205:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "32317:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1262,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "32335:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32352:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32344:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1263,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32344:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32344:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32335:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32356:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32327:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "32327:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1272,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "32413:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32432:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32424:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1273,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32424:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32424:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32413:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32436:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32405:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32405:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "32405:68:0"
											},
											{
												"expression": {
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1281,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "32484:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1284,
															"indexExpression": {
																"id": 1282,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "32496:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32484:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1285,
														"indexExpression": {
															"id": 1283,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "32503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32484:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1286,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "32514:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32484:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "32484:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1290,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "32544:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "32551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "32560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1289,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "32535:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32535:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "EmitStatement",
												"src": "32530:37:0"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "31787:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "32213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32239:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "32231:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32262:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "32254:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32287:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "32279:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32221:78:0"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32317:0:0"
									},
									"scope": 1362,
									"src": "32204:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "32971:321:0",
										"statements": [
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "32989:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "32981:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"arguments": [
														{
															"id": 1309,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "33018:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "33025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1308,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "33008:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33008:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32981:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1313,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "33047:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33072:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1315,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33072:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1314,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "33067:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33067:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "33081:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "33067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33047:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "IfStatement",
												"src": "33043:243:0",
												"trueBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "33086:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1321,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "33108:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1322,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "33128:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33108:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33136:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1320,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "33100:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33100:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1326,
															"nodeType": "ExpressionStatement",
															"src": "33100:68:0"
														},
														{
															"id": 1335,
															"nodeType": "UncheckedBlock",
															"src": "33182:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1328,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1299,
																				"src": "33219:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1329,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "33226:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1330,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "33235:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1331,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1303,
																					"src": "33254:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "33235:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1327,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "33210:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33210:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1334,
																	"nodeType": "ExpressionStatement",
																	"src": "33210:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "32580:266:0",
										"text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "32860:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32893:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "32885:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32916:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "32908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32941:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "32933:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32875:78:0"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32971:0:0"
									},
									"scope": 1362,
									"src": "32851:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "33995:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "33298:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "33885:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33923:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "33915:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33945:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "33937:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "33965:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "33957:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33905:72:0"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33995:0:0"
									},
									"scope": 1362,
									"src": "33876:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "34703:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "34003:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "34594:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34631:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "34623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34653:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "34645:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34673:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "34665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34613:72:0"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34703:0:0"
									},
									"scope": 1362,
									"src": "34585:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1677,
							"src": "23484:11223:0",
							"usedErrors": []
						},
						{
							"id": 1363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34730:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1364,
										"name": "ERC20",
										"nameLocations": [
											"34796:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1362,
										"src": "34796:5:0"
									},
									"id": 1365,
									"nodeType": "InheritanceSpecifier",
									"src": "34796:5:0"
								},
								{
									"baseName": {
										"id": 1366,
										"name": "Ownable",
										"nameLocations": [
											"34803:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "34803:7:0"
									},
									"id": 1367,
									"nodeType": "InheritanceSpecifier",
									"src": "34803:7:0"
								},
								{
									"baseName": {
										"id": 1368,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"34812:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "34812:15:0"
									},
									"id": 1369,
									"nodeType": "InheritanceSpecifier",
									"src": "34812:15:0"
								}
							],
							"canonicalName": "MoneyAvaxReflectionToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1676,
							"linearizedBaseContracts": [
								1676,
								39,
								457,
								1362,
								778,
								534,
								354
							],
							"name": "MoneyAvaxReflectionToken",
							"nameLocation": "34768:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1373,
									"libraryName": {
										"id": 1370,
										"name": "SafeERC20",
										"nameLocations": [
											"34840:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "34840:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "34834:27:0",
									"typeName": {
										"id": 1372,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1371,
											"name": "IERC20",
											"nameLocations": [
												"34854:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 534,
											"src": "34854:6:0"
										},
										"referencedDeclaration": 534,
										"src": "34854:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$534",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1379,
									"mutability": "mutable",
									"name": "wethToken",
									"nameLocation": "34882:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "34867:77:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$534",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1375,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1374,
											"name": "IERC20",
											"nameLocations": [
												"34867:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 534,
											"src": "34867:6:0"
										},
										"referencedDeclaration": 534,
										"src": "34867:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$534",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307834394435633242644666616336434532424664423636343046344638306632323662633130624142",
												"id": 1377,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "34901:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1376,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 534,
											"src": "34894:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$534_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "34894:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$534",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "452ed4f1",
									"id": 1381,
									"mutability": "mutable",
									"name": "lpPair",
									"nameLocation": "34966:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "34951:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1380,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "34951:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1383,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "34993:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "34978:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1382,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "34978:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1388,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "35040:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "35015:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "35015:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1387,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1385,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "35053:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3234",
											"id": 1386,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "35057:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_24_by_1",
												"typeString": "int_const 24"
											},
											"value": "24"
										},
										"src": "35053:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1391,
									"mutability": "constant",
									"name": "MAX_TX_PERCENT",
									"nameLocation": "35090:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "35065:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "35065:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1390,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "35107:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1394,
									"mutability": "mutable",
									"name": "tradeEnabled",
									"nameLocation": "35127:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1676,
									"src": "35114:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1392,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "35114:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "35142:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "35267:137:0",
										"statements": [
											{
												"expression": {
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1403,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "35277:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1404,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "35295:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35277:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "35277:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "35327:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "35331:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "35327:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35339:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3234",
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35343:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															},
															"src": "35339:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 1407,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "35321:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35321:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "35321:25:0"
											}
										]
									},
									"id": 1416,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d6f6e65792041766178205265666c656374696f6e20546f6b656e",
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35212:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9db2e7ac804510162595d05bad1d7a10f2f3e7e8159a0637d5a5f0a140581ff4",
														"typeString": "literal_string \"Money Avax Reflection Token\""
													},
													"value": "Money Avax Reflection Token"
												},
												{
													"hexValue": "4d6f6e6579417661785265666c656374696f6e73",
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35243:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d815614223467adb583472548d59032d2811512461a10334a3fb3bd81c1fa9ca",
														"typeString": "literal_string \"MoneyAvaxReflections\""
													},
													"value": "MoneyAvaxReflections"
												}
											],
											"id": 1401,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1398,
												"name": "ERC20",
												"nameLocations": [
													"35206:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1362,
												"src": "35206:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35206:60:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "35183:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "35175:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35165:40:0"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35267:0:0"
									},
									"scope": 1676,
									"src": "35154:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "35465:33:0",
										"statements": [
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1423,
														"name": "lpPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "35475:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1424,
														"name": "_lpPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "35484:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35475:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "35475:16:0"
											}
										]
									},
									"functionSelector": "a35f942a",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1420,
												"name": "onlyOwner",
												"nameLocations": [
													"35455:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 399,
												"src": "35455:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35455:9:0"
										}
									],
									"name": "setLpPair",
									"nameLocation": "35419:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "_lpPair",
												"nameLocation": "35437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "35429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35428:17:0"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35465:0:0"
									},
									"scope": 1676,
									"src": "35410:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "35546:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "35564:13:0",
															"subExpression": {
																"id": 1434,
																"name": "tradeEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "35565:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e6720616c726561647920656e61626c6564",
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35579:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0",
																"typeString": "literal_string \"Trading already enabled\""
															},
															"value": "Trading already enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4d1beca50ea03ae2d0bef8bddea7067036a984881c1fb687d10a1e111335fc0",
																"typeString": "literal_string \"Trading already enabled\""
															}
														],
														"id": 1433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35556:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "35556:49:0"
											},
											{
												"expression": {
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1439,
														"name": "tradeEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "35615:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35630:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "35615:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "35615:19:0"
											}
										]
									},
									"functionSelector": "0099d386",
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1430,
												"name": "onlyOwner",
												"nameLocations": [
													"35536:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 399,
												"src": "35536:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35536:9:0"
										}
									],
									"name": "enableTrade",
									"nameLocation": "35513:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35524:2:0"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35546:0:0"
									},
									"scope": 1676,
									"src": "35504:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										436
									],
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "35718:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1453,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "35736:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35756:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35748:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1454,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35748:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35748:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "35736:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e6577206f776e65722061646472657373",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35760:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222",
																"typeString": "literal_string \"Invalid new owner address\""
															},
															"value": "Invalid new owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222",
																"typeString": "literal_string \"Invalid new owner address\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35728:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35728:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "35728:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1465,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "35822:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1462,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "35798:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MoneyAvaxReflectionToken_$1676_$",
																"typeString": "type(contract super MoneyAvaxReflectionToken)"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35804:17:0",
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "35798:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35798:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "35798:33:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1449,
												"name": "onlyOwner",
												"nameLocations": [
													"35708:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 399,
												"src": "35708:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35708:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "35656:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1448,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35699:8:0"
									},
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "35682:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "35674:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35673:18:0"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35718:0:0"
									},
									"scope": 1676,
									"src": "35647:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										413
									],
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "35899:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1475,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "35909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MoneyAvaxReflectionToken_$1676_$",
																"typeString": "type(contract super MoneyAvaxReflectionToken)"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35915:17:0",
														"memberName": "renounceOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "35909:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35909:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "35909:25:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1473,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1472,
												"name": "onlyOwner",
												"nameLocations": [
													"35889:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 399,
												"src": "35889:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35889:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "35853:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1471,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35880:8:0"
									},
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35870:2:0"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35899:0:0"
									},
									"scope": 1676,
									"src": "35844:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										898
									],
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "36037:198:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "36059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1493,
														"name": "_checkMaxTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "36047:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36047:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "36047:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "36093:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1499,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "36097:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1497,
														"name": "_tokenReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "36076:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36076:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "36076:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1503,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "36123:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "36127:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "_tokenLP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "36114:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36114:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "36114:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1508,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "36160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "36164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1507,
														"name": "_tokenMarketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "36144:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36144:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "36144:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1515,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "36196:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "36200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1512,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "36181:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MoneyAvaxReflectionToken_$1676_$",
																"typeString": "type(contract super MoneyAvaxReflectionToken)"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36187:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "36181:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36181:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "36181:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36224:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1492,
												"id": 1520,
												"nodeType": "Return",
												"src": "36217:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1488,
												"name": "nonReentrant",
												"nameLocations": [
													"36009:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "36009:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36009:12:0"
										}
									],
									"name": "transfer",
									"nameLocation": "35956:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36000:8:0"
									},
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35973:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "35965:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35985:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "35977:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35964:28:0"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "36031:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36031:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36030:6:0"
									},
									"scope": 1676,
									"src": "35947:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										974
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "36349:208:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "36371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1536,
														"name": "_checkMaxTx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "36359:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36359:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "36359:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "36405:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "36409:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "_tokenReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "36388:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36388:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "36388:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "36435:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1547,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "36439:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1545,
														"name": "_tokenLP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "36426:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36426:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "36426:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1551,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "36472:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1552,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "36476:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1550,
														"name": "_tokenMarketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "36456:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36456:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "36456:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "36512:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "36518:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "36522:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1555,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "36493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MoneyAvaxReflectionToken_$1676_$",
																"typeString": "type(contract super MoneyAvaxReflectionToken)"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36499:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 974,
														"src": "36493:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36493:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "36493:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "36546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1535,
												"id": 1564,
												"nodeType": "Return",
												"src": "36539:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1531,
												"name": "nonReentrant",
												"nameLocations": [
													"36321:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "36321:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36321:12:0"
										}
									],
									"name": "transferFrom",
									"nameLocation": "36250:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36312:8:0"
									},
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36271:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "36263:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36285:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "36277:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36297:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "36289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36262:42:0"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "36343:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36342:6:0"
									},
									"scope": 1676,
									"src": "36241:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "36614:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1572,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "36632:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1573,
																				"name": "MAX_TX_PERCENT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1391,
																				"src": "36643:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1574,
																				"name": "MAX_SUPPLY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1388,
																				"src": "36660:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36643:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1576,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36642:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36674:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "36642:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36632:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178207472616e73616374696f6e20616d6f756e74",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36679:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d",
																"typeString": "literal_string \"Exceeds max transaction amount\""
															},
															"value": "Exceeds max transaction amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f55ae6815dfdfb35faf31c9e38c52bf64d3d72c827fc76be01fb5a5548d4d4d",
																"typeString": "literal_string \"Exceeds max transaction amount\""
															}
														],
														"id": 1571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36624:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "36624:88:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1584,
																"name": "tradeEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "36730:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1585,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "36746:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "36750:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "36746:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1587,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "36760:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36760:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "36746:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "36730:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e67206e6f742079657420656e61626c6564",
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36769:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3",
																"typeString": "literal_string \"Trading not yet enabled\""
															},
															"value": "Trading not yet enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3",
																"typeString": "literal_string \"Trading not yet enabled\""
															}
														],
														"id": 1583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36722:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36722:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "36722:73:0"
											}
										]
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkMaxTx",
									"nameLocation": "36572:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "36584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36583:16:0"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36614:0:0"
									},
									"scope": 1676,
									"src": "36563:239:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "36871:112:0",
										"statements": [
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "reflectionAmount",
														"nameLocation": "36889:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "36881:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "36881:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1604,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "36909:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36918:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "36909:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1607,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "36908:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36923:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "36908:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36881:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "36955:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1615,
															"name": "reflectionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "36959:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1611,
															"name": "wethToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "36936:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$534",
																"typeString": "contract IERC20"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36946:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 483,
														"src": "36936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36936:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "36936:40:0"
											}
										]
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenReflection",
									"nameLocation": "36817:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36842:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "36834:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36854:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "36846:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36833:28:0"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36871:0:0"
									},
									"scope": 1676,
									"src": "36808:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "37044:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "lpPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "37058:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1627,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37068:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37068:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37058:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1649,
												"nodeType": "IfStatement",
												"src": "37054:134:0",
												"trueBody": {
													"id": 1648,
													"nodeType": "Block",
													"src": "37080:108:0",
													"statements": [
														{
															"assignments": [
																1633
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1633,
																	"mutability": "mutable",
																	"name": "lpAmount",
																	"nameLocation": "37102:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1648,
																	"src": "37094:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1632,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "37094:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1640,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1634,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1623,
																				"src": "37114:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37123:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "37114:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1637,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "37113:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37128:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "37113:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "37094:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1644,
																		"name": "lpPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "37160:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1645,
																		"name": "lpAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "37168:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1641,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "37145:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_MoneyAvaxReflectionToken_$1676_$",
																			"typeString": "type(contract super MoneyAvaxReflectionToken)"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "37151:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 898,
																	"src": "37145:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37145:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1647,
															"nodeType": "ExpressionStatement",
															"src": "37145:32:0"
														}
													]
												}
											}
										]
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenLP",
									"nameLocation": "36998:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37015:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "37007:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37027:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "37019:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37006:28:0"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37044:0:0"
									},
									"scope": 1676,
									"src": "36989:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "37262:119:0",
										"statements": [
											{
												"assignments": [
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "marketingAmount",
														"nameLocation": "37280:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "37272:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37272:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1666,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1660,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "37299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "37299:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1663,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "37298:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37313:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "37298:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37272:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1670,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "37341:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1671,
															"name": "marketingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "37358:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1667,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "37326:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MoneyAvaxReflectionToken_$1676_$",
																"typeString": "type(contract super MoneyAvaxReflectionToken)"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37332:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "37326:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37326:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "37326:48:0"
											}
										]
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenMarketing",
									"nameLocation": "37209:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37233:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "37225:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "37237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37224:28:0"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37262:0:0"
									},
									"scope": 1676,
									"src": "37200:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1677,
							"src": "34759:2624:0",
							"usedErrors": []
						}
					],
					"src": "189:37195:0"
				},
				"id": 0
			}
		}
	}
}